[
    {
        "id": "d2675214b54e2eb6",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "78555bf0b05aff6d",
        "type": "tab",
        "label": "Version No. in package.json",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1285e099664f8de3",
        "type": "tab",
        "label": "table demo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7862a34a08f3a48c",
        "type": "tab",
        "label": "tcp demo",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "6a5fd7c2.ab7598",
        "type": "tab",
        "label": "Example 1 : Navigation & Find Element",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f0421dd89023bcf4",
        "type": "tab",
        "label": "Example 2 : Cookies",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "344d20bdc278fdd1",
        "type": "tab",
        "label": "Example 3 : Frames",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b4a977197bd7a1f7",
        "type": "tab",
        "label": "Exemple 4 : Click & FindElements",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3badb0a6906eef7f",
        "type": "tab",
        "label": "uib-element tests",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "08281f5a146fee7f",
        "type": "tab",
        "label": "uib-sender",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "f748d0e6cc78a2ba",
        "type": "tab",
        "label": "uib-cache",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a29cf0664c167293",
        "type": "tab",
        "label": "Template Tests",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "23ace50339cc8aec",
        "type": "subflow",
        "name": "moc steps",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "cbba94598e0a31df"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "icon": "node-red/arduino.png"
    },
    {
        "id": "b8af3da32fdbe614",
        "type": "subflow",
        "name": "tcp leng con",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 260,
                "wires": [
                    {
                        "id": "eb7d2b46ed16ac4b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 260,
                "wires": [
                    {
                        "id": "f40b2f2237cc672d",
                        "port": 0
                    }
                ]
            },
            {
                "x": 640,
                "y": 320,
                "wires": [
                    {
                        "id": "acf0b0aeb68fe54e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Host",
                "type": "str",
                "value": ""
            },
            {
                "name": "envHost",
                "type": "env",
                "value": "HOST0"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 640,
            "y": 380,
            "wires": [
                {
                    "id": "55a21835a9136443",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c8fe8ba19da7f324",
        "type": "group",
        "z": "78555bf0b05aff6d",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "42756ea0549a795f",
            "c53869c217a976c7",
            "0f6087ee8ca774bc",
            "7124bb883a98fa69",
            "0acf576808478e7d",
            "03ee310610f6ba27",
            "5dfd7d40531ea9e8",
            "ae18ddb26fc89985",
            "c2fcef29dbe64088",
            "3bada01882d5c4c6",
            "bbc0e1fce90fa528",
            "863bb3a32aec973f",
            "14765ff34134b5bc"
        ],
        "x": 74,
        "y": 99
    },
    {
        "id": "789c0d02d76fa9f6",
        "type": "group",
        "z": "7862a34a08f3a48c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4c355020278b364b",
            "6b2ea9026db5ab1f",
            "fe9a63f58f45898e",
            "3a52babadb278923",
            "18ba3d166261a585",
            "a11dd86553a1860b",
            "1eba7e9f22f617e1",
            "b99d375491ef3a28",
            "7ae07e98ba2a6547",
            "b0acd6258de6b653",
            "116ae6d3ca413997"
        ],
        "x": 54,
        "y": 879
    },
    {
        "id": "35de261249cdd446",
        "type": "group",
        "z": "7862a34a08f3a48c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7e780e28a369d0c0",
            "304c1ef83519af82",
            "63516bb7e27ec895",
            "fe22f9cc6ffeb28d",
            "fa8a37b56f5a557c",
            "1b71f0c8ad1191cb",
            "74d8dd142a10b5f7",
            "aac97dd8bf68c2bd",
            "959cf28d075da866",
            "fdd5d4ea12b5e17d",
            "aabd71ac1fc04124",
            "b00ff63f4a49224d",
            "f1c2538819427ef6",
            "d741d535e1a17371",
            "0f80f1703f1327e7",
            "d34e177bb85ef18c",
            "1c6cb9fa85386b7b",
            "f37e58c999625122",
            "2c8e5a3872ff4680",
            "30123cdfc0e3e013",
            "4559eee0c3cbbaee"
        ],
        "x": 54,
        "y": 59
    },
    {
        "id": "56af672c3ae066b8",
        "type": "group",
        "z": "d2675214b54e2eb6",
        "name": "uibuilder report builder example \\n ",
        "style": {
            "fill": "#ffffff",
            "fill-opacity": "0.2",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "bdd00bc65ececfb2",
            "b77a8ab550aef26a",
            "4b423eb7794241f7",
            "48bca724c94ff6ad",
            "d0b0802620db38cd",
            "59718b678565eb7c",
            "bf4b37633885a3a1"
        ],
        "x": 144,
        "y": 879,
        "w": 762,
        "h": 282
    },
    {
        "id": "2d368cb9c96bdff7",
        "type": "group",
        "z": "d2675214b54e2eb6",
        "name": "uibuilder \"simple\" example",
        "style": {
            "fill": "#ffffff",
            "fill-opacity": "0.21",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "116a78405410289c",
            "8ecb7d35e9edab87",
            "312d0d91e2a9b622",
            "a9a02535264dd9ed",
            "fa042ed296e9de80",
            "bb3b15c09b085da2",
            "7845085b17f1686b",
            "054d34fec0aa457b",
            "cef55ea2491d8024",
            "3e4c1bb1d26f20ce"
        ],
        "x": 154,
        "y": 1259,
        "w": 972,
        "h": 202
    },
    {
        "id": "3cd8b7c5aae9d40b",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Base node. Change ALL URL's to match.",
        "style": {
            "label": true,
            "fill": "#ffffbf",
            "fill-opacity": "0.28",
            "color": "#3f3f3f"
        },
        "nodes": [
            "454da28ef00e68b6",
            "90794d03f65a40d4",
            "26fbd32ea1d00ff2",
            "a48c0beb68e76845",
            "c492d5d86eb0cfcb",
            "f0f4f6c5a20a1823",
            "195a61f93a912086",
            "c203417099e22d29",
            "d0ab82e45161ca1e",
            "262ab2295096703e",
            "88abbd5438821f7a",
            "6221e2b8f2b50df8",
            "0dd33ba823c0af7b"
        ],
        "x": 34,
        "y": 79,
        "w": 682,
        "h": 242
    },
    {
        "id": "e1901bb3da85dd78",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Create a Unordered or Ordered List from a simple input. Change the URL to match the base.",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.29",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "51db7182c8c27901",
            "0fe568807e7bd394",
            "496418a44a66cc5e",
            "0f1d399c3f14e113",
            "560371c044ee9e19"
        ],
        "x": 54,
        "y": 339,
        "w": 682,
        "h": 162
    },
    {
        "id": "0f5c35ef5c4bf8f5",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Create a Description List from a simple input. Change the URL to match the base",
        "style": {
            "label": true,
            "fill": "#bfdbef",
            "fill-opacity": "0.4",
            "color": "#3f3f3f"
        },
        "nodes": [
            "af9ee48ee4da8b11",
            "168cfe507c55796a",
            "03979555908332c4",
            "d08a2076e8158929",
            "8fc4bf76f457ae68",
            "95a6c6f3e84b4fea"
        ],
        "x": 34,
        "y": 859,
        "w": 722,
        "h": 202
    },
    {
        "id": "0f3fbb9e84943e6b",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Create a table from simple input. Change the URL to match the base",
        "style": {
            "fill": "#dbcbe7",
            "fill-opacity": "0.3",
            "label": true,
            "color": "#3f3f3f"
        },
        "nodes": [
            "e30d349d9b3399c8",
            "d58b7efe68a2da4d",
            "d52bbc4c5096d4ba",
            "4ce558165663c95b",
            "900f97b2b079f1bf",
            "f38d46523be0c1fe"
        ],
        "x": 34,
        "y": 1147,
        "w": 852,
        "h": 174
    },
    {
        "id": "8049618125109f32",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Chaining test. Outputs from the uib-element node can be sent onwards as long as intermediate nodes retain the msg._ui property \\n ",
        "style": {
            "fill": "#ffefbf",
            "fill-opacity": "0.29",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "14ded4d1dc70efbf",
            "d3cda6078ae9ca73",
            "d3a95abaddc5c013",
            "ec046fe7e55e944c",
            "cef57eb67e055c56",
            "b18b8a4c83135013",
            "f042b949d4143ac6"
        ],
        "x": 34,
        "y": 2183,
        "w": 1002,
        "h": 214
    },
    {
        "id": "263bd5d828fb96be",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "HTML Passthrough. Input HTML is wrapped in a DIV \\n ",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "07f1643db81c0995",
            "20deb97725012b7e",
            "da18127ca09d0758",
            "9eed5fe003f16b5e",
            "f02b2b567a27e3bf"
        ],
        "x": 34,
        "y": 1723,
        "w": 642,
        "h": 138
    },
    {
        "id": "161798c0ebe14c60",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Dynamically change the page title, description and 1st H1 tag on the page \\n ",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9b8878a8a530e1b9",
            "7ed058d7900e3daa",
            "d94e668db5709de3"
        ],
        "x": 34,
        "y": 1903,
        "w": 482,
        "h": 98
    },
    {
        "id": "65795642cec1af50",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Dynamically add a row to an existing table \\n ",
        "style": {
            "fill": "#dbcbe7",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "58968670b8adf81b",
            "b8338b38fa0f261f",
            "a05186890868f6cb"
        ],
        "x": 134,
        "y": 1363,
        "w": 482,
        "h": 98
    },
    {
        "id": "42a2b3e7d6c165bf",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Dynamically add a textbox \\n ",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e1795c2c54ee3880",
            "0ff90fd3f27b33be",
            "8b561177d69cb6d3",
            "6e5aada95fc82d83"
        ],
        "x": 34,
        "y": 2023,
        "w": 582,
        "h": 138
    },
    {
        "id": "08f358ec9af4dfc2",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Dynamically add a row to an existing list. Update the list style for an entry \\n ",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f8db205586825dcd",
            "474079d2dd072158",
            "685760eb828baa61",
            "5df757879277f3a3",
            "c2dcca959c44112c",
            "c87017ebcab8dc1a",
            "e51ee02c0622e551",
            "92af2057a4b6218f"
        ],
        "x": 94,
        "y": 523,
        "w": 722,
        "h": 298
    },
    {
        "id": "f6154314aee80d24",
        "type": "group",
        "z": "3badb0a6906eef7f",
        "name": "Dynamically insert an input form with auto-send data to node-red via a button. \\n ",
        "style": {
            "fill": "#e3f3d3",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ede83b9af785c506",
            "3923739d82142906",
            "534ccd905d0adc50",
            "85fd31019802a001",
            "f6094a474faf5649",
            "495d6cfe53a5351a"
        ],
        "x": 34,
        "y": 1503,
        "w": 652,
        "h": 178
    },
    {
        "id": "2b82c232b05410a5",
        "type": "group",
        "z": "08281f5a146fee7f",
        "name": "Main uibuilder node \\n ",
        "style": {
            "label": true
        },
        "nodes": [
            "c6d5ea48b39d1428",
            "be455b4d4caff567",
            "ef16c5036419f2d1",
            "6a22f49cbb9a5929"
        ],
        "x": 34,
        "y": 263,
        "w": 602,
        "h": 138
    },
    {
        "id": "43efdb3cb9d5a750",
        "type": "group",
        "z": "08281f5a146fee7f",
        "name": "uib-sender node \\n ",
        "style": {
            "label": true
        },
        "nodes": [
            "2646630c56235673",
            "1251bc74cd96765c",
            "50c73c4d00f6ba6c"
        ],
        "x": 34,
        "y": 423,
        "w": 602,
        "h": 98
    },
    {
        "id": "c582e19b78889a25",
        "type": "group",
        "z": "f748d0e6cc78a2ba",
        "name": "Test uibuilder cache node without uibuilder \\n ",
        "style": {
            "fill": "#ffefbf",
            "fill-opacity": "0.34",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "4a1f0bc164fe96de",
            "d948fc054b6c30ce",
            "fd7084be579b5186",
            "c4e341169cc82e9a",
            "5e8d1fafc5a22dd0",
            "1e87041b4bddbcba",
            "5a8f49f1dff31d2f",
            "8ea537cb67792d7f",
            "122489d70f19ca24",
            "0768c71d136a2c86",
            "d3685f462ab15042"
        ],
        "x": 54,
        "y": 83,
        "w": 932,
        "h": 278
    },
    {
        "id": "124607d308a0f6a6",
        "type": "group",
        "z": "f748d0e6cc78a2ba",
        "name": "Example of using the cache with uibuilder. Add 3 lists to the page then reload, only 2 re-appear. \\n ",
        "style": {
            "label": true,
            "fill": "#ffffff",
            "fill-opacity": "0.21",
            "color": "#000000"
        },
        "nodes": [
            "9c253e4c5651a568",
            "acccaec15b621319",
            "594248fc5dc5f799",
            "445a19cff9f8da1f",
            "f9af5b7d2545e9e5",
            "06327985e9dae780",
            "c6306e9378b9c1f2",
            "ed061d1aaea36b27",
            "2fac9874556f1c88",
            "4330971395e0a4b9",
            "49d6a6f1bd5358ee",
            "ac3988907ad3ccaa",
            "95d8b757da5c9fd4",
            "417119b1765dd5b1",
            "309727329638650e",
            "c13e434afccaa153",
            "fc7585830654783a",
            "0555cd3fcd3edcfb",
            "5e202f9e5b6827e6",
            "c3bdf6f53c48a1e0"
        ],
        "x": 54,
        "y": 383,
        "w": 1072,
        "h": 378
    },
    {
        "id": "fc8f1db4547ef664",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "Vue v3 IIFE client, no build - Check description in each node \\n ",
        "style": {
            "label": true,
            "fill": "#ffffff",
            "fill-opacity": "0.26",
            "color": "#000000"
        },
        "nodes": [
            "c3bd76ce441dc3e3",
            "3439dbee433a88a8",
            "909a45a07adf4caf",
            "6c14431f469b8846",
            "e47195b8eda5d40e",
            "0c9f24ab06ee0405",
            "89ae80c659089985",
            "caf50be69279b624",
            "92f0587559df7590",
            "d48166077d1f76af",
            "3e569dd871349f93",
            "dd004a6a442ee6a8",
            "ce9a12ba5070f920",
            "c969ddb33e099a82"
        ],
        "x": 34,
        "y": 1843
    },
    {
        "id": "d7ec253e417f16b6",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "uibuilder IIFE client build with Vue v2 and bootstrap-vue (Full example) \\n ",
        "style": {
            "label": true,
            "fill": "#ffffff",
            "fill-opacity": "0.27",
            "color": "#000000"
        },
        "nodes": [
            "284121dd33dcd50b",
            "4b0be73d7c1879b9",
            "6f8e51db50f117dd",
            "d7ce360f9e714a57",
            "d32229867aa7e3c6",
            "688f3cc99964f88d",
            "802bd5f9321628ad",
            "955997a9e7fb3c28",
            "a0976141d22bd12f",
            "9a7af1b5ee3353ba",
            "7ee9528a1b19eb12",
            "81bf7609272ef9af",
            "c1d0beb7a8dcf573",
            "1b6a3d16ed9f9995",
            "5d26dd3c341a40b3"
        ],
        "x": 34,
        "y": 1563
    },
    {
        "id": "1f80e4a191d5322a",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "uibuilder IIFE client build with Vue v2 and bootstrap-vue (Minimal Example) \\n ",
        "style": {
            "label": true,
            "fill": "#ffffff",
            "fill-opacity": "0.27",
            "color": "#000000"
        },
        "nodes": [
            "251344c859a9f066",
            "9df22ce79ef39e07",
            "5028e29f49a5591f",
            "2a3a787b6520cef9",
            "5e40aeef2599e4e1",
            "d8c57c9cbfba6417",
            "5f2a84a134a770d7",
            "c90fa14f3bcd1b5a",
            "04b7fe83187b26ed",
            "c8177e230bf224db",
            "079a6828b01e3ca4",
            "168b498f7d93b9ca",
            "35591e8d08b9a8dc",
            "949ddd795829e86e",
            "2a6997fca56f2de1"
        ],
        "x": 774,
        "y": 1563
    },
    {
        "id": "946ef719ea12bc08",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "Vue v3 ESM, no build - Check description in each node - Can load components without a build step on modern browsers\\n ",
        "style": {
            "label": true,
            "fill": "#ffffff",
            "fill-opacity": "0.26",
            "color": "#000000"
        },
        "nodes": [
            "6eba307faa3c48e2",
            "3ff7fd7992d48c25",
            "f8f90bfd46b1f53e",
            "e340bdc745361401",
            "fb79d887323f47c1",
            "169c10878b6640e4",
            "97f0c2ea900e3055",
            "8db08ddd2a866fb5",
            "d66f87eca883848e",
            "619d338c7eba7669",
            "7ce2b59950e22ecb",
            "b9a054a3ff5f393d",
            "29bf34be48a50467",
            "31310a6648a194ce"
        ],
        "x": 774,
        "y": 1843
    },
    {
        "id": "d14e5cf8cd61d8f5",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "A vanilla, blank template. Ready for anything. \\n ",
        "style": {
            "label": true,
            "fill": "#ffffbf",
            "fill-opacity": "0.33",
            "color": "#000000"
        },
        "nodes": [
            "01f14b086d7f8a11",
            "877b43edd7251acc",
            "17fde0242e191689",
            "7eee677cb9a62723",
            "d0621a8f51f507bb",
            "f012975f0375b6c8",
            "cb80cc034da2d8f1",
            "736993a690bbc167",
            "0df7b796d44d2e71",
            "d121c8e3e56c4747",
            "9eb1553c08864316",
            "0368db6d7d446339",
            "f12f44c1b6da7192",
            "41fd7d11ae3c157d",
            "5ac8daccaea4a291",
            "89bf36d6fc8d1d41",
            "e4f674b5eb32aa05",
            "7011f3686a81d7eb",
            "c0abb8e9c5a1262c",
            "9cf758cd9a3eda81",
            "3c2b5cb8448dbb64"
        ],
        "x": 24,
        "y": 83
    },
    {
        "id": "31c2d342f75d0ef8",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "Extended version of the \"blank\" template showing some additional features. \\n ",
        "style": {
            "label": true,
            "fill": "#ffffbf",
            "fill-opacity": "0.31",
            "color": "#000000"
        },
        "nodes": [
            "d0b6170b92cd6064",
            "9a4f424c76119444",
            "2cb6722e802cf5f1",
            "5003addd448138c2",
            "ba221f812ae3d84c",
            "4020b64008bfdad5",
            "be06a0df26c00462",
            "f95e69f67072596b",
            "5d1231ce8247b08a",
            "1b7e4c189916dbec",
            "05cb4b03058fc6f8",
            "71fa902dccb4cb5a"
        ],
        "x": 24,
        "y": 463
    },
    {
        "id": "40dcfdd7e47f8573",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "Extended version of simple template using the ES Module version of the client \\n ",
        "style": {
            "fill": "#ffffbf",
            "fill-opacity": "0.32",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d12df878ac1b5714",
            "b921d7d1a7e06035",
            "8ca1a701441a31fa",
            "598ecb0adfa8fc5a",
            "599391803941e233",
            "958c94c7f03a6624",
            "5a3c5e4b8751fea2",
            "863c33dc4dab0216",
            "6e760e4d72cb74a7",
            "0ce0de04fb70fda9",
            "ca0007816b9f4419",
            "b28745cf103fce72"
        ],
        "x": 34,
        "y": 763
    },
    {
        "id": "ae89de23bbb814c1",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "uibuilder IIFE client in conjunction with Svelte",
        "style": {
            "fill": "#bfc7d7",
            "fill-opacity": "0.31",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ec93b864b4127859",
            "ab686ecd6ae447e3",
            "1e26ba1f939b35a4",
            "a9e607e92e5e2c93",
            "53f930dee4d661c0",
            "a75bacf5b8e676fb",
            "c6965c37441712a2",
            "28cb6bf6fb33f77c",
            "1813ac9ca8eeb177",
            "85733cc425b92915",
            "f0c89ce59299d66c",
            "43b416daeed4d5cb",
            "6b8fde3712999f7e"
        ],
        "x": 34,
        "y": 1079
    },
    {
        "id": "cb13651b4e3aee58",
        "type": "group",
        "z": "a29cf0664c167293",
        "name": "Old \"Blank\" template using uibuilderfe client - should no longer be used - kept for reference \\n ",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.26",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ddb950ebb37ff3e5",
            "ca085978f7a1d622",
            "7b2410170a094534",
            "cfd5eba13fe03d51",
            "6238dd35c69f44f6",
            "c458491d5a2fb1e2",
            "398b84708d487dad",
            "e03509eff4a1c892"
        ],
        "x": 34,
        "y": 2223
    },
    {
        "id": "43b416daeed4d5cb",
        "type": "group",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "Add/remove dynamic list",
        "style": {
            "label": true,
            "fill": "#ffffff",
            "fill-opacity": "0.5",
            "color": "#777777"
        },
        "nodes": [
            "7580041a7e962524",
            "d2c23f660fba67cf",
            "bc0a93a1ec21c077"
        ],
        "x": 74,
        "y": 1379,
        "info": "Demonstrates that uibuilder's dynamic ui\r\nfeatures work with Svelte."
    },
    {
        "id": "bf4b37633885a3a1",
        "type": "junction",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "bdd00bc65ececfb2"
            ]
        ]
    },
    {
        "id": "0bec2ac4dafe4923",
        "type": "junction",
        "z": "d2675214b54e2eb6",
        "x": 380,
        "y": 240,
        "wires": [
            [
                "b4d27e1126cdf143"
            ]
        ]
    },
    {
        "id": "b4d27e1126cdf143",
        "type": "junction",
        "z": "d2675214b54e2eb6",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "a5f1a3f84ba73fa0"
            ]
        ]
    },
    {
        "id": "fdc64fad892ec641",
        "type": "junction",
        "z": "d2675214b54e2eb6",
        "x": 340,
        "y": 240,
        "wires": [
            [
                "0bec2ac4dafe4923"
            ]
        ]
    },
    {
        "id": "195a61f93a912086",
        "type": "junction",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "x": 340,
        "y": 160,
        "wires": [
            [
                "90794d03f65a40d4"
            ]
        ]
    },
    {
        "id": "c13e434afccaa153",
        "type": "junction",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "x": 320,
        "y": 640,
        "wires": [
            [
                "0555cd3fcd3edcfb"
            ]
        ]
    },
    {
        "id": "fc7585830654783a",
        "type": "junction",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "x": 800,
        "y": 560,
        "wires": [
            [
                "c6306e9378b9c1f2"
            ]
        ]
    },
    {
        "id": "0368db6d7d446339",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "x": 390,
        "y": 200,
        "wires": [
            [
                "877b43edd7251acc"
            ]
        ]
    },
    {
        "id": "d48166077d1f76af",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "x": 410,
        "y": 1960,
        "wires": [
            [
                "909a45a07adf4caf"
            ]
        ]
    },
    {
        "id": "05cb4b03058fc6f8",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "x": 330,
        "y": 580,
        "wires": [
            [
                "d0b6170b92cd6064"
            ]
        ]
    },
    {
        "id": "e03509eff4a1c892",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "x": 340,
        "y": 2320,
        "wires": [
            [
                "ddb950ebb37ff3e5"
            ]
        ]
    },
    {
        "id": "ca0007816b9f4419",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "x": 340,
        "y": 880,
        "wires": [
            [
                "d12df878ac1b5714"
            ]
        ]
    },
    {
        "id": "7ee9528a1b19eb12",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "x": 420,
        "y": 1680,
        "wires": [
            [
                "4b0be73d7c1879b9"
            ]
        ]
    },
    {
        "id": "81bf7609272ef9af",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "x": 340,
        "y": 1620,
        "wires": [
            [
                "7ee9528a1b19eb12"
            ]
        ]
    },
    {
        "id": "c1d0beb7a8dcf573",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "x": 340,
        "y": 1740,
        "wires": [
            [
                "7ee9528a1b19eb12"
            ]
        ]
    },
    {
        "id": "1b6a3d16ed9f9995",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "x": 340,
        "y": 1700,
        "wires": [
            [
                "7ee9528a1b19eb12"
            ]
        ]
    },
    {
        "id": "3e569dd871349f93",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "x": 350,
        "y": 2020,
        "wires": [
            [
                "d48166077d1f76af"
            ]
        ]
    },
    {
        "id": "dd004a6a442ee6a8",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "x": 350,
        "y": 1980,
        "wires": [
            [
                "d48166077d1f76af"
            ]
        ]
    },
    {
        "id": "079a6828b01e3ca4",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "x": 1160,
        "y": 1680,
        "wires": [
            [
                "9df22ce79ef39e07"
            ]
        ]
    },
    {
        "id": "168b498f7d93b9ca",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "079a6828b01e3ca4"
            ]
        ]
    },
    {
        "id": "35591e8d08b9a8dc",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "x": 1080,
        "y": 1740,
        "wires": [
            [
                "079a6828b01e3ca4"
            ]
        ]
    },
    {
        "id": "949ddd795829e86e",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "x": 1080,
        "y": 1700,
        "wires": [
            [
                "079a6828b01e3ca4"
            ]
        ]
    },
    {
        "id": "f0c89ce59299d66c",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "x": 360,
        "y": 1240,
        "wires": [
            [
                "ab686ecd6ae447e3"
            ]
        ]
    },
    {
        "id": "d66f87eca883848e",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "x": 1160,
        "y": 1960,
        "wires": [
            [
                "31310a6648a194ce"
            ]
        ]
    },
    {
        "id": "619d338c7eba7669",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "x": 1090,
        "y": 2020,
        "wires": [
            [
                "d66f87eca883848e"
            ]
        ]
    },
    {
        "id": "7ce2b59950e22ecb",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "x": 1090,
        "y": 1980,
        "wires": [
            [
                "d66f87eca883848e"
            ]
        ]
    },
    {
        "id": "f12f44c1b6da7192",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "0368db6d7d446339"
            ]
        ]
    },
    {
        "id": "3c2b5cb8448dbb64",
        "type": "junction",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "7011f3686a81d7eb"
            ]
        ]
    },
    {
        "id": "625872f.40b1e8c",
        "type": "ui_group",
        "name": "Default",
        "tab": "58c2aa06.ef46e4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "58c2aa06.ef46e4",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "02f3d01ee7ecee8a",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "571a38b1.5e3638",
        "type": "ui_group",
        "name": "Richer Table",
        "tab": "29ec6908.552b36",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "29ec6908.552b36",
        "type": "ui_tab",
        "name": "Home",
        "icon": "track_changes",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "51ce6aa1.620754",
        "type": "ui_group",
        "name": "ui_control",
        "tab": "3b08fac0.8f06b6",
        "order": 1,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "3b08fac0.8f06b6",
        "type": "ui_tab",
        "name": "Home",
        "icon": "track_changes",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "237da972.5d69a6",
        "type": "ui_group",
        "name": "ui-table with commands",
        "tab": "379a501f.53b59",
        "order": 1,
        "disp": true,
        "width": "17",
        "collapse": false
    },
    {
        "id": "c91332c0.50c11",
        "type": "ui_group",
        "name": "commands",
        "tab": "379a501f.53b59",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "379a501f.53b59",
        "type": "ui_tab",
        "name": "ui-table command",
        "icon": "fa-table",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "113a4af6.0aab85",
        "type": "ui_group",
        "name": "ui-table Copy & Paste",
        "tab": "a1c14418.954cd8",
        "order": 1,
        "disp": true,
        "width": "17",
        "collapse": false
    },
    {
        "id": "a1c14418.954cd8",
        "type": "ui_tab",
        "name": "ui-table test",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ff9fdb9a.7da098",
        "type": "ui_group",
        "name": "TEST",
        "tab": "7dcc246f.ee661c",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "7dcc246f.ee661c",
        "type": "ui_tab",
        "name": "TEST",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bcfb993d.8c84a",
        "type": "ui_tab",
        "name": "TableTest",
        "icon": "dashboard",
        "order": 0,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a005132f.6196e8",
        "type": "ui_group",
        "name": "Without Quotation",
        "tab": "bcfb993d.8c84a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1885673b.2145c1",
        "type": "ui_group",
        "name": "Quotes in TableName",
        "tab": "bcfb993d.8c84a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9971c312.3702d8",
        "type": "ui_group",
        "name": "Quotes in Column Title",
        "tab": "bcfb993d.8c84a",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "47f6a8.a2c36158",
        "type": "ui_group",
        "name": "Quotes in Description",
        "tab": "bcfb993d.8c84a",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "58a8895c.e04f28",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "1da6d3da.8557bc",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "1da6d3da.8557bc",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cbba94598e0a31df",
        "type": "function",
        "z": "23ace50339cc8aec",
        "name": "hexBuffer2str",
        "func": "\nfunction hexBuffer2str(BufferArray) {\n    let hexArray = [];\n    for (let i = 0; i < BufferArray.length; i++) {\n        let hex = BufferArray[i].toString(16).toUpperCase().padStart(2, '0');\n        hexArray.push(hex);\n    }\n    return hexArray.join(' ');\n}\n\nmsg.payload = hexBuffer2str(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 140,
        "wires": [
            [
                "4d0197c9806cfa57"
            ]
        ]
    },
    {
        "id": "4d0197c9806cfa57",
        "type": "switch",
        "z": "23ace50339cc8aec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "02",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 280,
        "wires": [
            [
                "e7b7867e3c4accc5"
            ],
            [
                "152a7b7fc8ad7c4a"
            ],
            [
                "c14581f102a05570"
            ]
        ]
    },
    {
        "id": "e7b7867e3c4accc5",
        "type": "change",
        "z": "23ace50339cc8aec",
        "name": "mock result 01",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "61 61",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 200,
        "wires": [
            [
                "3547e46498d23d29"
            ]
        ]
    },
    {
        "id": "3547e46498d23d29",
        "type": "function",
        "z": "23ace50339cc8aec",
        "name": "str2bufferArray",
        "func": "var cmd_buffer_array = msg.payload.split(' ').map((s) => parseInt(s, 16));\n\nvar command_for_tcp = {\n    _session: msg._session,\n    host: msg.host,\n    port:msg.port\n}\ncommand_for_tcp.payload = Buffer.from(cmd_buffer_array);\n\nreturn command_for_tcp;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "73c11b3d0c3746d6"
            ]
        ]
    },
    {
        "id": "73c11b3d0c3746d6",
        "type": "tcp out",
        "z": "23ace50339cc8aec",
        "name": "reply: all open connections will be messaged",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "x": 1130,
        "y": 540,
        "wires": []
    },
    {
        "id": "c14581f102a05570",
        "type": "change",
        "z": "23ace50339cc8aec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "73c11b3d0c3746d6"
            ]
        ]
    },
    {
        "id": "152a7b7fc8ad7c4a",
        "type": "change",
        "z": "23ace50339cc8aec",
        "name": "mock result 02",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "35 2A",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "3547e46498d23d29",
                "39693f46502c2b29"
            ]
        ]
    },
    {
        "id": "39693f46502c2b29",
        "type": "delay",
        "z": "23ace50339cc8aec",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 340,
        "wires": [
            [
                "3547e46498d23d29"
            ]
        ]
    },
    {
        "id": "f40b2f2237cc672d",
        "type": "tcp request",
        "z": "b8af3da32fdbe614",
        "name": "tcp client",
        "server": "",
        "port": "",
        "out": "sit",
        "ret": "buffer",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 500,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "55a21835a9136443",
        "type": "status",
        "z": "b8af3da32fdbe614",
        "name": "",
        "scope": [
            "f40b2f2237cc672d"
        ],
        "x": 380,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "eb7d2b46ed16ac4b",
        "type": "change",
        "z": "b8af3da32fdbe614",
        "name": "localhost 1234",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "envHost",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "port0",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "f40b2f2237cc672d"
            ]
        ]
    },
    {
        "id": "acf0b0aeb68fe54e",
        "type": "catch",
        "z": "b8af3da32fdbe614",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 380,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1c4ef0d6ce86d0c2",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 260,
        "wires": []
    },
    {
        "id": "aee7ce05f216dc40",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "http://localhost:1880/",
        "payloadType": "str",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "fdc64fad892ec641"
            ]
        ]
    },
    {
        "id": "a5f1a3f84ba73fa0",
        "type": "os",
        "z": "d2675214b54e2eb6",
        "name": "",
        "property": "cpus",
        "x": 550,
        "y": 260,
        "wires": [
            [
                "1c4ef0d6ce86d0c2"
            ],
            []
        ]
    },
    {
        "id": "96639365.2535b",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 600,
        "wires": []
    },
    {
        "id": "14614bbd.8189d4",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "name": "testcase's result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 660,
        "wires": []
    },
    {
        "id": "bd66d7a6.3da5e8",
        "type": "delay",
        "z": "d2675214b54e2eb6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 420,
        "y": 600,
        "wires": [
            [
                "fff921a.51a9fe"
            ]
        ]
    },
    {
        "id": "fff921a.51a9fe",
        "type": "function",
        "z": "d2675214b54e2eb6",
        "name": "msg.payload.toUpperCase",
        "func": "\nnode.warn(msg.payload);\nif(msg.payload)\nmsg.payload = msg.payload.toUpperCase();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 645,
        "y": 600,
        "wires": [
            [
                "9516c77.67cb238",
                "96639365.2535b"
            ]
        ]
    },
    {
        "id": "51084472.24f87c",
        "type": "flow-asserter in",
        "z": "d2675214b54e2eb6",
        "name": "",
        "testcases": [
            {
                "testId": 0,
                "input": "aaa",
                "inputType": "str",
                "operator": "eq",
                "assert": "AAA",
                "assertType": "str"
            }
        ],
        "onlyfail": false,
        "flowasserterout": "9516c77.67cb238",
        "x": 245,
        "y": 660,
        "wires": [
            [
                "bd66d7a6.3da5e8"
            ],
            [
                "14614bbd.8189d4"
            ]
        ]
    },
    {
        "id": "9516c77.67cb238",
        "type": "flow-asserter out",
        "z": "d2675214b54e2eb6",
        "name": "xxx",
        "x": 780,
        "y": 660,
        "wires": [
            [
                "96639365.2535b"
            ]
        ]
    },
    {
        "id": "c2a7b255.38e64",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "aaa",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "aaa",
        "payloadType": "str",
        "x": 260,
        "y": 600,
        "wires": [
            [
                "bd66d7a6.3da5e8"
            ]
        ]
    },
    {
        "id": "3af10b6e.bb63a4",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 910,
        "y": 450,
        "wires": []
    },
    {
        "id": "50cced2b.3b3cb4",
        "type": "delay",
        "z": "d2675214b54e2eb6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 420,
        "y": 450,
        "wires": [
            [
                "ec7db30c.9442d"
            ]
        ]
    },
    {
        "id": "ec7db30c.9442d",
        "type": "function",
        "z": "d2675214b54e2eb6",
        "name": "msg.payload.toUpperCase",
        "func": "msg.payload = msg.payload.toUpperCase();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 645,
        "y": 450,
        "wires": [
            [
                "3af10b6e.bb63a4"
            ]
        ]
    },
    {
        "id": "541083d1.eef69c",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "aaa",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "aaa",
        "payloadType": "str",
        "x": 260,
        "y": 450,
        "wires": [
            [
                "50cced2b.3b3cb4"
            ]
        ]
    },
    {
        "id": "92012024.64b55",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "name": "Add flow-asserter",
        "info": "",
        "x": 185,
        "y": 555,
        "wires": []
    },
    {
        "id": "82263acc.4c26f8",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "name": "Intact flow",
        "info": "",
        "x": 165,
        "y": 405,
        "wires": []
    },
    {
        "id": "bdd00bc65ececfb2",
        "type": "uibuilder",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "name": "",
        "topic": "",
        "url": "uib-report-example",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0-beta",
        "showMsgUib": true,
        "x": 500,
        "y": 1080,
        "wires": [
            [
                "4b423eb7794241f7"
            ],
            [
                "48bca724c94ff6ad"
            ]
        ],
        "info": "This example uses a blank template with\r\nthe IIFE build of the front-end client.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript.\r\n"
    },
    {
        "id": "b77a8ab550aef26a",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 260,
        "y": 1100,
        "wires": [
            [
                "bf4b37633885a3a1"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "4b423eb7794241f7",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 750,
        "y": 1040,
        "wires": [],
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "48bca724c94ff6ad",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 655,
        "y": 1120,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "d0b0802620db38cd",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "name": "Low-code report building with the help of uibuilder \\n Chk Description in each node & in here \\n You need to add a line to the HTML so that the Markdown output works correctly, see within",
        "info": "To get the Markdown outputs to display,\nplease add the following line to the html\nfile before the reference to uibuilder's\nlibrary:\n\n```\n<script defer src=\"https://cdn.jsdelivr.net/npm/markdown-it@latest/dist/markdown-it.min.js\">/* Allows Markdown to be used in msg._ui */</script>\n```\n\n---\n\nThis example starts with the standard IIFE \nuibuilder template. You will note, however,\nthat you can remove all of the body HTML\nand it will still work.\n\nThis is because all of the important text,\ntables and layout are created dynamically\nusing a standardised configuration schema.\n\nThe schema used by uibuilder is actually\nquite similar, at least in concept, to that\nused by pdfmaker which was the inspiration\nfor this example. I didn't know about pdfmaker\nwhen I designed the config-driven aspects of\nuibuilder and it is comforting to know that I\ncame up with a similar solution to a similar\nproblem.\n\nOutput to HTML is far more flexible than\noutput to PDF via pdfmaker though and it will\ncontinue to grow and improve as HMTL and CSS do.\n\nYou can still output the resulting page to\nPDF very easily though.\n\n---\n\nFull documentation for uibuilder's low-code,\nconfiguration-driven UI creation capabilities\nis available in the documentation:\n\nhttps://totallyinformation.github.io/node-red-contrib-uibuilder/#/uibuilder.module?id=dynamic-data-driven-html-content-1",
        "x": 480,
        "y": 960,
        "wires": []
    },
    {
        "id": "59718b678565eb7c",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "g": "56af672c3ae066b8",
        "name": "",
        "props": [
            {
                "p": "_ui",
                "v": "[{\"method\":\"remove\",\"components\":[\"#ui-test\"]},{\"method\":\"add\",\"components\":[{\"type\":\"main\",\"id\":\"ui-test\",\"parent\":\"#more\",\"components\":[{\"type\":\"h1\",\"slot\":\"uibuilder Low-Code Tests: Tables\"},{\"type\":\"p\",\"slot\":\"This is an example of using uibuilder's low-code, config-driven page builder. It is based on the TABLES example from <a href='http://pdfmake.org/playground.html' target='_blank'>pdfmake</a>. This is partly to demonstrate that pdfmake and uibuilder use related principals for similar outcomes.\"},{\"type\":\"p\",\"slot\":\"In addition, it demonstrates how to create a complex HTML report layout dynamically direct from Node-RED using a standardised configuration and data-driven, low-code methodology.\"},{\"type\":\"p\",\"slot\":\"It would be easy to directly print this to paper or print/save to PDF.\"},{\"type\":\"p\",\"slot\":\"Of course, much of the output configuration could also be dynamcially created from other data rather than being specified manually as in this example. Change the input from JSON to Expression for example in order to use JSONata to include data from an input msg.\"},{\"type\":\"p\",\"slot\":\"The input in this example is set up so that re-sending the data, removes and re-add's the entire thing. This should not be noticable in the browser. Try changing some data and resending to see the effect.\"},{\"type\":\"p\",\"slot\":\"Except where mentioned in the tables themselves, the majority of the styling comes from the pre-loaded uibuilder stylesheet. Of course, you can replace this with your own.\"},{\"type\":\"article\",\"components\":[{\"type\":\"h2\",\"slot\":\"A simple table (no style overrides)\"},{\"type\":\"p\",\"slot\":\"Nothing more than a couple of unstyled rows and columns. No headings.\"},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Column 1\"},{\"type\":\"td\",\"slot\":\"Column 2\"},{\"type\":\"td\",\"slot\":\"Column 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"One value goes here\"},{\"type\":\"td\",\"slot\":\"Another one here\"},{\"type\":\"td\",\"slot\":\"OK\"}]}]}]},{\"type\":\"article\",\"components\":[{\"type\":\"h2\",\"slot\":\"A simple table with nested elements\"},{\"type\":\"p\",\"slot\":\"It is of course possible to nest any other type of nodes available in <del>pdfmake</del> uibuilder/HTML inside table cells.\"},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Column 1\"},{\"type\":\"td\",\"slot\":\"Column 2\"},{\"type\":\"td\",\"slot\":\"Column 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Let's try an unordered list\",\"components\":[{\"type\":\"ul\",\"components\":[{\"type\":\"li\",\"slot\":\"Item 1\"},{\"type\":\"li\",\"slot\":\"Item 2\"}]}]},{\"type\":\"td\",\"slot\":\"or a nested table\",\"components\":[{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"th\",\"slot\":\"Col 1\"},{\"type\":\"th\",\"slot\":\"Col 2\"},{\"type\":\"th\",\"slot\":\"Col 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"R1C1\"},{\"type\":\"td\",\"slot\":\"R1C2\"},{\"type\":\"td\",\"slot\":\"R1C3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"R2C1\"},{\"type\":\"td\",\"slot\":\"R2C2\"},{\"type\":\"td\",\"slot\":\"R2C3\"}]}]}]},{\"type\":\"td\",\"slotMarkdown\":\"Inlines can be _styled_ easily as everywhere else. Even using Markdown!\"}]}]}]},{\"type\":\"article\",\"components\":[{\"type\":\"h2\",\"slot\":\"Defining column widths\"},{\"type\":\"p\",\"slotMarkdown\":\"~~Tables support the same width definitions as standard columns~~ HTML is different to pdfmaker here since styling is done using CSS.\"},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"attributes\":{\"style\":\"width:100em;\"},\"slot\":\"width:100em\"},{\"type\":\"td\",\"slot\":\"Unsized\"},{\"type\":\"td\",\"attributes\":{\"style\":\"width:25%;\"},\"slot\":\"width:25%\"},{\"type\":\"td\",\"slot\":\"Unsized\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"fixed-width cells have exactly the specified width\"},{\"type\":\"td\",\"slotMarkdown\":\"_nothing interesting here_\"},{\"type\":\"td\",\"slotMarkdown\":\"_nothing interesting here_\"},{\"type\":\"td\",\"slotMarkdown\":\"_nothing interesting here_\"}]}]},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"attributes\":{\"style\":\"width:90%;\"},\"slotMarkdown\":\"This is a ~~star-sized~~ fixed % size column. The next column over, an auto-sized column, will wrap to accomodate all the text in this cell.\"},{\"type\":\"td\",\"slot\":\"I am auto sized.\"}]}]},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slotMarkdown\":\"This is ~~a star-sized~~ an unsized column. The next column over, also auto-sized, will not wrap to accomodate all the text in this cell, because it has been given the noWrap style.\"},{\"type\":\"td\",\"attributes\":{\"style\":\"white-space: nowrap;\"},\"slot\":\"I am no-wrap auto sized.\"}]}]}]},{\"type\":\"article\",\"components\":[{\"type\":\"h2\",\"slot\":\"Defining row heights\"},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"attributes\":{\"style\":\"height:2em;\"},\"slot\":\"row 1 with height 2em\"},{\"type\":\"td\",\"slot\":\"Column B\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"attributes\":{\"style\":\"height:5em;\"},\"slot\":\"row 2 with height 5em\"},{\"type\":\"td\",\"slot\":\"Column B\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"attributes\":{\"style\":\"height:7em;\"},\"slot\":\"row 3 with height 7em\"},{\"type\":\"td\",\"slot\":\"Column B\"}]}]}]},{\"type\":\"article\",\"components\":[{\"type\":\"h2\",\"slot\":\"Column/row spans\"},{\"type\":\"p\",\"slot\":\"Each cell-element can set a rowSpan or colSpan\"},{\"type\":\"table\",\"components\":[{\"type\":\"tr\",\"components\":[{\"type\":\"th\",\"attributes\":{\"colspan\":\"2\",\"alignment\":\"center\"},\"slot\":\"Header with Colspan = 2, centered\"},{\"type\":\"th\",\"slot\":\"Header 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"th\",\"slot\":\"Header 1\"},{\"type\":\"th\",\"slot\":\"Header 2\"},{\"type\":\"th\",\"slot\":\"Header 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Sample value 1\"},{\"type\":\"td\",\"slot\":\"Sample value 2\"},{\"type\":\"td\",\"slot\":\"Sample value 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"attributes\":{\"rowspan\":3},\"slot\":\"rowSpan set to 3<br>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\"},{\"type\":\"td\",\"slot\":\"Sample value 2\"},{\"type\":\"td\",\"slot\":\"Sample value 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Sample value 2\"},{\"type\":\"td\",\"slot\":\"Sample value 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Sample value 2\"},{\"type\":\"td\",\"slot\":\"Sample value 3\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Sample value 1\"},{\"type\":\"td\",\"attributes\":{\"rowspan\":2,\"colspan\":2},\"slot\":\"Both:<br>rowSpan and colSpan<br>can be defined at the same time\"}]},{\"type\":\"tr\",\"components\":[{\"type\":\"td\",\"slot\":\"Sample value 1\"}]}]}]},{\"type\":\"article\",\"components\":[{\"type\":\"p\",\"slot\":\"The remainder of the pdfmaker example deals with formatting. For an HTML report, this is done via CSS which can easily reproduce everything pdfmaker can do and a lot more.\"}]}]}]}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "tables",
        "x": 260,
        "y": 1060,
        "wires": [
            [
                "bf4b37633885a3a1"
            ]
        ],
        "info": "This example sends a bunch of TABLEs to\r\nthe front-end.\r\n\r\nIt is taken from the [pdfmake]() tables example\r\nand adapted for uibuilder.\r\n\r\nIt demonstrates how complex reports can be created\r\nas easily in uibuilder as in pdfmake. With the \r\ndifference being that uibuilder outputs vanilla\r\nHTML which can be copied/pasted into many other tools.\r\nOr printed to PDF or a printer."
    },
    {
        "id": "c3c70b1f8d376e39",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "fdc64fad892ec641"
            ]
        ]
    },
    {
        "id": "595c6419e7b71c3b",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "fdc64fad892ec641"
            ]
        ]
    },
    {
        "id": "116a78405410289c",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "Quote of the Day example. (Read me)",
        "info": "This flow gets a \"quote of the day\" from the Internet and passes it\nto uibuilder. It caches the result so that if you reload the page,\nyou get the last result back. The quote is updated every 30 minutes\nduring the day and evening.\n\n\"Simple\" refers to the front-end code. While the flow looks a little\ncomplex, it really isn't. On the Node-RED server side: A trigger, an Internet request,\nand uibuilder. On the client browser side: A well-formatted HTML blockquote, a simple\nfunction that updates the UI and a function that listens to messages from Node-RED,\nand finally some really simple CSS for formatting.\n\n## Configuration\n\nUpdate the files:\n\n* `index.html`\n* `index.js`\n* `index.css`\n\nAccording to the example(s) in the 3 other comment nodes in this example.\n\nPress the button on the trigger to start the flow.",
        "x": 330,
        "y": 1300,
        "wires": []
    },
    {
        "id": "8ecb7d35e9edab87",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "index.html",
        "info": "<!doctype html>\n<html lang=\"en\"><head>\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n    <title>Quote of the day - Node-RED uibuilder</title>\n    <meta name=\"description\" content=\"Node-RED uibuilder - Quote of the day\">\n    <link rel=\"icon\" href=\"./images/node-blue.ico\">\n\n    <!-- Your own CSS -->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"./index.css\" media=\"all\">\n\n    <!-- #region Supporting Scripts. These MUST be in the right order. Note no leading / - socket.io no longer needed  -->\n    <script defer src=\"../uibuilder/uibuilder.iife.min.js\"></script>\n    <script defer src=\"./index.js\">/* OPTIONAL: Put your custom code in that */</script>\n    <!-- #endregion -->\n\n</head><body class=\"uib\">\n    \n    <h1>uibuilder example: Get and view a Quote of the Day</h1>\n    <div role=\"doc-subtitle\">Using the uibuilder IIFE library. No framework used.</div>\n    <!-- Updated for uibuilder v6.1.0 -->\n\n    <div id=\"more\"><!-- '#more' is used as a parent for dynamic HTML content in examples --></div>\n\n    <blockquote id=\"quote\"><!-- See index.css for styling -->\n        <q id=\"quoteText\">No quote received yet.</q>\n        <cite id=\"quoteAuthor\"></cite>\n    </blockquote>\n    \n</body></html>\n",
        "x": 740,
        "y": 1300,
        "wires": [],
        "icon": "node-red/parser-html.svg"
    },
    {
        "id": "312d0d91e2a9b622",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "index.js",
        "info": "// @ts-nocheck\n\n/** Example of using the IIFE build of the uibuilder client library\n * Note that uibuilder.start() should no longer be needed.\n * See the documentation if the client doesn't start on its own.\n */\n'use strict'\n\n// Update the quote\nfunction updQuote(quote) {\n    // Update the quote\n    $('#quoteText').innerText = quote.body\n    // and the author\n    $('#quoteAuthor').innerText = quote.author\n    // And the overall quote citation\n    $('#quote').setAttribute('cite', quote.url)    \n}\n\n// Listen for incoming messages from Node-RED\nuibuilder.onChange('msg', function(msg) {\n    // Make sure we only process quotes and ignore other messages.\n    // Generally sensible to filter like this.\n    if (msg.topic === 'getQuote') updQuote(msg.payload.quote)\n})\n",
        "x": 870,
        "y": 1300,
        "wires": [],
        "icon": "font-awesome/fa-code"
    },
    {
        "id": "a9a02535264dd9ed",
        "type": "comment",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "index.css",
        "info": "/* Load defaults from `<userDir>/node_modules/node-red-contrib-uibuilder/front-end/uib-brand.css`\n * This version auto-adjusts for light/dark browser settings but might not be as complete.\n */\n@import url(\"./uib-brand.css\");\n\n/* OR, load the defaults from the older `<userDir>/node_modules/node-red-contrib-uibuilder/front-end/uib-styles.css` */\n/* @import url(\"./uib-styles.css\"); */\n\n/* Formate the quote of the day */\n#quote {\n    background-color: beige;\n    color: black;\n    padding: 1rem;\n}\n\n#quoteText {\n    font-style:italic;\n    font-size: larger;\n}\n\n#quoteAuthor {\n    display:block;\n    font-style:normal\n}\n",
        "x": 1000,
        "y": 1300,
        "wires": [],
        "icon": "node-red/hash.svg"
    },
    {
        "id": "fa042ed296e9de80",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "simple-debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1000,
        "y": 1340,
        "wires": []
    },
    {
        "id": "bb3b15c09b085da2",
        "type": "uibuilder",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "Simple Example",
        "topic": "",
        "url": "uib-simple-example",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0-beta",
        "showMsgUib": true,
        "x": 730,
        "y": 1360,
        "wires": [
            [
                "fa042ed296e9de80"
            ],
            [
                "054d34fec0aa457b"
            ]
        ]
    },
    {
        "id": "7845085b17f1686b",
        "type": "inject",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "getQuote",
        "x": 260,
        "y": 1360,
        "wires": [
            [
                "3e4c1bb1d26f20ce"
            ]
        ]
    },
    {
        "id": "054d34fec0aa457b",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "uib controls",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 990,
        "y": 1380,
        "wires": []
    },
    {
        "id": "cef55ea2491d8024",
        "type": "debug",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "qotd-debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1420,
        "wires": []
    },
    {
        "id": "3e4c1bb1d26f20ce",
        "type": "http request",
        "z": "d2675214b54e2eb6",
        "g": "2d368cb9c96bdff7",
        "name": "Quote of the day",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://favqs.com/api/qotd",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "bb3b15c09b085da2",
                "cef55ea2491d8024"
            ]
        ]
    },
    {
        "id": "14765ff34134b5bc",
        "type": "inject",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "npm --no-git-tag-version version patch",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "npm --no-git-tag-version version patch",
        "payloadType": "str",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "7124bb883a98fa69"
            ]
        ]
    },
    {
        "id": "863bb3a32aec973f",
        "type": "function",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "eval",
        "func": "msg.payload = eval(' versions = ' + msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 200,
        "wires": [
            [
                "bbc0e1fce90fa528"
            ]
        ]
    },
    {
        "id": "bbc0e1fce90fa528",
        "type": "debug",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "version obj",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 200,
        "wires": []
    },
    {
        "id": "3bada01882d5c4c6",
        "type": "inject",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "npm --no-git-tag-version version minor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "npm --no-git-tag-version version minor",
        "payloadType": "str",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "7124bb883a98fa69"
            ]
        ]
    },
    {
        "id": "c2fcef29dbe64088",
        "type": "exec",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "command": "cd node_red_config  && ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "863bb3a32aec973f"
            ],
            [],
            []
        ]
    },
    {
        "id": "ae18ddb26fc89985",
        "type": "inject",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": " npm version ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": " npm version",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "c2fcef29dbe64088"
            ]
        ]
    },
    {
        "id": "5dfd7d40531ea9e8",
        "type": "inject",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "npm --no-git-tag-version version major",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "npm --no-git-tag-version version major",
        "payloadType": "str",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "7124bb883a98fa69"
            ]
        ]
    },
    {
        "id": "03ee310610f6ba27",
        "type": "debug",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "debug exec output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 260,
        "wires": []
    },
    {
        "id": "0acf576808478e7d",
        "type": "inject",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": " npm version | grep node-red-project",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": " npm version | grep node-red-project",
        "payloadType": "str",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "7124bb883a98fa69"
            ]
        ]
    },
    {
        "id": "7124bb883a98fa69",
        "type": "exec",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "command": "cd node_red_config  && ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 630,
        "y": 260,
        "wires": [
            [
                "03ee310610f6ba27"
            ],
            [],
            []
        ]
    },
    {
        "id": "0f6087ee8ca774bc",
        "type": "debug",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "version",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "c53869c217a976c7",
        "type": "inject",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "42756ea0549a795f"
            ]
        ]
    },
    {
        "id": "42756ea0549a795f",
        "type": "function",
        "z": "78555bf0b05aff6d",
        "g": "c8fe8ba19da7f324",
        "name": "get version from package.json",
        "func": "/**\n    functionGlobalContext: {\n        // os:require('os'),\n        require:require\n    },\n */\n\nvar _require = global.get('require');\n// let version = _require('root-require')('package.json').version\nlet version = _require('./package').version\n\n// var pjson = require('./package.json');\n\nmsg.payload = version\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "0f6087ee8ca774bc"
            ]
        ]
    },
    {
        "id": "bc380b4b.e2d668",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "[{\"Name\":\"Kazuhito Yokoi\",\"Age\":\"35\",\"Favourite Color\":\"red\",\"Date Of Birth\":\"12/09/1983\"},{\"Name\":\"Oli Bob\",\"Age\":\"12\",\"Favourite Color\":\"red\",\"Date Of Birth\":\"12/08/2017\"}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"Name\":\"Kazuhito Yokoi\",\"Age\":\"35\",\"Favourite Color\":\"red\",\"Date Of Birth\":\"12/09/1983\"},{\"Name\":\"Oli Bob\",\"Age\":\"12\",\"Favourite Color\":\"red\",\"Date Of Birth\":\"12/08/2017\"}]",
        "payloadType": "json",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "2460c057.cfbc4"
            ]
        ]
    },
    {
        "id": "2460c057.cfbc4",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "625872f.40b1e8c",
        "name": "",
        "width": "6",
        "height": 4,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 390,
        "y": 100,
        "wires": []
    },
    {
        "id": "9e33f566.8c9098",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "Normal table",
        "info": "",
        "x": 190,
        "y": 60,
        "wires": []
    },
    {
        "id": "b7dff285.69049",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "[{\"Name\":\"<b>Yokoi</b>\",\"Age\":\"30\",\"Color\":\"lime\",\"Prog\":70,\"Star\":\"3\"},{\"Name\":\"<i>DCJ</i>\",\"Age\":\"50\",\"Color\":\"dodgerblue\",\"Prog\":\"45\",\"Star\":2,\"Pass\":false,\"web\":\"\"},{\"Name\":\"Nick\",\"Age\":\"40\",\"Color\":\"darkred\",\"Prog\":95,\"Star\":\"5\",\"Pass\":true,\"web\":\"http://nodered.org\"},{\"Name\":\"Oli\"}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"Name\":\"<b>Yokoi</b>\",\"Age\":\"30\",\"Color\":\"lime\",\"Prog\":70,\"Star\":\"3\"},{\"Name\":\"<i>DCJ</i>\",\"Age\":\"50\",\"Color\":\"dodgerblue\",\"Prog\":\"45\",\"Star\":2,\"Pass\":false,\"web\":\"\"},{\"Name\":\"Nick\",\"Age\":\"40\",\"Color\":\"darkred\",\"Prog\":95,\"Star\":\"5\",\"Pass\":true,\"web\":\"http://nodered.org\"},{\"Name\":\"Oli\"}]",
        "payloadType": "json",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "7d48e13.90ee22"
            ]
        ]
    },
    {
        "id": "cb53cb76.5fd0d8",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "[{\"Name\":\"<b>Yokoi</b>\",\"Age\":\"30\",\"Color\":\"lime\",\"Prog\":20,\"Star\":\"1\"},{\"Name\":\"<i>DCJ</i>\",\"Age\":\"50\",\"Color\":\"dodgerblue\",\"Prog\":\"80\",\"Star\":4,\"Pass\":true,\"web\":\"\"},{\"Name\":\"Nick\",\"Age\":\"40\",\"Color\":\"red\",\"Prog\":90,\"Star\":\"5\",\"Pass\":true,\"web\":\"http://nodered.org\"},{\"Name\":\"Oli\"}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"Name\":\"<b>Yokoi</b>\",\"Age\":\"30\",\"Color\":\"lime\",\"Prog\":20,\"Star\":\"1\"},{\"Name\":\"<i>DCJ</i>\",\"Age\":\"50\",\"Color\":\"dodgerblue\",\"Prog\":\"80\",\"Star\":4,\"Pass\":true,\"web\":\"\"},{\"Name\":\"Nick\",\"Age\":\"40\",\"Color\":\"red\",\"Prog\":90,\"Star\":\"5\",\"Pass\":true,\"web\":\"http://nodered.org\"},{\"Name\":\"Oli\"}]",
        "payloadType": "json",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "7d48e13.90ee22"
            ]
        ]
    },
    {
        "id": "7d48e13.90ee22",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "571a38b1.5e3638",
        "name": "People",
        "order": 1,
        "width": "8",
        "height": "5",
        "columns": [
            {
                "field": "Name",
                "title": "Who",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Age",
                "title": "Age",
                "width": "40",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Color",
                "title": "",
                "width": "5%",
                "align": "left",
                "formatter": "color",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Star",
                "title": "%",
                "width": "100",
                "align": "left",
                "formatter": "star",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Pass",
                "title": "",
                "width": "5%",
                "align": "center",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Prog",
                "title": "",
                "width": "80",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "web",
                "title": "URL",
                "width": "",
                "align": "left",
                "formatter": "link",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 660,
        "y": 220,
        "wires": [
            [
                "41e82408528a8563"
            ]
        ]
    },
    {
        "id": "ba92cba0.ee4ad8",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "[{\"name\":\"MEQ0451495\",\"room\":\"Bathroom\",\"SET_TEMPERATURE-value\":22,\"ACTUAL_TEMPERATURE-value\":21.8,\"VALVE_STATE-value\":90,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":true,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875547\",\"room\":\"Living Room\",\"SET_TEMPERATURE-value\":12,\"ACTUAL_TEMPERATURE-value\":16.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":1},{\"name\":\"MEQ1875538\",\"room\":\"Living Room\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":19.5,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.6,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":2},{\"name\":\"MEQ0447462\",\"room\":\"Kitchen\",\"SET_TEMPERATURE-value\":17,\"ACTUAL_TEMPERATURE-value\":22.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":10,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":3},{\"name\":\"MEQ1875551\",\"room\":\"Office\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":20.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ0447425\",\"room\":\"Dining Room\",\"SET_TEMPERATURE-value\":19,\"ACTUAL_TEMPERATURE-value\":20.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875546\",\"room\":\"Dining Room\",\"SET_TEMPERATURE-value\":20,\"ACTUAL_TEMPERATURE-value\":18.8,\"VALVE_STATE-value\":99,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ0447483\",\"room\":\"Bedroom\",\"SET_TEMPERATURE-value\":17,\"ACTUAL_TEMPERATURE-value\":22.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875541\",\"room\":\"Child\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":20.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875552\",\"room\":\"Guest Room\",\"SET_TEMPERATURE-value\":20,\"ACTUAL_TEMPERATURE-value\":21.1,\"VALVE_STATE-value\":9,\"BATTERY_STATE-value\":2.8,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0}]",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"name\":\"MEQ0451495\",\"room\":\"Bathroom\",\"SET_TEMPERATURE-value\":22,\"ACTUAL_TEMPERATURE-value\":21.8,\"VALVE_STATE-value\":90,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":true,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875547\",\"room\":\"Living Room\",\"SET_TEMPERATURE-value\":12,\"ACTUAL_TEMPERATURE-value\":16.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":1},{\"name\":\"MEQ1875538\",\"room\":\"Living Room\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":19.5,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.6,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":2},{\"name\":\"MEQ0447462\",\"room\":\"Kitchen\",\"SET_TEMPERATURE-value\":17,\"ACTUAL_TEMPERATURE-value\":22.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":10,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":3},{\"name\":\"MEQ1875551\",\"room\":\"Office\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":20.2,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ0447425\",\"room\":\"Dining Room\",\"SET_TEMPERATURE-value\":19,\"ACTUAL_TEMPERATURE-value\":20.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875546\",\"room\":\"Dining Room\",\"SET_TEMPERATURE-value\":20,\"ACTUAL_TEMPERATURE-value\":18.8,\"VALVE_STATE-value\":99,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ0447483\",\"room\":\"Bedroom\",\"SET_TEMPERATURE-value\":17,\"ACTUAL_TEMPERATURE-value\":22.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875541\",\"room\":\"Child\",\"SET_TEMPERATURE-value\":18,\"ACTUAL_TEMPERATURE-value\":20.4,\"VALVE_STATE-value\":0,\"BATTERY_STATE-value\":2.7,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0},{\"name\":\"MEQ1875552\",\"room\":\"Guest Room\",\"SET_TEMPERATURE-value\":20,\"ACTUAL_TEMPERATURE-value\":21.1,\"VALVE_STATE-value\":9,\"BATTERY_STATE-value\":2.8,\"BOOST_STATE-value\":0,\"AUTO_MODE-value\":false,\"CONTROL_MODE-value\":0}]",
        "payloadType": "json",
        "x": 194,
        "y": 420,
        "wires": [
            [
                "8115c722.5d91d8"
            ]
        ]
    },
    {
        "id": "8115c722.5d91d8",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.field});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"groupHeader\":\"function (value, count, data, group) {return value + \\\"<span style='color:#d00; margin-left:10px;'>(\\\" + count + \\\" Termostat\\\"+((count>1) ? \\\"e\\\" : \\\"\\\") + \\\")</span>\\\";}\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"ROom\",\"field\":\"room\",\"width\":100,\"frozen\":true},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Device\",\"field\":\"name\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Type\",\"field\":\"deviceType\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Measurements\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"target\",\"field\":\"SET_TEMPERATURE-value\",\"formatter\":\"function(cell, formatterParams, onRendered){return cell.getValue()+'°C';}\",\"topCalc\":\"avg\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"min\":10,\"max\":25,\"color\":[\"blue\",\"green\",\"red\"],\"legend\":\"function (value) {return '&nbsp;&nbsp;'+value+'°C';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"left\"},\"title\":\"current\",\"field\":\"ACTUAL_TEMPERATURE-value\",\"formatter\":\"progress\",\"topCalc\":\"avg\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":99,\"color\":[\"gray\",\"orange\",\"red\"],\"legend\":\"function (value) {return (value>0)? '&nbsp;&nbsp;'+value+' %' : '-';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Valve\",\"field\":\"VALVE_STATE-value\",\"formatter\":\"progress\",\"topCalc\":\"max\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"min\":1.5,\"max\":4.6,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {return value+' V';}\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Batt\",\"field\":\"BATTERY_STATE-value\",\"formatter\":\"progress\",\"topCalc\":\"min\",\"width\":100}]},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Settings\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":30,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#101010;'>\\\"+value+\\\" min</span>\\\";     else         return \\\"<span style='color:#A0A0A0;'>aus</span>\\\"; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Boost\",\"field\":\"BOOST_STATE-value\",\"formatter\":\"progress\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\",\"allowEmpty\":true,\"allowTruthy\":true,\"tickElement\":\"<i class='fa fa-clock-o'></i>\",\"crossElement\":\"<i class='fa fa-ban'></i>\"},\"title\":\"Auto\",\"field\":\"AUTO_MODE-value\",\"formatter\":\"tickCross\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Mode\",\"field\":\"CONTROL_MODE-value\",\"formatter\":\"function(cell, formatterParams, onRendered){     var html=\\\"<i class=\\\\\\\"\\\";     switch(cell.getValue()) {         case 0: html+=\\\"fa fa-calendar-check-o\\\"; break;         case 1: html+=\\\"fa fa-hand-o-up\\\"; break;         case 2: html+=\\\"fa fa-suitcase\\\"; break;         case 3: html+=\\\"fa fa-spinner fa-spin fa-fw\\\"; break;     }     html+='\\\\\\\"></i>';     return html; }\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Auto\",\"field\":\"AUTO_MODE-value\",\"formatter\":\"tick\",\"width\":100,\"align\":\"center\"}]}],\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\"},\"customHeight\":12}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 420,
        "wires": [
            [
                "4b960bb2.f61934"
            ]
        ]
    },
    {
        "id": "5d38f5fa.6541bc",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 653,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b960bb2.f61934",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "51ce6aa1.620754",
        "name": "Thermostats",
        "order": 1,
        "width": "20",
        "height": "7",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 503,
        "y": 420,
        "wires": [
            [
                "5d38f5fa.6541bc"
            ]
        ]
    },
    {
        "id": "b075d2ac.a69f3",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "237da972.5d69a6",
        "name": "",
        "order": 0,
        "width": "17",
        "height": "9",
        "columns": [
            {
                "field": "id",
                "title": "id",
                "width": "",
                "align": "right",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "text",
                "title": "Text",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 830,
        "y": 880,
        "wires": [
            [
                "588f316.0b070d",
                "76c4495f.da70f8"
            ]
        ]
    },
    {
        "id": "f8a9323b.fedf4",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "add @ top",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 194,
        "y": 778,
        "wires": [
            [
                "eb577b4b.510388"
            ]
        ]
    },
    {
        "id": "b54f6ce8.3b1a4",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "addRow",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 415,
        "y": 880,
        "wires": []
    },
    {
        "id": "eb577b4b.510388",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "addRow @ top",
        "func": "var id=flow.get(\"lastId\") || 0;\n++id;\nmsg.payload={\n    command:\"addRow\",\n    arguments: [\n        [\n            {\n            \"id\":id,\n            \"timestamp\":msg.payload,\n            \"text\":\"addRow @ top (#\"+id+\")\"\n            }\n        ],\n        true\n    ],\n    returnPromise: true\n}\nflow.set(\"lastId\",id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 435,
        "y": 744,
        "wires": [
            [
                "b54f6ce8.3b1a4",
                "b075d2ac.a69f3"
            ]
        ],
        "info": "# addRow([row],onTop)\n\n`onTop=true`\n\nadds a new Row on top of the table"
    },
    {
        "id": "588f316.0b070d",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "response from ui-table",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1135,
        "y": 880,
        "wires": []
    },
    {
        "id": "12606591.7a3dca",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "Init 20 rows",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 204,
        "y": 608,
        "wires": [
            [
                "d4dce9b4.1f2588"
            ]
        ]
    },
    {
        "id": "d4dce9b4.1f2588",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "table with n rows as array",
        "func": "var numberOfRows = msg.payload;\nflow.set(\"lastId\",numberOfRows);\nmsg.payload=[];\nfor (let i=1; i<=numberOfRows; i++) {\n    msg.payload.push({\"id\":i,\"timestamp\":Date.now(),\"text\":\"this is line\"+i})\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 465,
        "y": 574,
        "wires": [
            [
                "b075d2ac.a69f3",
                "f9bfd98.abe1a28",
                "76c4495f.da70f8"
            ]
        ]
    },
    {
        "id": "8254f2d2.eeaa1",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "updateOrAddData (add)",
        "func": "var id=flow.get(\"lastId\") || 0;\n++id;\nmsg.payload={\n    command:\"updateOrAddData\",\n    arguments: [\n        [\n            {\n            \"id\":id,\n            \"timestamp\":msg.payload,\n            \"text\":\"updateOrAddData (add) (#\"+id+\")\"\n            }\n        ]\n    ],\n    returnPromise: true\n}\nflow.set(\"lastId\",id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 465,
        "y": 931,
        "wires": [
            [
                "570e922d.1d465c",
                "b075d2ac.a69f3"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nadds a the row with a new id (same as addRow)"
    },
    {
        "id": "cbd6baa0.fa7d78",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "add",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 184,
        "y": 965,
        "wires": [
            [
                "8254f2d2.eeaa1"
            ]
        ]
    },
    {
        "id": "570e922d.1d465c",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "updateOrAddData",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 445,
        "y": 1050,
        "wires": []
    },
    {
        "id": "782ab41e.cbb66c",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "add @ end",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 194,
        "y": 863,
        "wires": [
            [
                "760fde70.028f"
            ]
        ]
    },
    {
        "id": "760fde70.028f",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "addRow @ end",
        "func": "var id=flow.get(\"lastId\") || 0;\n++id;\nmsg.payload={\n    command:\"addRow\",\n    arguments: [\n        [\n            {\n            \"id\":id,\n            \"timestamp\":msg.payload,\n            \"text\":\"addRow @ end (#\"+id+\")\"\n            }\n        ],\n        false\n    ],\n    returnPromise: true\n}\nflow.set(\"lastId\",id);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 435,
        "y": 829,
        "wires": [
            [
                "b54f6ce8.3b1a4",
                "b075d2ac.a69f3"
            ]
        ],
        "info": "# addRow([row],onTop)\n\n`onTop=false`\n\nadds a new Row on top of the table"
    },
    {
        "id": "deeff963.289f08",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "updateOrAddData (update)",
        "func": "var id=flow.get(\"lastId\") || 0;\nif (id<2) {\n    node.error(\"use only if minimum of 2 Lines existing!\")\n    return;\n}\n\nid=Math.floor(id/2); //\nmsg.payload={\n    command:\"updateOrAddData\",\n    arguments: [\n        [\n            {\n            \"id\":id,\n            \"timestamp\":msg.payload,\n            \"text\":\"updateOrAddData (update) (#\"+id+\")\"\n            }\n        ]\n    ],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 475,
        "y": 999,
        "wires": [
            [
                "570e922d.1d465c",
                "b075d2ac.a69f3"
            ]
        ],
        "info": "# updateOrAddData([row])\n\nupdates a the row with an id in the middle from 1 to lastId, hope it exists!\nIf not a row will be added"
    },
    {
        "id": "557e109d.f9d7e",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "update ui-table by passing the complete tableData as array",
        "info": "",
        "x": 327,
        "y": 523,
        "wires": []
    },
    {
        "id": "6a095f36.8f13a",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "update ui-table by using commands",
        "info": "",
        "x": 257,
        "y": 693,
        "wires": []
    },
    {
        "id": "f08308d6.c66f68",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "update",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 184,
        "y": 1033,
        "wires": [
            [
                "deeff963.289f08"
            ]
        ]
    },
    {
        "id": "77b4d006.543ed",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "deleteRow",
        "func": "var id=flow.get(\"lastId\") || 0;\nif (id<2) {\n    node.error(\"use only if minimum of 2 Lines existing!\")\n    return;\n}\n\nid=Math.floor(id/2); //\nmsg.payload={\n    command:\"deleteRow\",\n    arguments: [id],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 425,
        "y": 1152,
        "wires": [
            [
                "e34a75a3.9f0188",
                "b075d2ac.a69f3"
            ]
        ],
        "info": "# deleteRow(row / [rows])\n\n`row=singleId`\n\nor\n\n`row=[array of IDs]` // seems there is a bug/issue in tabulator\n\ndelete a single the row with an id in the middle from 1 to lastId, hope it exists.\n\nWill fail on the second hit if you inject this two times because the id wad deleteted on the first"
    },
    {
        "id": "936c8219.458bc",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "delete",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 184,
        "y": 1186,
        "wires": [
            [
                "77b4d006.543ed"
            ]
        ]
    },
    {
        "id": "e34a75a3.9f0188",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "deleteRow",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 425,
        "y": 1271,
        "wires": []
    },
    {
        "id": "fafa24f8.577d28",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "deleteRow will punch holes in table!",
        "info": "",
        "x": 257,
        "y": 1101,
        "wires": []
    },
    {
        "id": "f9bfd98.abe1a28",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "addRow",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 415,
        "y": 625,
        "wires": []
    },
    {
        "id": "76c4495f.da70f8",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "table recorder",
        "func": "var status = {fill:\"red\",shape:\"ring\",text:\"an error occured\"};\nvar success = (msg.topic && msg.topic===\"success\") || false;\nvar tableData = flow.get(\"tableData\");\nif (tableData === undefined) {\n    tableData = [];\n    flow.set(\"tableData\",tableData);\n}\n\n// find the index for a row in tableData for a given index (id)\nfunction checkIndex(id) {\n    let matchRow=-1\n    tableData.forEach(function (row,index){\n        if (row.id === id){\n            matchRow=index;\n            return matchRow;\n        }\n    })\n    return matchRow;\n}\n\n// flat merge one row \nfunction mergeRow(dest,source) {\n    Object.keys(source).forEach(function(key) {\n        dest[key]=source[key];\n    })\n}\n\n//merge or add one or many rows into tableData \nfunction mergeData(newData,toTop) {\n    newData.forEach(function (item,index) {\n        node.warn([\"findIndex\",item]);\n        let row=checkIndex(item.id);\n        if (row<0) { // row do not existst in tableData\n            if (toTop) {\n                tableData.push(item);\n                status.text+=\"newRow @ top\";\n            } else {\n                tableData.unshift(item);\n                status.text+=\"newRow @ bottom\";\n            }\n            return;\n        } else { // row exists so update\n            mergeRow(tableData[row],item);\n            status.text+=\"row updated\";\n            return;\n        }\n        if (status.text!==\"\") node.status(status);\n    });\n}\n\nswitch (typeof msg.payload){\n    case \"string\":\n        node.warn([\"[table recorder] \",(typeof msg.payload),msg.payload]);\n        switch (msg.payload){\n            case \"change\":\n                status={fill:\"green\",shape:\"dot\",text:\"table restored \"+tableData.length+\" rows\"};\n                msg.payload=tableData;\n                break;\n        }\n        break;\n    case \"object\":\n        node.warn([\"[table recorder] \",(typeof msg.payload),msg.payload]);\n        if (Array.isArray(msg.payload)) { // replace all tableData\n            status={fill:\"green\",shape:\"dot\",text:\"table replaced \"+msg.payload.length+\" rows\"};\n            tableData=RED.util.cloneMessage(msg.payload); \n        } else {\n            switch (msg.payload.command) { // clearData does not return a promise!\n                case \"clearData\":\n                    status={fill:\"green\",shape:\"dot\",text:\"clearData: done\"};\n                    tableData=[];\n                    flow.set(\"lastId\",0);\n                    break;                \n            }\n        }\n        break;\n    default: // likely a msg fom a ui-table command or callback\n        if (msg.hasOwnProperty(\"topic\")&&\n            msg.hasOwnProperty(\"ui_control\") && \n            msg.ui_control.hasOwnProperty(\"callback\") &&\n            msg.hasOwnProperty(\"return\")) { // message originates from a ui-table callback\n            if (success) {\n                switch(msg.return.command) {\n                    case \"addRow\":\n                        status.text=\"addRow: \";\n                        mergeData(msg.return.arguments[0],msg.return.arguments[1]);\n                        status.shape=\"dot\";\n                        break;\n                    case \"updateOrAddData\":\n                        status.text=\"updateOrAddData: \";\n                        mergeData(msg.return.arguments[0]);\n                        break;\n                    case \"deleteRow\":\n                        let row=checkIndex(msg.return.arguments[0]);\n                        tableData.splice(row,1);\n                        status.shape=\"dot\";\n                        status.text=\"deleteRow: \"+row+\" deleted\";\n                        break;\n                    default:\n                        status={fill:\"yellow\",shape:\"dot\",text:msg.return.command + \" unknown!\"};\n                        break;         \n                }\n            } else {\n                status.text=msg.topic+\" \"+msg.error;\n            }\n        }\n        break;\n}\nif (success) status.fill=\"green\";\nflow.set(\"tableData\",tableData);\nnode.status(status);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 1060,
        "wires": [
            [
                "b075d2ac.a69f3"
            ]
        ],
        "icon": "font-awesome/fa-database",
        "info": "# simple ui-table handler\n## abstract\nUsing ui-table with commands offer the hole flexibilty of tabulator. The table can be manipulated down to cell level.\nAs the ui-table node only passes the commands to tabulator and receives promises back the node does not hold the table data. If the data should be available after refresh, tab change, new connections the flow is responsible to cache the data and all the manipulations.\nThis node takes care of most simple data manipulation commands and holds a copy of the data in `flow.context.tabledata`\n\n## details\n\n### row index (id)\n\nTo identify a [row a index](http://tabulator.info/docs/4.5/data#overview) column has to be defined. This colum defaults to `id` but can be changed by specifing a **field** by using `msg.ui_control`. In this example the row index is a simple counter adding up by one if a new line is added.\n\n### addRow command\n\n[details @ tabulator addRow docs](http://tabulator.info/docs/4.5/update#alter-add)\n\nYou can add a row by sending the `addRow` command. You can decide if the row adds on the top or at the bottom of table.\n\n### addOrUpdate command\n\n[details @ tabulator addOrUpdate docs](http://tabulator.info/docs/4.5/update#alter-update)\n\nTo update data the best way is to use the `addOrUpdate` command. If the row indetified by the index is not exeisting a new row will be added automatically\n\n### deleteRow command\n\n[details @ tabulator deleteRow docs](http://tabulator.info/docs/4.5/update#row)\n\nDelete one or more rows (passing an array always results in \"row not found error\"! I think there is an issue in tabulator)\n\n### clearData\n\n[details @ tabulator clearData docs](http://tabulator.info/docs/4.5/update#alter-empty)\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "7b1c27f4.36a718",
        "type": "ui_ui_control",
        "z": "1285e099664f8de3",
        "name": "",
        "events": "all",
        "x": 840,
        "y": 948,
        "wires": [
            [
                "76c4495f.da70f8"
            ]
        ]
    },
    {
        "id": "8b79840b.aff7e8",
        "type": "inject",
        "z": "1285e099664f8de3",
        "d": true,
        "name": "delete 1-5",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 194,
        "y": 1220,
        "wires": [
            [
                "fee8b78d.068f98"
            ]
        ]
    },
    {
        "id": "fee8b78d.068f98",
        "type": "function",
        "z": "1285e099664f8de3",
        "d": true,
        "name": "delete Rows [2,4,6,8,10]",
        "func": "var id=flow.get(\"lastId\") || 0;\nif (id<10) {\n    node.error(\"use only if minimum of 10 Lines existing!\")\n    return;\n}\n\nid=Math.floor(id/2); //\nmsg.payload={\n    command:\"deleteRow\",\n    arguments: [[2,4,6,8,10]],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 465,
        "y": 1220,
        "wires": [
            [
                "b075d2ac.a69f3",
                "e34a75a3.9f0188"
            ]
        ],
        "info": "# deleteRow(row / [rows])\n\n`row=singleId`\n\nor\n\n`row=[array of IDs]` // seems there is a bug/issue in tabulator\n\ndelete a single the row with an id in the middle from 1 to lastId, hope it exists.\n\nWill fail on the second hit if you inject this two times because the id wad deleteted on the first"
    },
    {
        "id": "fe4ba122.df8fb",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "clearData",
        "func": "\nmsg.payload={\n    command:\"clearData\",\n    arguments: [],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 415,
        "y": 1390,
        "wires": [
            [
                "6e49e266.f72b6c",
                "b075d2ac.a69f3"
            ]
        ],
        "info": "# clear data\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "82194704.7ab2d8",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "clear",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 184,
        "y": 1424,
        "wires": [
            [
                "fe4ba122.df8fb"
            ]
        ]
    },
    {
        "id": "df623146.8270a",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "Erase all data by using clearData command",
        "info": "",
        "x": 287,
        "y": 1339,
        "wires": []
    },
    {
        "id": "6e49e266.f72b6c",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "clearData",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 415,
        "y": 1441,
        "wires": []
    },
    {
        "id": "d404def3.39a63",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "change",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "change",
        "payloadType": "str",
        "x": 830,
        "y": 1016,
        "wires": [
            [
                "76c4495f.da70f8"
            ]
        ]
    },
    {
        "id": "36be75f0.115c6a",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Init 20 rows",
        "tooltip": "init table by passing the hole table array (default way)",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "20",
        "payloadType": "num",
        "topic": "",
        "x": 204,
        "y": 574,
        "wires": [
            [
                "d4dce9b4.1f2588"
            ]
        ]
    },
    {
        "id": "b496aa6a.32f2d8",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "add one row @ top",
        "tooltip": "add a new row to the top",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 224,
        "y": 744,
        "wires": [
            [
                "eb577b4b.510388"
            ]
        ]
    },
    {
        "id": "79d05aaa.e2c7d4",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "add one row @ end",
        "tooltip": "add a new row at the end ",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 224,
        "y": 829,
        "wires": [
            [
                "760fde70.028f"
            ]
        ]
    },
    {
        "id": "d37bf3a8.373dd",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "addOrUpdate (add)",
        "tooltip": "add a new row by passing a new id",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 224,
        "y": 931,
        "wires": [
            [
                "8254f2d2.eeaa1"
            ]
        ]
    },
    {
        "id": "d31c2ac7.05bed8",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "addOrUpdate (update)",
        "tooltip": "update the row in the middle (or add if a row with that id not exists)",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 234,
        "y": 999,
        "wires": [
            [
                "deeff963.289f08"
            ]
        ]
    },
    {
        "id": "c637efb3.9c38c",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "delete (middle)",
        "tooltip": "delate the row with the id=maxId/2. Will result an error if not existing",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 214,
        "y": 1152,
        "wires": [
            [
                "77b4d006.543ed"
            ]
        ]
    },
    {
        "id": "5531f2d0.fb913c",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "clear",
        "tooltip": "clear all table data",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 184,
        "y": 1390,
        "wires": [
            [
                "fe4ba122.df8fb"
            ]
        ]
    },
    {
        "id": "858a6bc2.0384e8",
        "type": "ui_text",
        "z": "1285e099664f8de3",
        "group": "c91332c0.50c11",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "status",
        "format": "{{status.text}}",
        "layout": "col-center",
        "x": 1181,
        "y": 1440,
        "wires": []
    },
    {
        "id": "213d641a.12a53c",
        "type": "status",
        "z": "1285e099664f8de3",
        "name": "",
        "scope": [
            "76c4495f.da70f8"
        ],
        "x": 1020,
        "y": 1440,
        "wires": [
            [
                "858a6bc2.0384e8"
            ]
        ]
    },
    {
        "id": "e7d10007.d6e73",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "refresh (change)",
        "tooltip": "Same as ui-control sending a change message",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "change",
        "payloadType": "str",
        "topic": "",
        "x": 860,
        "y": 982,
        "wires": [
            [
                "76c4495f.da70f8"
            ]
        ]
    },
    {
        "id": "8386c3a7.41ead",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "format table",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 204,
        "y": 1577,
        "wires": [
            [
                "8ae898e7.418068"
            ]
        ]
    },
    {
        "id": "f59e9830.e23608",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "Format Table using ui_control",
        "info": "",
        "x": 237,
        "y": 1492,
        "wires": []
    },
    {
        "id": "19e88f0.0c32071",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "clearData",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 415,
        "y": 1594,
        "wires": []
    },
    {
        "id": "ea064e3c.22437",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "c91332c0.50c11",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "format table",
        "tooltip": "Formats the table using msg.ui_control",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "x": 204,
        "y": 1543,
        "wires": [
            [
                "8ae898e7.418068"
            ]
        ]
    },
    {
        "id": "8ae898e7.418068",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"customHeight\":18,\"tabulator\":{\"layout\":\"fitColumns\",\"movableColumns\":false,\"index\":\"id\",\"columns\":[{\"title\":\"ID\",\"field\":\"id\",\"formatter\":\"text\",\"headerTooltip\":\"id number act as row index\"},{\"formatterParams\":{\"outputFormat\":\"HH:mm:ss.SSS\",\"inputFormat\":\"x\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Timestamp\",\"field\":\"timestamp\",\"formatter\":\"datetime\",\"headerTooltip\":\"timestamp of last change\"},{\"title\":\"Text\",\"field\":\"text\",\"headerTooltip\":\"last cause of reboot (provided by http json request)\"}]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 445,
        "y": 1543,
        "wires": [
            [
                "19e88f0.0c32071",
                "b075d2ac.a69f3",
                "6bd61b7.a6a56e4"
            ]
        ]
    },
    {
        "id": "6bd61b7.a6a56e4",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "change",
        "rules": [
            {
                "t": "delete",
                "p": "ui_control",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "change",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 653,
        "y": 1543,
        "wires": [
            [
                "76c4495f.da70f8"
            ]
        ]
    },
    {
        "id": "4512106a.2f145",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "ui_control & placeholder",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"customHeight\":20,\"tabulator\":{\"layout\":\"fitColumns\",\"clipboard\":true,\"clipboardCopySelector\":\"table\",\"clipboardCopyStyled\":false,\"clipboardPasteAction\":\"function(rowData){     this.send({ui_control:{callback:'clipboardPasteAction'},payload:rowData});     return this.table.replaceData(rowData); }\",\"columns\":[{\"field\":\"col1\",\"title\":\"Column #1\"},{\"field\":\"col2\",\"title\":\"Column #2\"},{\"field\":\"col3\",\"title\":\"Column #3\"}]}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"col1\":\"click here & CTRL+v\",\"col2\":\"or click here & CTRL+v\",\"col3\":\"or click here & CTRL+v\"},{\"col1\":\" or on any other cell\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"\",\"col2\":\"\",\"col3\":\"\"},{\"col1\":\"there is a issue with small or empty tables\",\"col2\":\"will be dixed soon\",\"col3\":\"\"},{\"col1\":\"Untill then we have\",\"col2\":\"to fill in some\",\"col3\":\"dummy lines\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1860,
        "wires": [
            [
                "71d16773.2b0a38"
            ]
        ]
    },
    {
        "id": "8d8d7ea4.2fe3f",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "clipboardPasteAction",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1049,
        "y": 1843,
        "wires": []
    },
    {
        "id": "71d16773.2b0a38",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "113a4af6.0aab85",
        "name": "Copy & Paste",
        "order": 1,
        "width": "17",
        "height": "7",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 672,
        "y": 1860,
        "wires": [
            [
                "d9789454.020d58"
            ]
        ]
    },
    {
        "id": "a0dee6b9.6423c8",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "clipboardPasteAction Callback",
        "func": "// callback: clipboardPasteAction\n// DO NOT USE IN A FLOW!\n\nclipboardPasteAction = \n// copy from here\nfunction(rowData){\n    this.send({ui_control:{callback:'clipboardPasteAction'},payload:rowData});\n    return this.table.replaceData(rowData);\n}\n// until here\n// use the Visual Editor!\n// paste into ui_table JSON \"clipboardPasteAction\":\"function(....\"\n\n// technical details\n//\n// the example function ends with\n//\n// return this.table.updateData(rows);\n// \n// but that's not updating the data (because it does try to update data through\n// the index field (default \"id\")\n// replaceData simply erase all existing rowData and fills in the pasted data\n// that's what we want",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1809,
        "wires": [
            []
        ]
    },
    {
        "id": "38c0e825.798328",
        "type": "ui_ui_control",
        "z": "1285e099664f8de3",
        "name": "on tab change",
        "events": "change",
        "x": 213,
        "y": 1860,
        "wires": [
            [
                "4512106a.2f145"
            ]
        ]
    },
    {
        "id": "d9789454.020d58",
        "type": "switch",
        "z": "1285e099664f8de3",
        "name": "",
        "property": "ui_control.callback",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "clipboardPasteAction",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 846,
        "y": 1860,
        "wires": [
            [
                "8d8d7ea4.2fe3f"
            ],
            [
                "7b094d08.4d1224"
            ]
        ]
    },
    {
        "id": "7b094d08.4d1224",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "something else",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1029,
        "y": 1877,
        "wires": []
    },
    {
        "id": "22459d5a.5c4672",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "Copy & Paste (readme)",
        "info": "# copy & paste\n\nYou need only one callback function I included in a separate function note for better readability (do not put this into your flow.\n\nThe change node does the preparation of the table with a `msg.ui_control` object. Because you need minimum one cell to paste into (you can`t paste into an empty table) I put in some dummy data\nIt is not necessary to configure the the table node only tick \"send data on click\" to activate the output.\n\nCTRL-c is working too. It is set to \"table\" (including currently invisble cells) and no styling.\n\n[Detailed documentation of this tabulator feature can be found here.](http://tabulator.info/docs/4.5/clipboard)\n\nBe aware that colum `field` names must match cells of the first row of the pasted data and the is tab \\t and new line \\n formatted, as windows clipboard does. [see here](http://tabulator.info/docs/4.5/clipboard#paste-parser)",
        "x": 233,
        "y": 1758,
        "wires": []
    },
    {
        "id": "2e6a6379.742abc",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "ff9fdb9a.7da098",
        "name": "testTable",
        "order": 6,
        "width": "8",
        "height": 5,
        "columns": [
            {
                "field": "rowNumber",
                "title": "Row Number 1",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "textValue",
                "title": "Text",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "numberValue",
                "title": "Number",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 920,
        "y": 2160,
        "wires": [
            [
                "1c377ea0.5801e1"
            ]
        ]
    },
    {
        "id": "16664cef.5b26b3",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "table paramter",
        "func": "msg.ui_control = {tabulator:{}};\n\n//workaround that buttos can`t deliver empty strings\nif (msg.payload.hasOwnProperty('payload')) {\n    msg.payload=msg.payload.payload;\n}\n\nmsg.ui_control.tabulator[msg.topic]=msg.payload;\ndelete msg.topic;\nmsg.payload=null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 702,
        "y": 2449,
        "wires": [
            [
                "2e6a6379.742abc",
                "b8d75d24.6cbed"
            ]
        ]
    },
    {
        "id": "b8d75d24.6cbed",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "table input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 930,
        "y": 2449,
        "wires": []
    },
    {
        "id": "1c377ea0.5801e1",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "table output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1083,
        "y": 2160,
        "wires": []
    },
    {
        "id": "b15c31a9.af37c",
        "type": "ui_switch",
        "z": "1285e099664f8de3",
        "name": "selectable",
        "label": "selectable",
        "tooltip": "",
        "group": "ff9fdb9a.7da098",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "selectable",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 342,
        "y": 2245,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "75207e8d.c54d4",
        "type": "ui_switch",
        "z": "1285e099664f8de3",
        "name": "movableColumns",
        "label": "movableColumns",
        "tooltip": "",
        "group": "ff9fdb9a.7da098",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "movableColumns",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 372,
        "y": 2296,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "c585e7a1.dfc648",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 9,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Format Numbers > 100",
        "tooltip": "using a rowFormatter callback function",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "function(row){         if(row.getData().numberValue>100){             row.getElement().style.backgroundColor = \"#A6A6DF\";         }     },",
        "payloadType": "str",
        "topic": "rowFormatter",
        "x": 392,
        "y": 2432,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "f178c6fe.710ef8",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Fill demo data",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"textValue\":\"Line #1\",\"numberValue\":123.12},{\"textValue\":\"Line #2\",\"numberValue\":100},{\"textValue\":\"Line #3\",\"numberValue\":50}]",
        "payloadType": "json",
        "topic": "rowFormatter",
        "x": 362,
        "y": 2160,
        "wires": [
            [
                "2e6a6379.742abc"
            ]
        ]
    },
    {
        "id": "2403f929.df4006",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 11,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "inject Tooltips callback",
        "tooltip": "cell.getColumn().getField() + \" - \" + cell.getValue();",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "function(cell){return  cell.getColumn().getField() + \" - \" + cell.getValue(); },",
        "payloadType": "str",
        "topic": "tooltips",
        "x": 382,
        "y": 2534,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "f6c68c45.58003",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 12,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "clear Tooltips callback",
        "tooltip": "empty string is not possible! so use a single space",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"payload\":\"\"}",
        "payloadType": "json",
        "topic": "tooltips",
        "x": 382,
        "y": 2568,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "d2b29dda.60a5a",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 13,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "reformat Number column",
        "tooltip": "inject additional paramters to numberValue column",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"numberValue\",\"formatterParams\":{\"min\":0,\"max\":200,\"legend\":\"function (value) {     if (value<100) return \\\"<span style='color:#FF0000;'>\\\"+value+\\\"</span>\\\";     else return \\\"<span style='color:#000000;'>\\\"+value+\\\"</span>\\\";  }\",\"legendAlign\":\"center\"},\"formatter\":\"progress\",\"topCalc\":\"function(values, data, calcParams){     var total = 0;     var calc = 0;     var count = 0;     data.forEach(value => {         total+=Number(value.numberValue);         count++;     });     if (count>0) calc=(total/count).toFixed(2);     return `${calc} (avg)`; }\",\"headerTooltip\":\"avarage\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 392,
        "y": 2636,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "7b6490b3.cd9c7",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "callback function(s)",
        "func": "// how to use the editor to write callback functions\n// DO NOT wire this into your flow!\n// copy / paste \"function( ... }\" into the correct calback parameter\n// use the \"debugger\" statement to debug your callback inside your browser\n\nvar topCalc = function(values, data, calcParams){\n    var total = 0;\n    var calc = 0;\n    var count = 0;\n    data.forEach(value => {\n        total+=Number(value.numberValue);\n        count++;\n    });\n    if (count>0) calc=(total/count).toFixed(2);\n    return `${calc} (avg)`;\n}\n\nvar legend = function (value) {\n    if (value<100) return \"<span style='color:#FF0000;'>\"+value+\"</span>\";\n    else return \"<span style='color:#000000;'>\"+value+\"</span>\"; \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 712,
        "y": 2568,
        "wires": [
            []
        ]
    },
    {
        "id": "91506d4b.4956a",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "Intentionally not wired into the flow!",
        "info": "use the editor to write callback functions\n\nDO NOT wire this into your flow!\n\ncopy / paste `function( ... }` into the correct calback parameter\nuse the `debugger` statement to debug your callback inside your browser\n",
        "x": 762,
        "y": 2534,
        "wires": []
    },
    {
        "id": "732afcea.f728f4",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 14,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "reset Number column",
        "tooltip": "inject additional paramters to numberValue column",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"numberValue\",\"formatter\":\"plainText\",\"topCalc\":\"\",\"headerTooltip\":\"\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 382,
        "y": 2670,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "89cca7ea.7fc998",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 15,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "add/show id column",
        "tooltip": "add a new column",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"id\",\"title\":\"id\",\"visible\":true,\"formatter\":\"plainText\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 382,
        "y": 2738,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "32a3c4ad.1b85fc",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 16,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "hide id column",
        "tooltip": "hide id column (it is not possible to delete a existing column definition)",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "[{\"field\":\"id\",\"title\":\"id\",\"visible\":false,\"formatter\":\"plainText\"}]",
        "payloadType": "json",
        "topic": "columns",
        "x": 362,
        "y": 2772,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "25247f4b.cc7ec",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 196,
        "y": 2296,
        "wires": [
            [
                "75207e8d.c54d4",
                "bd3fd382.a2aa9"
            ]
        ]
    },
    {
        "id": "18ed8d27.bf00a3",
        "type": "ui_button",
        "z": "1285e099664f8de3",
        "name": "",
        "group": "ff9fdb9a.7da098",
        "order": 10,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "reset Numbers > 100",
        "tooltip": "using a rowFormatter callback function",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"payload\":\"\"}",
        "payloadType": "json",
        "topic": "rowFormatter",
        "x": 382,
        "y": 2466,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "bd3fd382.a2aa9",
        "type": "ui_switch",
        "z": "1285e099664f8de3",
        "name": "headerVisible",
        "label": "headerVisible",
        "tooltip": "",
        "group": "ff9fdb9a.7da098",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "headerVisible",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 362,
        "y": 2347,
        "wires": [
            [
                "16664cef.5b26b3"
            ]
        ]
    },
    {
        "id": "bada4241cd727c4c",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "getSelectedData",
        "func": "msg.payload={\n    command:\"getSelectedData\",\n    arguments: [],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 434,
        "y": 340,
        "wires": [
            [
                "7d48e13.90ee22"
            ]
        ],
        "info": "# deleteRow(row / [rows])\n\n`row=singleId`\n\nor\n\n`row=[array of IDs]` // seems there is a bug/issue in tabulator\n\ndelete a single the row with an id in the middle from 1 to lastId, hope it exists.\n\nWill fail on the second hit if you inject this two times because the id wad deleteted on the first"
    },
    {
        "id": "5986ac8dcafb9ec6",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "getSelectedRows",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 340,
        "wires": [
            [
                "bada4241cd727c4c"
            ]
        ]
    },
    {
        "id": "b6c6a086d09a0f62",
        "type": "comment",
        "z": "1285e099664f8de3",
        "name": "Rich table",
        "info": "",
        "x": 180,
        "y": 140,
        "wires": []
    },
    {
        "id": "cde1b7dff14c3bef",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "clearData",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "e5e684ef22f2dbb2"
            ]
        ]
    },
    {
        "id": "994042ac295fe4bc",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"selectable\":1}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e5e684ef22f2dbb2",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "clearData",
        "func": "\nmsg.payload={\n    command:\"clearData\",\n    arguments: [],\n    returnPromise: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "7d48e13.90ee22"
            ]
        ],
        "info": "# clear data\n\nunfortunately this command (currently) do not send a promise back! So we have to pass it directly to the table handler"
    },
    {
        "id": "41e82408528a8563",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "data return from command",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 220,
        "wires": []
    },
    {
        "id": "3a570391f78b510c",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "a796b0823c216563"
            ]
        ]
    },
    {
        "id": "a796b0823c216563",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "ui_control",
        "rules": [
            {
                "t": "set",
                "p": "ui_control",
                "pt": "msg",
                "to": "{\"tabulator\":{\"selectable\":3,\"columns\":[{\"formatter\":\"rowSelection\",\"titleFormatter\":\"rowSelection\",\"align\":\"center\",\"headerSort\":false}]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "7d48e13.90ee22"
            ]
        ]
    },
    {
        "id": "f69452b1.447158",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "a005132f.6196e8",
        "name": "Without quotation",
        "order": 0,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "Col 1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 630,
        "y": 2980,
        "wires": [],
        "info": "\n\nA really simple table without quotation marks"
    },
    {
        "id": "a8e19fb2.35c11",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 2980,
        "wires": [
            [
                "69b33eaf.57d248"
            ]
        ]
    },
    {
        "id": "69b33eaf.57d248",
        "type": "change",
        "z": "1285e099664f8de3",
        "name": "Set Data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t   {\t       \"name\": \"Will\",\t       \"city\": \"Paris\"\t    },\t   {\t       \"name\": \"Jean-Claude\",\t       \"city\": \"London\"\t    },\t   {\t       \"name\": \"O'Hara\",\t       \"city\": \"Beirut\"\t    },\t    {\t    \"name\": '\"The Nail\"',\t    \"city\": \"Hammersmith\"\t    }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 2980,
        "wires": [
            [
                "f69452b1.447158",
                "cb212221.fc40d8",
                "3e460172.857ed6",
                "ade38373.01654",
                "9216fb01.47f52",
                "e9c07312.e0e7c",
                "d80cc268.700478"
            ]
        ]
    },
    {
        "id": "cb212221.fc40d8",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "1885673b.2145c1",
        "name": "Single quote in 'TableName'",
        "order": 0,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "Col 1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 3040,
        "wires": [],
        "info": "\n\nA really simple table with single quotation marks in Table Name"
    },
    {
        "id": "3e460172.857ed6",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "9971c312.3702d8",
        "name": "Single quote in Column Title",
        "order": 1,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "&#39;Col 1&#39;",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 3100,
        "wires": [],
        "info": "\n\nA really simple table with single quotation mark in Column Title"
    },
    {
        "id": "ade38373.01654",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "47f6a8.a2c36158",
        "name": "Single quote in Description",
        "order": 1,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "Col 1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 3160,
        "wires": [],
        "info": "\n\nA really simple table with 'single quotation' marks in description."
    },
    {
        "id": "9216fb01.47f52",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "1885673b.2145c1",
        "name": "Double quote in \"TableName\"",
        "order": 0,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "Col 1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 3220,
        "wires": [],
        "info": "\n\nA really simple table with double quotation marks in Table Name"
    },
    {
        "id": "e9c07312.e0e7c",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "9971c312.3702d8",
        "name": "Double quote in Column Title",
        "order": 1,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "\"Col 1\"",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 3280,
        "wires": [],
        "info": "\n\nA really simple table with double quotation mark in Column Title"
    },
    {
        "id": "d80cc268.700478",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "47f6a8.a2c36158",
        "name": "Double quote in Description",
        "order": 1,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "name",
                "title": "Col 1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "city",
                "title": "Col 2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 3340,
        "wires": [],
        "info": "\n\nA really simple table with \"double quotation\" marks in description."
    },
    {
        "id": "8a38e79e.e30648",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "Format Table",
        "func": "\n//var DT_List = global.get(\"DT_List\");\n//var i;\n//var Line = msg.payload;\n\n\n\n// Can change color in CSS, but not sure where / how to do this:\n    //.tabulator .tabulator-row.selected{\n    //\tbackground: #f00 !important; /*highlight selected row red, make sure it overrides existing styling*/\n    //}\n\n// Display up to 12 rows, select row 0, and highlight in red.\nmsg.ui_control = {\n    \"customHeight\":12,\n    \"tabulator\": {\n        \"selectable\":1,\n        \"renderComplete\":\"function(){this.send({ui_control:{callback:'renderComplete'}})}\"\n    }\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 3580,
        "wires": [
            [
                "1d03a916.1ea9c7"
            ]
        ]
    },
    {
        "id": "1d03a916.1ea9c7",
        "type": "ui_table",
        "z": "1285e099664f8de3",
        "group": "58a8895c.e04f28",
        "name": "Table1",
        "order": 1,
        "width": "16",
        "height": "10",
        "columns": [
            {
                "field": "RecNo",
                "title": "RecNo",
                "width": "11px",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "EvtStartTime",
                "title": "Event Start Time",
                "width": "20px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "L_Code",
                "title": "L_Code",
                "width": "12px",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Dur",
                "title": "Dur",
                "width": "10px",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 795,
        "y": 3580,
        "wires": [
            [
                "2e4f7d73.baa142",
                "5e0b3d4e.bc9634"
            ]
        ]
    },
    {
        "id": "2e4f7d73.baa142",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "A",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 948,
        "y": 3563,
        "wires": []
    },
    {
        "id": "2ba17e32.afc672",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "InitializeData",
        "func": "msg.payload = [{\n\t\t\t\"ID\": 20879,\n\t\t\t\"WO_StartTime\": \"2020-08-01 16:05:29\",\n\t\t\t\"EvtStartTime\": \"2020-08-01 17:29:11\",\n\t\t\t\"WO_No\": \"AUG1B\",\n\t\t\t\"RecNo\": 49,\n\t\t\t\"ModeNo\": 1,\n\t\t\t\"L_Code\": 45,\n\t\t\t\"Dur\": 0.07,\n\t\t\t\"L_Reason\": \"45 - Filler - Idle Blocked - Outfeed Conveyor Full\"\n\t\t},\n\t\t{\n\t\t\t\"ID\": 20878,\n\t\t\t\"WO_StartTime\": \"2020-08-01 16:05:29\",\n\t\t\t\"EvtStartTime\": \"2020-08-01 17:28:43\",\n\t\t\t\"WO_No\": \"AUG1B\",\n\t\t\t\"RecNo\": 48,\n\t\t\t\"ModeNo\": 1,\n\t\t\t\"L_Code\": 144,\n\t\t\t\"Dur\": 0.47,\n\t\t\t\"L_Reason\": \"144 - Labeler - Low Low Labels\"\n\t\t},\n\t\t{\n\t\t\t\"ID\": 20877,\n\t\t\t\"WO_StartTime\": \"2020-08-01 16:05:29\",\n\t\t\t\"EvtStartTime\": \"2020-08-01 17:24:29\",\n\t\t\t\"WO_No\": \"AUG1B\",\n\t\t\t\"RecNo\": 46,\n\t\t\t\"ModeNo\": 1,\n\t\t\t\"L_Code\": 91,\n\t\t\t\"Dur\": 4.22,\n\t\t\t\"L_Reason\": \"91 - Seamer - System Manual Mode\"\n\t\t},\n\t\t{\n\t\t\t\"ID\": 20875,\n\t\t\t\"WO_StartTime\": \"2020-08-01 16:05:29\",\n\t\t\t\"EvtStartTime\": \"2020-08-01 17:24:25\",\n\t\t\t\"WO_No\": \"AUG1B\",\n\t\t\t\"RecNo\": 44,\n\t\t\t\"ModeNo\": 1,\n\t\t\t\"L_Code\": 9,\n\t\t\t\"Dur\": 0.02,\n\t\t\t\"L_Reason\": \"9 - Can Cleaner - Door #2 Open\"\n\t\t},\n\t\t{\n\t\t\t\"ID\": 20874,\n\t\t\t\"WO_StartTime\": \"2020-08-01 16:05:29\",\n\t\t\t\"EvtStartTime\": \"2020-08-01 17:00:00\",\n\t\t\t\"WO_No\": \"AUG1B\",\n\t\t\t\"RecNo\": 42,\n\t\t\t\"ModeNo\": 1,\n\t\t\t\"L_Code\": 35,\n\t\t\t\"Dur\": 9.43,\n\t\t\t\"L_Reason\": \"35 - Filler - Inspection Door 2 Open\"\n\t\t}];\n\t\t\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 3529,
        "wires": [
            [
                "8a38e79e.e30648"
            ]
        ]
    },
    {
        "id": "2ebc4a57.75db86",
        "type": "inject",
        "z": "1285e099664f8de3",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 193,
        "y": 3512,
        "wires": [
            [
                "2ba17e32.afc672"
            ]
        ]
    },
    {
        "id": "13a31094.82261f",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "select row 1",
        "func": "if (msg.hasOwnProperty('ui_control') && msg.ui_control.callback === \"renderComplete\") {\n    var msgOut={\n        payload:{\n            command:\"selectRow\",\n            arguments: [1],\n            returnPromise: false\n        }\n    }\n    return msgOut;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 3648,
        "wires": [
            [
                "1d03a916.1ea9c7",
                "c347a95e.b7a9f8"
            ]
        ]
    },
    {
        "id": "6bb94a63.257154",
        "type": "ui_ui_control",
        "z": "1285e099664f8de3",
        "name": "",
        "events": "all",
        "x": 193,
        "y": 3546,
        "wires": [
            [
                "2ba17e32.afc672"
            ]
        ]
    },
    {
        "id": "5e0b3d4e.bc9634",
        "type": "link out",
        "z": "1285e099664f8de3",
        "name": "",
        "links": [
            "88bc27e0.a8cb58"
        ],
        "x": 913,
        "y": 3614,
        "wires": []
    },
    {
        "id": "88bc27e0.a8cb58",
        "type": "link in",
        "z": "1285e099664f8de3",
        "name": "",
        "links": [
            "5e0b3d4e.bc9634"
        ],
        "x": 250,
        "y": 3648,
        "wires": [
            [
                "13a31094.82261f"
            ]
        ]
    },
    {
        "id": "c347a95e.b7a9f8",
        "type": "debug",
        "z": "1285e099664f8de3",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 625,
        "y": 3648,
        "wires": []
    },
    {
        "id": "d919bea9.aba6d",
        "type": "function",
        "z": "1285e099664f8de3",
        "name": "callback functions",
        "func": "var rowFormatter = function(row){     \n    var data = row.getData();\n    switch (data.$state) {\n        case 'lost':             \n            row.getElement().style.backgroundColor = '#9e2e66';\n            row.getElement().style.color = '#a6a6a6';\n            break;         \n        case 'sleeping':\n            row.getElement().style.backgroundColor = '#336699';\n            break;\n        case 'disconnected':\n            row.getElement().style.backgroundColor = '#cc3300';\n            row.getElement().style.color = '#a6a6a6';\n            break;\n        case 'alert':             \n            row.getElement().style.backgroundColor = '#A6A6DF';\n            break;         \n        case 'init':             \n            row.getElement().style.backgroundColor = '#f2f20d';\n            break;         \n        case 'ready':\n            row.getElement().style.backgroundColor = '';\n            row.getElement().style.color = '';\n            break;         \n        \n    } \n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 835,
        "y": 3665,
        "wires": [
            []
        ]
    },
    {
        "id": "4559eee0c3cbbaee",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "HOST0",
        "payloadType": "env",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "30123cdfc0e3e013"
            ]
        ]
    },
    {
        "id": "30123cdfc0e3e013",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c8e5a3872ff4680",
        "type": "change",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "host0",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "port0",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f37e58c999625122",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 760,
        "wires": []
    },
    {
        "id": "1c6cb9fa85386b7b",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 520,
        "wires": []
    },
    {
        "id": "d34e177bb85ef18c",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "[1]",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[1]",
        "payloadType": "bin",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "f1c2538819427ef6"
            ]
        ]
    },
    {
        "id": "0f80f1703f1327e7",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 700,
        "wires": []
    },
    {
        "id": "d741d535e1a17371",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "[2]",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[2]",
        "payloadType": "bin",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "f1c2538819427ef6"
            ]
        ]
    },
    {
        "id": "f1c2538819427ef6",
        "type": "subflow:b8af3da32fdbe614",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "env": [
            {
                "name": "envHost",
                "value": "HOST1",
                "type": "env"
            }
        ],
        "x": 530,
        "y": 700,
        "wires": [
            [
                "0f80f1703f1327e7"
            ],
            [
                "f37e58c999625122"
            ]
        ]
    },
    {
        "id": "b00ff63f4a49224d",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "[1]",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[1]",
        "payloadType": "bin",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "aac97dd8bf68c2bd"
            ]
        ]
    },
    {
        "id": "aabd71ac1fc04124",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 420,
        "wires": []
    },
    {
        "id": "fdd5d4ea12b5e17d",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "[2]",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[2]",
        "payloadType": "bin",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "aac97dd8bf68c2bd"
            ]
        ]
    },
    {
        "id": "959cf28d075da866",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "global clean",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 830,
        "y": 280,
        "wires": [
            [
                "2c8e5a3872ff4680"
            ]
        ]
    },
    {
        "id": "aac97dd8bf68c2bd",
        "type": "subflow:b8af3da32fdbe614",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "env": [
            {
                "name": "Host",
                "value": "HOST0",
                "type": "env"
            }
        ],
        "x": 530,
        "y": 460,
        "wires": [
            [
                "aabd71ac1fc04124"
            ],
            [
                "1c6cb9fa85386b7b"
            ]
        ]
    },
    {
        "id": "74d8dd142a10b5f7",
        "type": "change",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "host0",
                "pt": "global",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "port0",
                "pt": "global",
                "to": "1234",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "1b71f0c8ad1191cb",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "global setup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 830,
        "y": 340,
        "wires": [
            [
                "74d8dd142a10b5f7"
            ]
        ]
    },
    {
        "id": "116ae6d3ca413997",
        "type": "change",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "localhost 1235",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "1235",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1040,
        "wires": [
            [
                "4c355020278b364b"
            ]
        ]
    },
    {
        "id": "fa8a37b56f5a557c",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "fe22f9cc6ffeb28d"
            ]
        ]
    },
    {
        "id": "fe22f9cc6ffeb28d",
        "type": "tcp out",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 510,
        "y": 320,
        "wires": []
    },
    {
        "id": "b0acd6258de6b653",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "[2]",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[2]",
        "payloadType": "bin",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "6b2ea9026db5ab1f"
            ]
        ]
    },
    {
        "id": "7ae07e98ba2a6547",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "session",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1220,
        "wires": []
    },
    {
        "id": "b99d375491ef3a28",
        "type": "change",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "session_tcp",
                "pt": "flow",
                "to": "status._session",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "7ae07e98ba2a6547"
            ]
        ]
    },
    {
        "id": "1eba7e9f22f617e1",
        "type": "status",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "",
        "scope": [
            "4c355020278b364b"
        ],
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "b99d375491ef3a28"
            ]
        ]
    },
    {
        "id": "a11dd86553a1860b",
        "type": "change",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "[1]",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[1]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 920,
        "wires": [
            [
                "6b2ea9026db5ab1f"
            ]
        ]
    },
    {
        "id": "18ba3d166261a585",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 920,
        "wires": [
            [
                "a11dd86553a1860b"
            ]
        ]
    },
    {
        "id": "3a52babadb278923",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "response from server",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 920,
        "wires": []
    },
    {
        "id": "fe9a63f58f45898e",
        "type": "inject",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 1120,
        "wires": [
            [
                "116ae6d3ca413997"
            ]
        ]
    },
    {
        "id": "6b2ea9026db5ab1f",
        "type": "change",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "localhost 1234",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "localhost",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "1234",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 920,
        "wires": [
            [
                "4c355020278b364b"
            ]
        ]
    },
    {
        "id": "4c355020278b364b",
        "type": "tcp request",
        "z": "7862a34a08f3a48c",
        "g": "789c0d02d76fa9f6",
        "name": "tcp client",
        "server": "",
        "port": "",
        "out": "sit",
        "ret": "buffer",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 800,
        "y": 920,
        "wires": [
            [
                "3a52babadb278923"
            ]
        ]
    },
    {
        "id": "63516bb7e27ec895",
        "type": "subflow:23ace50339cc8aec",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "304c1ef83519af82",
        "type": "debug",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "debug listen from client",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 200,
        "wires": []
    },
    {
        "id": "7e780e28a369d0c0",
        "type": "tcp in",
        "z": "7862a34a08f3a48c",
        "g": "35de261249cdd446",
        "name": "tcp server for testing on 1234",
        "server": "server",
        "host": "",
        "port": "1234",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "304c1ef83519af82",
                "63516bb7e27ec895"
            ]
        ]
    },
    {
        "id": "8035baaa.c1b388",
        "type": "inject",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "value",
                "v": "node-red",
                "vt": "str"
            },
            {
                "p": "website",
                "v": "http://localhost:1880/",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "ac56ed7b69e039f1"
            ]
        ]
    },
    {
        "id": "8206817b.71a7c",
        "type": "find element",
        "z": "6a5fd7c2.ab7598",
        "name": "Find Search input",
        "selector": "id",
        "target": "searchbox_input",
        "multiple": false,
        "timeout": 3000,
        "waitFor": "2000",
        "x": 390,
        "y": 220,
        "wires": [
            [
                "1985f907499d79a7"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "c7c135a0.c0d6e8",
        "type": "debug",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 320,
        "wires": []
    },
    {
        "id": "c028eb25.13e088",
        "type": "catch",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "5647d8a4.05c3e8"
            ]
        ]
    },
    {
        "id": "5647d8a4.05c3e8",
        "type": "debug",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "d210dfa4.b7c89",
        "type": "click on",
        "z": "6a5fd7c2.ab7598",
        "name": "Click on search button",
        "selector": "xpath",
        "target": "//*/button[@type='submit']",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "clickOn": false,
        "x": 400,
        "y": 420,
        "wires": [
            [
                "858ace24.4a56"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "858ace24.4a56",
        "type": "click on",
        "z": "6a5fd7c2.ab7598",
        "name": "Click on first result",
        "selector": "xpath",
        "target": "//article[1]",
        "mode": "first",
        "timeout": "2000",
        "waitFor": 3000,
        "clickOn": true,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "a2206fd8.d9eb"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "a2206fd8.d9eb",
        "type": "get title",
        "z": "6a5fd7c2.ab7598",
        "name": "Get web page title",
        "expected": "Node-RED",
        "timeout": 3000,
        "waitFor": 500,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "2ba887ee.fc34d8",
                "c2056332.91fa4"
            ],
            [
                "2f745a90.666676",
                "c2056332.91fa4"
            ]
        ]
    },
    {
        "id": "2f745a90.666676",
        "type": "screenshot",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "filePath": "./test.png",
        "waitFor": 500,
        "x": 870,
        "y": 320,
        "wires": [
            [
                "edb3ba8283829ac1"
            ],
            [
                "edb3ba8283829ac1"
            ]
        ]
    },
    {
        "id": "e99182df.60e55",
        "type": "comment",
        "z": "6a5fd7c2.ab7598",
        "name": "Load Brower and look for node-red website",
        "info": "",
        "x": 280,
        "y": 80,
        "wires": []
    },
    {
        "id": "a25ea2e3.ea1ec",
        "type": "comment",
        "z": "6a5fd7c2.ab7598",
        "name": "Navigate on Node-Red Website",
        "info": "",
        "x": 250,
        "y": 480,
        "wires": []
    },
    {
        "id": "2ba887ee.fc34d8",
        "type": "get text",
        "z": "6a5fd7c2.ab7598",
        "name": "Get H1 text",
        "expected": "",
        "selector": "tag name",
        "target": "h1",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 370,
        "y": 700,
        "wires": [
            [
                "26a1b5e4.c3c18a",
                "c2056332.91fa4"
            ],
            [
                "2f745a90.666676",
                "c2056332.91fa4"
            ]
        ]
    },
    {
        "id": "26a1b5e4.c3c18a",
        "type": "navigate",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "url": "https://flows.nodered.org/",
        "navType": "to",
        "waitFor": 500,
        "x": 360,
        "y": 780,
        "wires": [
            [
                "14574237.855fbe"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "e83ff6a8.152d08",
        "type": "click on",
        "z": "6a5fd7c2.ab7598",
        "name": "Click on first result",
        "selector": "xpath",
        "target": "//div[contains(@class,\"filter-results\")]//a[1]",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "clickOn": false,
        "x": 390,
        "y": 940,
        "wires": [
            [
                "95e0c843.9bcf48"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "14574237.855fbe",
        "type": "send keys",
        "z": "6a5fd7c2.ab7598",
        "name": "Write search text",
        "keys": "selenium",
        "selector": "id",
        "target": "filter-term",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "clearVal": false,
        "x": 390,
        "y": 860,
        "wires": [
            [
                "e83ff6a8.152d08"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "95e0c843.9bcf48",
        "type": "get attribute",
        "z": "6a5fd7c2.ab7598",
        "name": "Check style from H1 flow-title",
        "attribute": "style",
        "property": "",
        "expected": "margin-bottom: 10px;",
        "selector": "className",
        "target": "flow-title",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "2f745a90.666676",
                "c2056332.91fa4"
            ],
            [
                "2f745a90.666676",
                "c2056332.91fa4"
            ]
        ]
    },
    {
        "id": "c2056332.91fa4",
        "type": "debug",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 760,
        "wires": []
    },
    {
        "id": "ac56ed7b69e039f1",
        "type": "open browser",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "browserType": "chrome",
        "webURL": "{{msg.website}}",
        "width": 1280,
        "height": 1024,
        "timeout": 3000,
        "maximized": true,
        "headless": false,
        "args": [
            "--disable-web-security"
        ],
        "serverURL": "http://localhost:4444/wd/hub/",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "8206817b.71a7c"
            ]
        ]
    },
    {
        "id": "edb3ba8283829ac1",
        "type": "close browser",
        "z": "6a5fd7c2.ab7598",
        "name": "",
        "waitFor": 500,
        "x": 1050,
        "y": 320,
        "wires": [
            [
                "c7c135a0.c0d6e8"
            ]
        ]
    },
    {
        "id": "1985f907499d79a7",
        "type": "send keys",
        "z": "6a5fd7c2.ab7598",
        "name": "Write \"node-red\" to search",
        "keys": "node-red",
        "selector": "",
        "target": "",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "clearVal": true,
        "x": 420,
        "y": 320,
        "wires": [
            [
                "d210dfa4.b7c89"
            ],
            [
                "2f745a90.666676"
            ]
        ]
    },
    {
        "id": "caf806fd0a2faf01",
        "type": "inject",
        "z": "f0421dd89023bcf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "12582a7e503867c9"
            ]
        ]
    },
    {
        "id": "12582a7e503867c9",
        "type": "open browser",
        "z": "f0421dd89023bcf4",
        "name": "",
        "browserType": "chrome",
        "webURL": "https://simonradier.github.io/simple-webdriver/test/html/",
        "width": 1280,
        "height": 1024,
        "timeout": 3000,
        "maximized": true,
        "headless": false,
        "args": [],
        "serverURL": "http://localhost:9515",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "9b8dbcec2e59e672"
            ]
        ]
    },
    {
        "id": "5a51c46752286227",
        "type": "debug",
        "z": "f0421dd89023bcf4",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 460,
        "wires": []
    },
    {
        "id": "f07f4e70bc28c542",
        "type": "close browser",
        "z": "f0421dd89023bcf4",
        "name": "",
        "waitFor": 500,
        "x": 690,
        "y": 460,
        "wires": [
            [
                "5a51c46752286227"
            ]
        ]
    },
    {
        "id": "9b8dbcec2e59e672",
        "type": "get title",
        "z": "f0421dd89023bcf4",
        "name": "",
        "expected": "WD2 Test Page",
        "timeout": 3000,
        "waitFor": 500,
        "x": 180,
        "y": 260,
        "wires": [
            [
                "45314bc6d0d0b6d2",
                "f3d47f690c1d69ed"
            ],
            [
                "f08f6dcd21ded000"
            ]
        ]
    },
    {
        "id": "45314bc6d0d0b6d2",
        "type": "debug",
        "z": "f0421dd89023bcf4",
        "name": "payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 120,
        "wires": []
    },
    {
        "id": "20992e44e0799919",
        "type": "link in",
        "z": "f0421dd89023bcf4",
        "name": "link in 1",
        "links": [],
        "x": 575,
        "y": 460,
        "wires": [
            [
                "f07f4e70bc28c542"
            ]
        ]
    },
    {
        "id": "f08f6dcd21ded000",
        "type": "link call",
        "z": "f0421dd89023bcf4",
        "name": "End",
        "links": [
            "20992e44e0799919"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 610,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f3d47f690c1d69ed",
        "type": "get text",
        "z": "f0421dd89023bcf4",
        "name": "",
        "expected": "test id",
        "selector": "id",
        "target": "id_1234",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 180,
        "y": 340,
        "wires": [
            [
                "45314bc6d0d0b6d2",
                "f289b8bbe0ded55d"
            ],
            [
                "f08f6dcd21ded000"
            ]
        ]
    },
    {
        "id": "f289b8bbe0ded55d",
        "type": "get cookie",
        "z": "f0421dd89023bcf4",
        "name": "",
        "cookieName": "cookie2",
        "timeout": 3000,
        "waitFor": 500,
        "x": 190,
        "y": 440,
        "wires": [
            [
                "45314bc6d0d0b6d2",
                "d56f71a3cf4f2243"
            ],
            [
                "f08f6dcd21ded000"
            ]
        ]
    },
    {
        "id": "b5a68dfd94d1ba04",
        "type": "get cookie",
        "z": "f0421dd89023bcf4",
        "name": "Get test cookie",
        "cookieName": "test",
        "timeout": 3000,
        "waitFor": 500,
        "x": 200,
        "y": 600,
        "wires": [
            [
                "4a5548620e295f42",
                "45314bc6d0d0b6d2"
            ],
            [
                "f08f6dcd21ded000"
            ]
        ]
    },
    {
        "id": "d56f71a3cf4f2243",
        "type": "set cookie",
        "z": "f0421dd89023bcf4",
        "name": "Create test cookie",
        "delete": false,
        "advanced": false,
        "cookieName": "test",
        "cookieValue": "test",
        "cookiePath": "",
        "cookieDomain": "",
        "cookieSecure": false,
        "cookieHttpOnly": false,
        "cookieExpiry": "",
        "timeout": 3000,
        "waitFor": 500,
        "x": 210,
        "y": 520,
        "wires": [
            [
                "b5a68dfd94d1ba04"
            ],
            [
                "45314bc6d0d0b6d2"
            ]
        ]
    },
    {
        "id": "4a5548620e295f42",
        "type": "set cookie",
        "z": "f0421dd89023bcf4",
        "name": "Delete test cookie",
        "delete": true,
        "advanced": false,
        "cookieName": "test",
        "cookieValue": "test",
        "cookiePath": "",
        "cookieDomain": "",
        "cookieSecure": false,
        "cookieHttpOnly": false,
        "cookieExpiry": "",
        "timeout": 3000,
        "waitFor": 500,
        "x": 210,
        "y": 680,
        "wires": [
            [
                "63ab3c1332419b7c"
            ],
            [
                "f08f6dcd21ded000"
            ]
        ]
    },
    {
        "id": "63ab3c1332419b7c",
        "type": "get cookie",
        "z": "f0421dd89023bcf4",
        "name": "Get test cookie again",
        "cookieName": "test",
        "timeout": 3000,
        "waitFor": 500,
        "x": 220,
        "y": 780,
        "wires": [
            [
                "45314bc6d0d0b6d2"
            ],
            [
                "f08f6dcd21ded000"
            ]
        ]
    },
    {
        "id": "f1a5b48fb0c7658b",
        "type": "comment",
        "z": "f0421dd89023bcf4",
        "name": "Get test cookie should fail",
        "info": "",
        "x": 230,
        "y": 740,
        "wires": []
    },
    {
        "id": "5894633167536a87",
        "type": "inject",
        "z": "344d20bdc278fdd1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "61c8946dda8dcedb"
            ]
        ]
    },
    {
        "id": "61c8946dda8dcedb",
        "type": "open browser",
        "z": "344d20bdc278fdd1",
        "name": "",
        "browserType": "chrome",
        "webURL": "https://simonradier.github.io/simple-webdriver/test/html/",
        "width": 1280,
        "height": 1024,
        "timeout": 3000,
        "maximized": true,
        "headless": false,
        "args": [],
        "serverURL": "http://localhost:9515",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "a27e4be40fa9fe2a"
            ]
        ]
    },
    {
        "id": "a27e4be40fa9fe2a",
        "type": "get text",
        "z": "344d20bdc278fdd1",
        "name": "",
        "expected": "Hello",
        "selector": "tag name",
        "target": "h1",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "b0fae3b2c5f9fc4e"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "b0fae3b2c5f9fc4e",
        "type": "switch frame",
        "z": "344d20bdc278fdd1",
        "name": "Swith Frame by Number",
        "switchMode": "number",
        "frameNumber": "0",
        "selector": "",
        "target": "",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 230,
        "y": 360,
        "wires": [
            [
                "f53318f966c87c1f"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "f53318f966c87c1f",
        "type": "get text",
        "z": "344d20bdc278fdd1",
        "name": "",
        "expected": "Hello World",
        "selector": "tag name",
        "target": "h1",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 180,
        "y": 440,
        "wires": [
            [
                "ed1bdac6d446feab"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "ed1bdac6d446feab",
        "type": "switch frame",
        "z": "344d20bdc278fdd1",
        "name": "Go to Parent",
        "switchMode": "parent",
        "frameNumber": "0",
        "selector": "",
        "target": "",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 190,
        "y": 520,
        "wires": [
            [
                "24a26d30b598ee3d"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "24a26d30b598ee3d",
        "type": "get text",
        "z": "344d20bdc278fdd1",
        "name": "",
        "expected": "Hello",
        "selector": "tag name",
        "target": "h1",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 180,
        "y": 580,
        "wires": [
            [
                "787e1563e40338a2"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "787e1563e40338a2",
        "type": "switch frame",
        "z": "344d20bdc278fdd1",
        "name": "Switch Frame by Element",
        "switchMode": "id",
        "frameNumber": "0",
        "selector": "id",
        "target": "frame-test2",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 230,
        "y": 660,
        "wires": [
            [
                "1702b01926daa96b"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "ac74894930207891",
        "type": "debug",
        "z": "344d20bdc278fdd1",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 580,
        "wires": []
    },
    {
        "id": "9f9a1b8a621ded0c",
        "type": "close browser",
        "z": "344d20bdc278fdd1",
        "name": "",
        "waitFor": 500,
        "x": 770,
        "y": 580,
        "wires": [
            [
                "ac74894930207891"
            ]
        ]
    },
    {
        "id": "c31da43ea5248b78",
        "type": "link in",
        "z": "344d20bdc278fdd1",
        "name": "link in 2",
        "links": [],
        "x": 655,
        "y": 580,
        "wires": [
            [
                "9f9a1b8a621ded0c"
            ]
        ]
    },
    {
        "id": "b29debd04cca249f",
        "type": "link call",
        "z": "344d20bdc278fdd1",
        "name": "End",
        "links": [
            "c31da43ea5248b78"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 810,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "1702b01926daa96b",
        "type": "get text",
        "z": "344d20bdc278fdd1",
        "name": "",
        "expected": "This is a test",
        "selector": "tag name",
        "target": "h1",
        "mode": "first",
        "timeout": 1000,
        "waitFor": 500,
        "savetofile": false,
        "x": 180,
        "y": 740,
        "wires": [
            [
                "b29debd04cca249f"
            ],
            [
                "b29debd04cca249f"
            ]
        ]
    },
    {
        "id": "35def20bd7cb87f4",
        "type": "open browser",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "browserType": "chrome",
        "webURL": "https://critik.fr/test_node.html",
        "width": 1280,
        "height": 1024,
        "timeout": 3000,
        "maximized": true,
        "headless": false,
        "args": [],
        "serverURL": "http://localhost:9515",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "43d4e1238f87a7fa"
            ]
        ]
    },
    {
        "id": "5549920d1c7be16d",
        "type": "inject",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "107bad4fd813adb9"
            ]
        ]
    },
    {
        "id": "43d4e1238f87a7fa",
        "type": "click on",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "selector": "className",
        "target": "counter",
        "mode": "all-each",
        "timeout": 1000,
        "waitFor": 500,
        "clickOn": false,
        "x": 460,
        "y": 280,
        "wires": [
            [
                "1d2be0a373adebd8",
                "6fdb417e05e4dccf"
            ],
            [
                "1d2be0a373adebd8",
                "3ca80950c841d745"
            ]
        ]
    },
    {
        "id": "1d2be0a373adebd8",
        "type": "switch",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "property": "last",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 280,
        "wires": [
            [
                "97a680a286838c45"
            ]
        ]
    },
    {
        "id": "107bad4fd813adb9",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Init",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "35def20bd7cb87f4"
            ]
        ]
    },
    {
        "id": "3ca80950c841d745",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Error Number",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "$flowContext(\"errorNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "6fdb417e05e4dccf",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Success Number",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "$flowContext(\"successNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "97a680a286838c45",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Retreive counter",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "msg",
                "to": "errorNumber",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "successNumber",
                "pt": "msg",
                "to": "successNumber",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "4c65ed4d04d743ff"
            ]
        ]
    },
    {
        "id": "18d15b6b6736628f",
        "type": "debug",
        "z": "b4a977197bd7a1f7",
        "name": "Write Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "test",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 420,
        "wires": []
    },
    {
        "id": "4c65ed4d04d743ff",
        "type": "function",
        "z": "b4a977197bd7a1f7",
        "name": "Check",
        "func": "if (msg.errorNumber == 1 && msg.successNumber == 2)\n    msg.test = \"All continue on error each message : success\"\nelse\n    msg.test = \"All continue on error each message : failure\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "18d15b6b6736628f",
                "7b01d0fa1d979d02"
            ]
        ]
    },
    {
        "id": "06e031fd0817940f",
        "type": "click on",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "selector": "className",
        "target": "counter",
        "mode": "all-error-stop-each",
        "timeout": 1000,
        "waitFor": 500,
        "clickOn": false,
        "x": 460,
        "y": 580,
        "wires": [
            [
                "3a3f2a838e89d53b",
                "b34d7373a7cdfd39"
            ],
            [
                "3a3f2a838e89d53b",
                "40c4aa8017d72d28"
            ]
        ]
    },
    {
        "id": "3a3f2a838e89d53b",
        "type": "switch",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "property": "last",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "924b3eefffc37549"
            ]
        ]
    },
    {
        "id": "7b01d0fa1d979d02",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Init",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "last",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 480,
        "wires": [
            [
                "6206898f2d87c181"
            ]
        ]
    },
    {
        "id": "40c4aa8017d72d28",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Error Number",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "$flowContext(\"errorNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "b34d7373a7cdfd39",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Success Number",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "$flowContext(\"successNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "924b3eefffc37549",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Retreive counter",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "msg",
                "to": "errorNumber",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "successNumber",
                "pt": "msg",
                "to": "successNumber",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "b4bffb7fe35c4c89"
            ]
        ]
    },
    {
        "id": "b4bffb7fe35c4c89",
        "type": "function",
        "z": "b4a977197bd7a1f7",
        "name": "Check",
        "func": "if (msg.errorNumber == 1 && msg.successNumber == 1)\n    msg.test = \"All stop on Error each message : success\"\nelse\n    msg.test = \"All stop on Error each message : failure\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 580,
        "wires": [
            [
                "18d15b6b6736628f",
                "361385abb72464dc"
            ]
        ]
    },
    {
        "id": "fdef637b34edf6ee",
        "type": "comment",
        "z": "b4a977197bd7a1f7",
        "name": "All (continue on error) Each Message",
        "info": "",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "0ab646b5a30fbe59",
        "type": "comment",
        "z": "b4a977197bd7a1f7",
        "name": "All (stop on error) Each Message",
        "info": "",
        "x": 370,
        "y": 400,
        "wires": []
    },
    {
        "id": "6206898f2d87c181",
        "type": "navigate",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "url": "",
        "navType": "refresh",
        "waitFor": 500,
        "x": 460,
        "y": 480,
        "wires": [
            [
                "06e031fd0817940f"
            ],
            [
                "06e031fd0817940f"
            ]
        ]
    },
    {
        "id": "3649974454333936",
        "type": "click on",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "selector": "className",
        "target": "counter",
        "mode": "all-last",
        "timeout": 1000,
        "waitFor": 500,
        "clickOn": false,
        "x": 460,
        "y": 920,
        "wires": [
            [
                "c40354587abcd40b",
                "038b0e1d338ff65f"
            ],
            [
                "c40354587abcd40b",
                "e08f6028f6df7210"
            ]
        ]
    },
    {
        "id": "c40354587abcd40b",
        "type": "switch",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "property": "last",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 920,
        "wires": [
            [
                "5a8a0df1fd43baad"
            ]
        ]
    },
    {
        "id": "361385abb72464dc",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Init",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "last",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 820,
        "wires": [
            [
                "80d77cb96c92c72a"
            ]
        ]
    },
    {
        "id": "e08f6028f6df7210",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Error Number",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "$flowContext(\"errorNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "038b0e1d338ff65f",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Success Number",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "$flowContext(\"successNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "5a8a0df1fd43baad",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Retreive counter",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "msg",
                "to": "errorNumber",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "successNumber",
                "pt": "msg",
                "to": "successNumber",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 920,
        "wires": [
            [
                "f450a6899dd4bcf5"
            ]
        ]
    },
    {
        "id": "f450a6899dd4bcf5",
        "type": "function",
        "z": "b4a977197bd7a1f7",
        "name": "Check",
        "func": "if (msg.errorNumber == 0 && msg.successNumber == 1)\n    msg.test = \"All continue on error last message : success\"\nelse\n    msg.test = \"All continue on error last message : failure\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 920,
        "wires": [
            [
                "18d15b6b6736628f",
                "b50068871e43552f"
            ]
        ]
    },
    {
        "id": "80d77cb96c92c72a",
        "type": "navigate",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "url": "",
        "navType": "refresh",
        "waitFor": 500,
        "x": 460,
        "y": 820,
        "wires": [
            [
                "3649974454333936"
            ],
            [
                "3649974454333936"
            ]
        ]
    },
    {
        "id": "53cfe19c5f6bba16",
        "type": "comment",
        "z": "b4a977197bd7a1f7",
        "name": "All (continue on error) Last Message",
        "info": "",
        "x": 380,
        "y": 740,
        "wires": []
    },
    {
        "id": "131116b0a325c568",
        "type": "click on",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "selector": "className",
        "target": "counter",
        "mode": "all-error-stop-last",
        "timeout": 1000,
        "waitFor": 500,
        "clickOn": false,
        "x": 460,
        "y": 1300,
        "wires": [
            [
                "1908124aa7e7da0f",
                "9f5cdd99f9f58291"
            ],
            [
                "1908124aa7e7da0f",
                "170c36b710de1040"
            ]
        ]
    },
    {
        "id": "1908124aa7e7da0f",
        "type": "switch",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "property": "last",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 1300,
        "wires": [
            [
                "be4a487876fe4df3"
            ]
        ]
    },
    {
        "id": "be4a487876fe4df3",
        "type": "close browser",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "waitFor": 500,
        "x": 850,
        "y": 1300,
        "wires": [
            [
                "f87d8226f1226e09"
            ]
        ]
    },
    {
        "id": "b50068871e43552f",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Init",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "delete",
                "p": "test",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "last",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1200,
        "wires": [
            [
                "644b0f88be66d531"
            ]
        ]
    },
    {
        "id": "170c36b710de1040",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Error Number",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "flow",
                "to": "$flowContext(\"errorNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "9f5cdd99f9f58291",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Count Success Number",
        "rules": [
            {
                "t": "set",
                "p": "successNumber",
                "pt": "flow",
                "to": "$flowContext(\"successNumber\") + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "f87d8226f1226e09",
        "type": "change",
        "z": "b4a977197bd7a1f7",
        "name": "Retreive counter",
        "rules": [
            {
                "t": "set",
                "p": "errorNumber",
                "pt": "msg",
                "to": "errorNumber",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "successNumber",
                "pt": "msg",
                "to": "successNumber",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1300,
        "wires": [
            [
                "8701df319ba31787"
            ]
        ]
    },
    {
        "id": "8701df319ba31787",
        "type": "function",
        "z": "b4a977197bd7a1f7",
        "name": "Check",
        "func": "if (msg.errorNumber == 1 && msg.successNumber == 0)\n    msg.test = \"All stop on error last message : success\"\nelse\n    msg.test = \"All stop on error last message : failure\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1300,
        "wires": [
            [
                "18d15b6b6736628f"
            ]
        ]
    },
    {
        "id": "644b0f88be66d531",
        "type": "navigate",
        "z": "b4a977197bd7a1f7",
        "name": "",
        "url": "",
        "navType": "refresh",
        "waitFor": 500,
        "x": 460,
        "y": 1200,
        "wires": [
            [
                "131116b0a325c568"
            ],
            [
                "131116b0a325c568"
            ]
        ]
    },
    {
        "id": "b573f5c310db9941",
        "type": "comment",
        "z": "b4a977197bd7a1f7",
        "name": "All (stop on error) Last Message",
        "info": "",
        "x": 390,
        "y": 1140,
        "wires": []
    },
    {
        "id": "454da28ef00e68b6",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "195a61f93a912086"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "90794d03f65a40d4",
        "type": "uibuilder",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "",
        "topic": "",
        "url": "uib-element-test",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0-beta",
        "showMsgUib": true,
        "x": 510,
        "y": 160,
        "wires": [
            [
                "26fbd32ea1d00ff2"
            ],
            [
                "a48c0beb68e76845"
            ]
        ],
        "info": "This example uses the default blank template.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript."
    },
    {
        "id": "26fbd32ea1d00ff2",
        "type": "debug",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 655,
        "y": 120,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "a48c0beb68e76845",
        "type": "debug",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "uibuilder control output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 655,
        "y": 180,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "c492d5d86eb0cfcb",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "195a61f93a912086"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "f0f4f6c5a20a1823",
        "type": "comment",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Chk Description in each node",
        "info": "",
        "x": 480,
        "y": 120,
        "wires": []
    },
    {
        "id": "51db7182c8c27901",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "e1901bb3da85dd78",
        "name": "Plain UL/OL List (Array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-list",
        "payload": "[\"LI One\",\"LI Two\",[\"LI Three a\",\"LI Three b\"],\"LI Four\"]",
        "payloadType": "json",
        "x": 220,
        "y": 380,
        "wires": [
            [
                "496418a44a66cc5e"
            ]
        ]
    },
    {
        "id": "0fe568807e7bd394",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "e1901bb3da85dd78",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "496418a44a66cc5e"
            ]
        ]
    },
    {
        "id": "e30d349d9b3399c8",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f3fbb9e84943e6b",
        "name": "Plain Table (Object)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-table-from-object",
        "payload": "{\"ROW1\":{\"COL1\":\"R1C1\",\"COL2\":\"R1C2\"},\"ROW2\":{\"COL1\":\"R2C1\",\"COL2\":\"R2C2\"}}",
        "payloadType": "json",
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "d52bbc4c5096d4ba"
            ]
        ]
    },
    {
        "id": "d58b7efe68a2da4d",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f3fbb9e84943e6b",
        "name": "Plain Table (Array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-table-from-array",
        "payload": "[{\"COL1\":\"R1C1\",\"COL2\":\"R1C2\"},{\"COL1\":\"R2C1\",\"COL2\":\"R2C2\"}]",
        "payloadType": "json",
        "x": 170,
        "y": 1240,
        "wires": [
            [
                "d52bbc4c5096d4ba"
            ]
        ]
    },
    {
        "id": "14ded4d1dc70efbf",
        "type": "change",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"ROW1\":{\"COL1\":\"R1C1\",\"COL2\":\"R1C2\"},\"ROW2\":{\"COL1\":\"R2C1\",\"COL2\":\"R2C2\"}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 2240,
        "wires": [
            [
                "d3a95abaddc5c013"
            ]
        ]
    },
    {
        "id": "d3cda6078ae9ca73",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "Plain List",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Chain 1 & 2",
        "payload": "[\"LI One\",\"LI Two\",\"LI Three\",\"LI Four\"]",
        "payloadType": "json",
        "x": 140,
        "y": 2240,
        "wires": [
            [
                "ec046fe7e55e944c"
            ]
        ]
    },
    {
        "id": "d52bbc4c5096d4ba",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "0f3fbb9e84943e6b",
        "name": "",
        "topic": "eltest-tbl",
        "elementtype": "table",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "eltest-tbl",
        "elementIdSourceType": "str",
        "heading": "My Table Heading (h4)",
        "headingSourceType": "str",
        "headingLevel": "h4",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 500,
        "y": 1260,
        "wires": [
            [
                "f38d46523be0c1fe"
            ]
        ]
    },
    {
        "id": "d3a95abaddc5c013",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "",
        "topic": "chain2",
        "elementtype": "table",
        "parent": "#chain1 li:nth-child(3)",
        "parentSource": "#chain1 > li:nth-child(3)",
        "parentSourceType": "str",
        "elementid": "chain2",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 760,
        "y": 2240,
        "wires": [
            [
                "f042b949d4143ac6"
            ]
        ]
    },
    {
        "id": "496418a44a66cc5e",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "e1901bb3da85dd78",
        "name": "",
        "topic": "eltest-ul-ol",
        "elementtype": "ul",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "eltest-ul-ol",
        "elementIdSourceType": "str",
        "heading": "My Heading",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 540,
        "y": 420,
        "wires": [
            [
                "560371c044ee9e19"
            ]
        ]
    },
    {
        "id": "ec046fe7e55e944c",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "",
        "topic": "chain1",
        "elementtype": "ul",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "chain1",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 330,
        "y": 2240,
        "wires": [
            [
                "14ded4d1dc70efbf"
            ]
        ]
    },
    {
        "id": "4ce558165663c95b",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f3fbb9e84943e6b",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "d52bbc4c5096d4ba"
            ]
        ]
    },
    {
        "id": "0f1d399c3f14e113",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "e1901bb3da85dd78",
        "name": "Plain UL/OL List (Object)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-list",
        "payload": "{\"L1\":\"LI One\",\"L2\":\"LI Two\",\"L3\":\"LI Three a\",\"L4\":[\"LI Four a\",\"LI Four b\"]}",
        "payloadType": "json",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "496418a44a66cc5e"
            ]
        ]
    },
    {
        "id": "af9ee48ee4da8b11",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f5c35ef5c4bf8f5",
        "name": "Plain DL List (Array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-dl-list",
        "payload": "[[\"Entry One\",\"Description One\"],[\"Entry Two\",\"Description Two a\",\"Description Two b\",\"Description Two c\"],[\"Entry Three\",\"Description Three\"],[\"Entry Four\",\"Description Four\"]]",
        "payloadType": "json",
        "x": 250,
        "y": 900,
        "wires": [
            [
                "03979555908332c4"
            ]
        ]
    },
    {
        "id": "168cfe507c55796a",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f5c35ef5c4bf8f5",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 280,
        "y": 1020,
        "wires": [
            [
                "03979555908332c4"
            ]
        ]
    },
    {
        "id": "03979555908332c4",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "0f5c35ef5c4bf8f5",
        "name": "",
        "topic": "eltest-dl",
        "elementtype": "dl",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "eltest-dl",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h3",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 570,
        "y": 960,
        "wires": [
            [
                "95a6c6f3e84b4fea"
            ]
        ]
    },
    {
        "id": "d08a2076e8158929",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f5c35ef5c4bf8f5",
        "name": "Plain DL List (List of Objects)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-dl-list",
        "payload": "[{\"Entry 1\":\"Description 1\"},{\"Entry 2a\":\"Description 2a\",\"Entry 2b\":\"Description 2b - this wont show. Use List not object for multiple Descriptions.\"},{\"Entry 3\":[\"Description 3 a\",\"Description 3 b\"]},{\"Entry 4\":\"Description 4\"}]",
        "payloadType": "json",
        "x": 220,
        "y": 940,
        "wires": [
            [
                "03979555908332c4"
            ]
        ]
    },
    {
        "id": "8fc4bf76f457ae68",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "0f5c35ef5c4bf8f5",
        "name": "Plain DL List (Object of Objects)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-dl-list",
        "payload": "{\"ONE\":{\"A\":\"LI One A\"},\"TWO\":{\"B\":[\"LI Two B1\",\"LI Two B2\"]},\"THREE\":{\"C\":{\"C1\":\"LI Three C1\",\"C2\":\"LI Three C2\"}}}",
        "payloadType": "json",
        "x": 210,
        "y": 980,
        "wires": [
            [
                "03979555908332c4"
            ]
        ]
    },
    {
        "id": "900f97b2b079f1bf",
        "type": "comment",
        "z": "3badb0a6906eef7f",
        "g": "0f3fbb9e84943e6b",
        "name": "Send the UL/OL list and change the Parent to `#eltest-ul-ol *[data-row-index=\"3\"]` \\n (without the quotes) to insert the table into the list entry #3",
        "info": "",
        "x": 580,
        "y": 1200,
        "wires": []
    },
    {
        "id": "cef57eb67e055c56",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 2280,
        "wires": [
            [
                "ec046fe7e55e944c"
            ]
        ]
    },
    {
        "id": "b18b8a4c83135013",
        "type": "comment",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "Limitation: we have to resend everything just to update one thing. \\n Instead, consider using this to create the HTML then copy the HTML using your browser's developer tools \\n then save the HTML into the index.html file. \\n You can still update using a uib-element node with the same ID or you can use a uib-update node as appropriate.",
        "info": "",
        "x": 620,
        "y": 2320,
        "wires": []
    },
    {
        "id": "c203417099e22d29",
        "type": "link in",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "link in 7",
        "links": [
            "560371c044ee9e19",
            "95a6c6f3e84b4fea",
            "f38d46523be0c1fe",
            "f042b949d4143ac6",
            "afc4e1285d293ea2",
            "20deb97725012b7e",
            "0f9326dcaa809c08",
            "d646582f8df58be8",
            "7ed058d7900e3daa",
            "a176947e40e66640",
            "cbcaeaa33ea034ac",
            "b8338b38fa0f261f",
            "0ff90fd3f27b33be",
            "474079d2dd072158",
            "62512a9068ae52c9",
            "534ccd905d0adc50",
            "88abbd5438821f7a"
        ],
        "x": 205,
        "y": 120,
        "wires": [
            [
                "90794d03f65a40d4"
            ]
        ]
    },
    {
        "id": "560371c044ee9e19",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "e1901bb3da85dd78",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 695,
        "y": 420,
        "wires": []
    },
    {
        "id": "95a6c6f3e84b4fea",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "0f5c35ef5c4bf8f5",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 715,
        "y": 960,
        "wires": []
    },
    {
        "id": "f38d46523be0c1fe",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "0f3fbb9e84943e6b",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 655,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f042b949d4143ac6",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "8049618125109f32",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 995,
        "y": 2240,
        "wires": []
    },
    {
        "id": "07f1643db81c0995",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "263bd5d828fb96be",
        "name": "",
        "topic": "eltest-html",
        "elementtype": "html",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "eltest-html",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 490,
        "y": 1800,
        "wires": [
            [
                "20deb97725012b7e"
            ]
        ]
    },
    {
        "id": "20deb97725012b7e",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "263bd5d828fb96be",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 635,
        "y": 1800,
        "wires": []
    },
    {
        "id": "da18127ca09d0758",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "263bd5d828fb96be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-html-from-html",
        "payload": "{\t    \"mystring\": \"Boo-hoo\",\t    \"mynumber\": $formatInteger($random() * 100, \"#00\")\t}\t    ",
        "payloadType": "jsonata",
        "x": 150,
        "y": 1780,
        "wires": [
            [
                "f02b2b567a27e3bf"
            ]
        ]
    },
    {
        "id": "9eed5fe003f16b5e",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "263bd5d828fb96be",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 1820,
        "wires": [
            [
                "07f1643db81c0995"
            ]
        ]
    },
    {
        "id": "f02b2b567a27e3bf",
        "type": "template",
        "z": "3badb0a6906eef7f",
        "g": "263bd5d828fb96be",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: \n<p>\n<i>{{payload.mystring}}</i>,\n</p><p>\n<b>{{payload.mynumber}}</b>.\n</p>",
        "output": "str",
        "x": 280,
        "y": 1780,
        "wires": [
            [
                "07f1643db81c0995"
            ]
        ]
    },
    {
        "id": "9b8878a8a530e1b9",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "161798c0ebe14c60",
        "name": "",
        "topic": "eltest-title",
        "elementtype": "title",
        "parent": "body",
        "parentSource": "body",
        "parentSourceType": "str",
        "elementid": "eltest-title",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 320,
        "y": 1960,
        "wires": [
            [
                "7ed058d7900e3daa"
            ]
        ]
    },
    {
        "id": "7ed058d7900e3daa",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "161798c0ebe14c60",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 475,
        "y": 1960,
        "wires": []
    },
    {
        "id": "58968670b8adf81b",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "65795642cec1af50",
        "name": "",
        "topic": "",
        "elementtype": "tr",
        "parent": "#eltest-tbl",
        "parentSource": "#eltest-tbl",
        "parentSourceType": "str",
        "elementid": "",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "1",
        "positionSourceType": "str",
        "confData": {},
        "x": 430,
        "y": 1420,
        "wires": [
            [
                "b8338b38fa0f261f"
            ]
        ]
    },
    {
        "id": "b8338b38fa0f261f",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "65795642cec1af50",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 575,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a05186890868f6cb",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "65795642cec1af50",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-update-title",
        "payload": "{\"COL1\":\"**\",\"COL2\":\"**\"}",
        "payloadType": "json",
        "x": 230,
        "y": 1420,
        "wires": [
            [
                "58968670b8adf81b"
            ]
        ]
    },
    {
        "id": "d94e668db5709de3",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "161798c0ebe14c60",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-update-title",
        "payload": "\"[\" & $formatInteger($random() * 100, \"#00\") & \"] Dynamic title\"",
        "payloadType": "jsonata",
        "x": 130,
        "y": 1960,
        "wires": [
            [
                "9b8878a8a530e1b9"
            ]
        ]
    },
    {
        "id": "e1795c2c54ee3880",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "42a2b3e7d6c165bf",
        "name": "",
        "topic": "eltest-textbox",
        "elementtype": "article",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "eltest-textbox",
        "elementIdSourceType": "str",
        "heading": "A <u>Manually</u> Inserted Heading",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 420,
        "y": 2080,
        "wires": [
            [
                "0ff90fd3f27b33be"
            ]
        ]
    },
    {
        "id": "0ff90fd3f27b33be",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "42a2b3e7d6c165bf",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 575,
        "y": 2080,
        "wires": []
    },
    {
        "id": "8b561177d69cb6d3",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "42a2b3e7d6c165bf",
        "name": "Inject text/HTML",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-article",
        "payload": "Some <b><u>HTML</u></b> inserted dynamically.",
        "payloadType": "str",
        "x": 160,
        "y": 2080,
        "wires": [
            [
                "e1795c2c54ee3880"
            ]
        ]
    },
    {
        "id": "f8db205586825dcd",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "",
        "topic": "",
        "elementtype": "li",
        "parent": "#eltest-ul-ol",
        "parentSource": "#eltest-ul-ol",
        "parentSourceType": "str",
        "elementid": "",
        "elementIdSourceType": "str",
        "heading": "IGNORED",
        "headingLevel": "h2",
        "position": "last",
        "confData": {},
        "x": 540,
        "y": 580,
        "wires": [
            [
                "474079d2dd072158"
            ]
        ]
    },
    {
        "id": "474079d2dd072158",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 775,
        "y": 580,
        "wires": []
    },
    {
        "id": "685760eb828baa61",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "add-to-list",
        "payload": "A am a new list entry 😁",
        "payloadType": "str",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "f8db205586825dcd"
            ]
        ]
    },
    {
        "id": "5df757879277f3a3",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "add-to-list-array",
        "payload": "[\"One new\", \"Two new\"]",
        "payloadType": "json",
        "x": 240,
        "y": 620,
        "wires": [
            [
                "f8db205586825dcd"
            ]
        ]
    },
    {
        "id": "c2dcca959c44112c",
        "type": "uib-update",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "",
        "topic": "",
        "mode": "update",
        "modeSourceType": "modeType",
        "cssSelector": "\"#eltest-ul-ol  li:nth-child(\" & payload & \")\"",
        "cssSelectorType": "jsonata",
        "slotSourceProp": "",
        "slotSourcePropType": "msg",
        "attribsSource": "{\"style\":\"list-style: \\\"✅\\\";\"}",
        "attribsSourceType": "json",
        "slotPropMarkdown": false,
        "x": 570,
        "y": 680,
        "wires": [
            [
                "474079d2dd072158"
            ]
        ]
    },
    {
        "id": "c87017ebcab8dc1a",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "Tick off #2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload3",
                "v": "\"#eltest-ul-ol  li:nth-child(2)\"",
                "vt": "jsonata"
            },
            {
                "p": "payload4",
                "v": "#eltest-ul-o",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "tick-off-two",
        "payload": "2",
        "payloadType": "str",
        "x": 200,
        "y": 680,
        "wires": [
            [
                "c2dcca959c44112c"
            ]
        ]
    },
    {
        "id": "e51ee02c0622e551",
        "type": "uib-update",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "",
        "topic": "",
        "mode": "delete",
        "modeSourceType": "modeType",
        "cssSelector": "\"#eltest-ul-ol  li:nth-child(\" & payload & \")\"",
        "cssSelectorType": "jsonata",
        "slotSourceProp": "",
        "slotSourcePropType": "msg",
        "attribsSource": "",
        "attribsSourceType": "json",
        "slotPropMarkdown": false,
        "x": 570,
        "y": 780,
        "wires": [
            [
                "474079d2dd072158"
            ]
        ]
    },
    {
        "id": "92af2057a4b6218f",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "08f358ec9af4dfc2",
        "name": "Delete #2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "delete-#two",
        "payload": "2",
        "payloadType": "str",
        "x": 200,
        "y": 780,
        "wires": [
            [
                "e51ee02c0622e551"
            ]
        ]
    },
    {
        "id": "8a39826860e82c51",
        "type": "uib-update",
        "z": "3badb0a6906eef7f",
        "name": "",
        "topic": "",
        "mode": "update",
        "modeSourceType": "modeType",
        "cssSelector": "#eltest-ul-ol  li",
        "cssSelectorType": "str",
        "slotSourceProp": "",
        "slotSourcePropType": "msg",
        "attribsSource": "{\"style\":\"list-style: \\\"🚑\\\";\"}",
        "attribsSourceType": "json",
        "slotPropMarkdown": false,
        "x": 520,
        "y": 740,
        "wires": [
            [
                "474079d2dd072158"
            ]
        ]
    },
    {
        "id": "88c5781097ea7ef5",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "name": "Update all li's",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "update-all-li",
        "x": 210,
        "y": 740,
        "wires": [
            [
                "8a39826860e82c51"
            ]
        ]
    },
    {
        "id": "ede83b9af785c506",
        "type": "uib-element",
        "z": "3badb0a6906eef7f",
        "g": "f6154314aee80d24",
        "name": "",
        "topic": "",
        "elementtype": "sform",
        "parent": "body",
        "parentSource": "",
        "parentSourceType": "str",
        "elementid": "sform1",
        "elementId": "",
        "elementIdSourceType": "str",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 450,
        "y": 1560,
        "wires": [
            [
                "534ccd905d0adc50"
            ]
        ]
    },
    {
        "id": "3923739d82142906",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "f6154314aee80d24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sform1",
        "payload": "[{\"id\":\"r1\",\"type\":\"text\",\"required\":false,\"label\":\"Text Input:\",\"value\":\"Foo\"},{\"id\":\"r2\",\"type\":\"color\",\"required\":false,\"label\":\"Colour:\",\"value\":\"#427798\"},{\"id\":\"r3\",\"type\":\"date\",\"required\":true,\"label\":\"Date:\"},{\"id\":\"r4\",\"type\":\"range\",\"required\":false,\"label\":\"Range (0-100):\",\"value\":\"20\",\"min\":0,\"max\":100},{\"id\":\"r5\",\"type\":\"button\",\"label\":\"Send to Node-RED\",\"value\":\"Buttons can have values as well\"}]",
        "payloadType": "json",
        "x": 210,
        "y": 1560,
        "wires": [
            [
                "ede83b9af785c506"
            ]
        ]
    },
    {
        "id": "534ccd905d0adc50",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "f6154314aee80d24",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 645,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d0ab82e45161ca1e",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "195a61f93a912086"
            ]
        ]
    },
    {
        "id": "262ab2295096703e",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Toggle Visible Status",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showStatus\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 280,
        "wires": [
            [
                "195a61f93a912086"
            ]
        ]
    },
    {
        "id": "88abbd5438821f7a",
        "type": "link out",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "c203417099e22d29"
        ],
        "x": 655,
        "y": 260,
        "wires": []
    },
    {
        "id": "6221e2b8f2b50df8",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Log Lvl 5",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"set\",\"prop\":\"logLevel\",\"value\":5}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "88abbd5438821f7a"
            ]
        ]
    },
    {
        "id": "0dd33ba823c0af7b",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "3cd8b7c5aae9d40b",
        "name": "Log Lvl 0",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"set\",\"prop\":\"logLevel\",\"value\":0}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 440,
        "y": 280,
        "wires": [
            [
                "88abbd5438821f7a"
            ]
        ]
    },
    {
        "id": "85fd31019802a001",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "f6154314aee80d24",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 1600,
        "wires": [
            [
                "ede83b9af785c506"
            ]
        ]
    },
    {
        "id": "f6094a474faf5649",
        "type": "uib-update",
        "z": "3badb0a6906eef7f",
        "g": "f6154314aee80d24",
        "name": "",
        "topic": "",
        "mode": "update",
        "modeSourceType": "update",
        "cssSelector": "topic",
        "cssSelectorType": "msg",
        "slotSourceProp": "",
        "slotSourcePropType": "str",
        "attribsSource": "{ \"value\": payload }",
        "attribsSourceType": "jsonata",
        "slotPropMarkdown": false,
        "x": 410,
        "y": 1640,
        "wires": [
            [
                "534ccd905d0adc50"
            ]
        ]
    },
    {
        "id": "495d6cfe53a5351a",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "f6154314aee80d24",
        "name": "Change row 1 value",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "#r1",
        "payload": "Bah",
        "payloadType": "str",
        "x": 170,
        "y": 1640,
        "wires": [
            [
                "f6094a474faf5649"
            ]
        ]
    },
    {
        "id": "31f1c33627de3ec3",
        "type": "comment",
        "z": "3badb0a6906eef7f",
        "name": "Zero-Code Examples. Flows for all uib-element types",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "6e5aada95fc82d83",
        "type": "inject",
        "z": "3badb0a6906eef7f",
        "g": "42a2b3e7d6c165bf",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 2120,
        "wires": [
            [
                "e1795c2c54ee3880"
            ]
        ]
    },
    {
        "id": "2646630c56235673",
        "type": "uib-sender",
        "z": "08281f5a146fee7f",
        "g": "43efdb3cb9d5a750",
        "url": "uib-sender-example",
        "name": "",
        "topic": "",
        "passthrough": false,
        "return": true,
        "outputs": 1,
        "x": 420,
        "y": 480,
        "wires": [
            [
                "50c73c4d00f6ba6c"
            ]
        ]
    },
    {
        "id": "c6d5ea48b39d1428",
        "type": "uibuilder",
        "z": "08281f5a146fee7f",
        "g": "2b82c232b05410a5",
        "name": "",
        "topic": "",
        "url": "uib-sender-example",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0-beta",
        "showMsgUib": true,
        "x": 420,
        "y": 340,
        "wires": [
            [
                "ef16c5036419f2d1"
            ],
            [
                "6a22f49cbb9a5929"
            ]
        ]
    },
    {
        "id": "be455b4d4caff567",
        "type": "inject",
        "z": "08281f5a146fee7f",
        "g": "2b82c232b05410a5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "msg-direct",
        "payload": "msg direct",
        "payloadType": "str",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "c6d5ea48b39d1428"
            ]
        ]
    },
    {
        "id": "ef16c5036419f2d1",
        "type": "debug",
        "z": "08281f5a146fee7f",
        "g": "2b82c232b05410a5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 575,
        "y": 320,
        "wires": [],
        "l": false
    },
    {
        "id": "1251bc74cd96765c",
        "type": "inject",
        "z": "08281f5a146fee7f",
        "g": "43efdb3cb9d5a750",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "msg-from-uib-sender",
        "payload": "Msg from uib-sender",
        "payloadType": "str",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "2646630c56235673"
            ]
        ]
    },
    {
        "id": "50c73c4d00f6ba6c",
        "type": "debug",
        "z": "08281f5a146fee7f",
        "g": "43efdb3cb9d5a750",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 575,
        "y": 480,
        "wires": [],
        "l": false
    },
    {
        "id": "6a22f49cbb9a5929",
        "type": "debug",
        "z": "08281f5a146fee7f",
        "g": "2b82c232b05410a5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 575,
        "y": 360,
        "wires": [],
        "l": false
    },
    {
        "id": "6ebce417868118d4",
        "type": "comment",
        "z": "08281f5a146fee7f",
        "name": "index.html",
        "info": "<!doctype html>\n<html lang=\"en\"><head>\n\n    \n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"icon\" href=\"../uibuilder/images/node-blue.ico\">\n\n    <title>uib-sender node example - Node-RED uibuilder</title>\n    <meta name=\"description\" content=\"Node-RED uibuilder - uib-sender node example\">\n    \n    <!-- Your own CSS (defaults to loading uibuilders css)-->\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"./index.css\" media=\"all\">\n\n    <!-- #region Supporting Scripts. These MUST be in the right order. Note no leading / -->\n    <script defer src=\"../uibuilder/uibuilder.iife.min.js\"></script>\n    <script defer src=\"./index.js\">/* custom code */</script>\n    <!-- #endregion -->\n\n</head><body class=\"uib\">\n    \n    <h1 class=\"with-subtitle\">uibuilder Sender-node example</h1>\n    <div role=\"doc-subtitle\">Using the IIFE library.</div>\n\n    <button onclick=\"fnSendToMain()\">Send a message to the main node</button>\n    <button onclick=\"fnSendToSender()\">Return a message back to the uib-sender node (send the msg via that node first)</button>\n\n    <p>\n        The first button sends a message back to the main uibuilder node. Attach a debug node to port #1 of that node to see it.\n    </p>\n    <p>\n        The second button only works if you have first sent a message via a uib-sender node. When you do, pressing the button\n        will return a msg back to the sender node and not to the main node.\n    </p>\n\n    <pre id=\"msg\" class=\"syntax-highlight\">Waiting for a message from Node-RED</pre>\n\n    <p>\n        Note that there are only around 5 required lines of HMTL and around 30 lines of JavaScript required to make this\n        example work. Thanks to the uibuilderfe library along with uibuilder which do all the hard work.\n        Only 1 line of CSS gives you a decent looking output.\n        😁\n    </p>\n\n</body></html>",
        "x": 100,
        "y": 220,
        "wires": []
    },
    {
        "id": "f484ff03b341de2c",
        "type": "comment",
        "z": "08281f5a146fee7f",
        "name": "index.js",
        "info": "'use strict'\n\n// Show the incoming messages\nuibuilder.showMsg()\n\nfunction fnSendToMain() {\n    uibuilder.send({\n        topic: 'msg-from-fe-to-main-node',\n        payload: 'msg from FE to main node',\n    })\n}\n\nfunction fnSendToSender() {\n    let lastMsg = uibuilder.get('msg')\n\n    if ( lastMsg._uib && lastMsg._uib.originator ) {\n        let orig = lastMsg._uib.originator\n        uibuilder.send(\n            {\n                topic: 'msg-from-fe-to-main-node',\n                payload: 'msg from FE to main node',\n            },\n            orig\n        )\n    } else {\n        uibuilder.showToast('Send me a msg from a uib-sender node then you can reply with the button.')\n    }\n}\n\n\n// Listen for incoming messages from Node-RED\n// uibuilder.onChange('msg', function(msg){\n//     console.info('[indexjs:uibuilder.onChange] msg received from Node-RED server:', msg)\n// })\n",
        "x": 270,
        "y": 220,
        "wires": []
    },
    {
        "id": "a15e0ef0848b0a74",
        "type": "comment",
        "z": "08281f5a146fee7f",
        "name": "index.css",
        "info": "/* Load the defaults from `<userDir>/node_modules/node-red-contrib-uibuilder/front-end/src/uib-styles.css` */\n@import url(\"./uib-styles.css\");\n",
        "x": 440,
        "y": 220,
        "wires": []
    },
    {
        "id": "13f96c4ce8b686ed",
        "type": "comment",
        "z": "08281f5a146fee7f",
        "name": "Make sure that you take the content of the 3 comments below and \\n put them into the appropriate files using the uibuilder file editor",
        "info": "",
        "x": 270,
        "y": 160,
        "wires": []
    },
    {
        "id": "4e6f404e6dd580b4",
        "type": "comment",
        "z": "08281f5a146fee7f",
        "name": "As soon as you import this example, press Deploy before doing anything else. \\n This will create the required folders.",
        "info": "",
        "x": 310,
        "y": 60,
        "wires": []
    },
    {
        "id": "97a6a2230c6ef108",
        "type": "comment",
        "z": "08281f5a146fee7f",
        "name": "If you change the uibuilder URL for this example, \\n make sure you Deploy and then change the selection in the uib-sender node to match.",
        "info": "",
        "x": 340,
        "y": 600,
        "wires": []
    },
    {
        "id": "4a1f0bc164fe96de",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Empty Topic",
        "payloadType": "str",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "c4e341169cc82e9a"
            ]
        ]
    },
    {
        "id": "d948fc054b6c30ce",
        "type": "debug",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "fd7084be579b5186",
        "type": "debug",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "c4e341169cc82e9a",
        "type": "uib-cache",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "cacheall": false,
        "cacheKey": "topic",
        "newcache": true,
        "num": "4",
        "storeName": "default",
        "name": "",
        "storeContext": "context",
        "varName": "uib_cache",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "fd7084be579b5186",
                "5a8f49f1dff31d2f"
            ]
        ]
    },
    {
        "id": "5e8d1fafc5a22dd0",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "two",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "two",
        "payload": "{\"a\":\"Number Two\",\"b\":{\"b1\":1,\"b2\":{\"b2i\":1,\"b2ii\":2}}}",
        "payloadType": "json",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "c4e341169cc82e9a"
            ]
        ]
    },
    {
        "id": "1e87041b4bddbcba",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "one",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "one",
        "payload": "Number One",
        "payloadType": "str",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "c4e341169cc82e9a"
            ]
        ]
    },
    {
        "id": "5a8f49f1dff31d2f",
        "type": "change",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Number",
                "fromt": "str",
                "to": "Some mumber",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 220,
        "wires": [
            [
                "d948fc054b6c30ce"
            ]
        ]
    },
    {
        "id": "8ea537cb67792d7f",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 115,
        "y": 280,
        "wires": [
            [
                "122489d70f19ca24"
            ]
        ],
        "l": false
    },
    {
        "id": "122489d70f19ca24",
        "type": "function",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "REPLAY",
        "func": "\nreturn { \n    \"uibuilderCtrl\": \"replay\", \n    \"cacheControl\": \"REPLAY\", \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 280,
        "wires": [
            [
                "c4e341169cc82e9a"
            ]
        ]
    },
    {
        "id": "0768c71d136a2c86",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 115,
        "y": 320,
        "wires": [
            [
                "d3685f462ab15042"
            ]
        ],
        "l": false
    },
    {
        "id": "d3685f462ab15042",
        "type": "function",
        "z": "f748d0e6cc78a2ba",
        "g": "c582e19b78889a25",
        "name": "CLEAR",
        "func": "\nreturn { \n    \"uibuilderCtrl\": \"clear cache\", \n    \"cacheControl\": \"CLEAR\", \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 320,
        "wires": [
            [
                "c4e341169cc82e9a"
            ]
        ]
    },
    {
        "id": "30809c9afab08529",
        "type": "comment",
        "z": "f748d0e6cc78a2ba",
        "name": "Examples of using the uib-cache node with and without uibuilder itself.",
        "info": "",
        "x": 310,
        "y": 40,
        "wires": []
    },
    {
        "id": "9c253e4c5651a568",
        "type": "uibuilder",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "topic": "",
        "url": "uib-cache-example",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": true,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "5.0.0-dev.2",
        "showMsgUib": false,
        "x": 680,
        "y": 480,
        "wires": [
            [
                "49d6a6f1bd5358ee"
            ],
            [
                "445a19cff9f8da1f",
                "c6306e9378b9c1f2"
            ]
        ]
    },
    {
        "id": "acccaec15b621319",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "Empty Topic (not cached)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Empty Topic",
        "payloadType": "str",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "c13e434afccaa153"
            ]
        ]
    },
    {
        "id": "594248fc5dc5f799",
        "type": "debug",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1065,
        "y": 460,
        "wires": [],
        "l": false
    },
    {
        "id": "445a19cff9f8da1f",
        "type": "debug",
        "z": "f748d0e6cc78a2ba",
        "d": true,
        "g": "124607d308a0f6a6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 885,
        "y": 520,
        "wires": [],
        "l": false
    },
    {
        "id": "f9af5b7d2545e9e5",
        "type": "debug",
        "z": "f748d0e6cc78a2ba",
        "d": true,
        "g": "124607d308a0f6a6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 595,
        "y": 440,
        "wires": [],
        "l": false
    },
    {
        "id": "06327985e9dae780",
        "type": "link in",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "links": [
            "c6306e9378b9c1f2",
            "5e202f9e5b6827e6"
        ],
        "x": 255,
        "y": 480,
        "wires": [
            [
                "ed061d1aaea36b27"
            ]
        ]
    },
    {
        "id": "c6306e9378b9c1f2",
        "type": "link out",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "mode": "link",
        "links": [
            "06327985e9dae780"
        ],
        "x": 845,
        "y": 540,
        "wires": []
    },
    {
        "id": "ed061d1aaea36b27",
        "type": "uib-cache",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "cacheall": false,
        "cacheKey": "topic",
        "newcache": true,
        "num": "4",
        "storeName": "default",
        "name": "",
        "storeContext": "context",
        "varName": "uib_cache",
        "x": 440,
        "y": 480,
        "wires": [
            [
                "9c253e4c5651a568",
                "f9af5b7d2545e9e5"
            ]
        ]
    },
    {
        "id": "2fac9874556f1c88",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "two",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "two",
        "payload": "{\"a\":\"Number Two\",\"b\":[\"To B\",\" Or not to B\"]}",
        "payloadType": "json",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "c13e434afccaa153"
            ]
        ]
    },
    {
        "id": "4330971395e0a4b9",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "one",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "one",
        "payload": "Number One",
        "payloadType": "str",
        "x": 150,
        "y": 640,
        "wires": [
            [
                "c13e434afccaa153"
            ]
        ]
    },
    {
        "id": "49d6a6f1bd5358ee",
        "type": "change",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Number",
                "fromt": "str",
                "to": "Some mumber",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 460,
        "wires": [
            [
                "594248fc5dc5f799"
            ]
        ],
        "info": "If you change the uibuilder settings to fwd \r\ninput messages, this function changes an\r\nentry to make certain that the cached variables\r\nare NOT REFERENCES but completely separate\r\nclones. In other words, it makes sure that there\r\nare no unintended consequences of using the\r\ncache."
    },
    {
        "id": "ac3988907ad3ccaa",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 605,
        "y": 540,
        "wires": [
            [
                "95d8b757da5c9fd4"
            ]
        ],
        "l": false
    },
    {
        "id": "95d8b757da5c9fd4",
        "type": "function",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "REPLAY",
        "func": "\nreturn { \n    \"uibuilderCtrl\": \"Gimme something\", \n    \"cacheControl\": \"REPLAY\", \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 540,
        "wires": [
            [
                "fc7585830654783a"
            ]
        ]
    },
    {
        "id": "417119b1765dd5b1",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 605,
        "y": 580,
        "wires": [
            [
                "309727329638650e"
            ]
        ],
        "l": false
    },
    {
        "id": "309727329638650e",
        "type": "function",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "CLEAR",
        "func": "\nreturn { \n    \"uibuilderCtrl\": \"Clear me out!\", \n    \"cacheControl\": \"CLEAR\", \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 580,
        "wires": [
            [
                "fc7585830654783a"
            ]
        ]
    },
    {
        "id": "0555cd3fcd3edcfb",
        "type": "uib-element",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "topic": "",
        "elementtype": "ul",
        "parent": "#more",
        "parentSource": "",
        "parentSourceType": "str",
        "elementid": "topic",
        "elementId": "",
        "elementIdSourceType": "msg",
        "heading": "",
        "headingSourceType": "str",
        "headingLevel": "h2",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 420,
        "y": 640,
        "wires": [
            [
                "5e202f9e5b6827e6"
            ]
        ]
    },
    {
        "id": "5e202f9e5b6827e6",
        "type": "link out",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "",
        "mode": "link",
        "links": [
            "06327985e9dae780"
        ],
        "x": 535,
        "y": 640,
        "wires": []
    },
    {
        "id": "c3bdf6f53c48a1e0",
        "type": "inject",
        "z": "f748d0e6cc78a2ba",
        "g": "124607d308a0f6a6",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"body\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "toggle-visible-messages",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "ed061d1aaea36b27"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "d0b6170b92cd6064",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "",
        "topic": "",
        "url": "iife",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "iife-blank-client",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 400,
        "y": 580,
        "wires": [
            [
                "f95e69f67072596b"
            ],
            [
                "5d1231ce8247b08a"
            ]
        ],
        "info": "This example uses a minimal template with\r\nthe IIFE build of the front-end client.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript.\r\n\r\nThe IIFE build should be included using a link\r\ntag in your HTML."
    },
    {
        "id": "d12df878ac1b5714",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "",
        "topic": "",
        "url": "esm",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "esm-blank-client",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 410,
        "y": 880,
        "wires": [
            [
                "863c33dc4dab0216"
            ],
            [
                "6e760e4d72cb74a7"
            ]
        ],
        "info": "This example uses a blank template with\r\nthe ESM build of the front-end client.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript.\r\n\r\nThe ESM build should be included using an\r\n`import` statement in your `index.js` file.\r\n\r\nESM = ECMA Script Module."
    },
    {
        "id": "01f14b086d7f8a11",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "This is <b>HTML</b> from Node-RED",
        "payloadType": "str",
        "x": 85,
        "y": 220,
        "wires": [
            [
                "9eb1553c08864316"
            ]
        ],
        "l": false
    },
    {
        "id": "877b43edd7251acc",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "",
        "topic": "",
        "url": "blank",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "blank",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "17fde0242e191689"
            ],
            [
                "7eee677cb9a62723"
            ]
        ],
        "info": "This example uses the default blank template.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript."
    },
    {
        "id": "17fde0242e191689",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 655,
        "y": 160,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "7eee677cb9a62723",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 655,
        "y": 220,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "d0621a8f51f507bb",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "3c2b5cb8448dbb64"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "f012975f0375b6c8",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 85,
        "y": 140,
        "wires": [
            [
                "cb80cc034da2d8f1"
            ]
        ],
        "l": false
    },
    {
        "id": "cb80cc034da2d8f1",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 140,
        "wires": [
            [
                "0368db6d7d446339"
            ]
        ],
        "info": "Overlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "ddb950ebb37ff3e5",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "",
        "topic": "",
        "url": "blank-old",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "old-blank-client",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 430,
        "y": 2320,
        "wires": [
            [
                "6238dd35c69f44f6"
            ],
            [
                "c458491d5a2fb1e2"
            ]
        ]
    },
    {
        "id": "909a45a07adf4caf",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "",
        "topic": "",
        "url": "IIFE-vue3-nobuild",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "iife-vue3-nobuild",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 530,
        "y": 1960,
        "wires": [
            [
                "caf50be69279b624"
            ],
            [
                "92f0587559df7590"
            ]
        ],
        "info": "This example uses a Vue v3 simple template with\r\nthe IIFE build of the front-end client.\r\n\r\nNo build step is needed to make this work,\r\nthe Vue library is included from a CDN on the\r\nInternet.\r\n\r\n\r\n## LIMITATIONS\r\n\r\nVue and similar front-end frameworks require UI\r\ncomponents and structure to be pre-defined \r\n_before_ the DOM is created. So you cannot \r\ndynamically insert further Vue elements easily.\r\n\r\nYou can still dynamically insert HTML elements.\r\nBut they will not be responsive Vue elements."
    },
    {
        "id": "736993a690bbc167",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 85,
        "y": 180,
        "wires": [
            [
                "0df7b796d44d2e71"
            ]
        ],
        "l": false
    },
    {
        "id": "0df7b796d44d2e71",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "New Card",
        "func": "/**\n * Adds a dynamically created \"card\" to the web page\n * using uibuilder's low-code capabilities.\n * Try sending multiple times to see the counter increment.\n */\n\nlet cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": [
            [
                "0368db6d7d446339"
            ]
        ],
        "info": "Inserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "d121c8e3e56c4747",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Chk Description in each node",
        "info": "This is the \"Blank\" template. \nIt really is blank other than an H1\nheading and the usual style & script.\n\nIt is ready to be used for anything including\nuibuilder's zero-code and low-code\ncapabilities.",
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "6c14431f469b8846",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "msg-from-nr",
        "payload": "A Message From Node-RED",
        "payloadType": "str",
        "x": 150,
        "y": 1980,
        "wires": [
            [
                "dd004a6a442ee6a8"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "e47195b8eda5d40e",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 130,
        "y": 2020,
        "wires": [
            [
                "3e569dd871349f93"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "0c9f24ab06ee0405",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 95,
        "y": 1900,
        "wires": [
            [
                "89ae80c659089985"
            ]
        ],
        "l": false
    },
    {
        "id": "89ae80c659089985",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "Notification (not Vue)",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1900,
        "wires": [
            [
                "d48166077d1f76af"
            ]
        ],
        "info": "**NOTE:** This uses uibuilder's vanilla HTML overlay notification\r\n(as in the non-Vue examples). **It is NOT Vue responsive**.\r\n\r\n---\r\n\r\nOverlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "9a4f424c76119444",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "05cb4b03058fc6f8"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "2cb6722e802cf5f1",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 120,
        "y": 640,
        "wires": [
            [
                "05cb4b03058fc6f8"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "5003addd448138c2",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 85,
        "y": 520,
        "wires": [
            [
                "ba221f812ae3d84c"
            ]
        ],
        "l": false
    },
    {
        "id": "ba221f812ae3d84c",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 520,
        "wires": [
            [
                "05cb4b03058fc6f8"
            ]
        ],
        "info": "Overlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "4020b64008bfdad5",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 85,
        "y": 560,
        "wires": [
            [
                "be06a0df26c00462"
            ]
        ],
        "l": false
    },
    {
        "id": "be06a0df26c00462",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "New Card",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 560,
        "wires": [
            [
                "05cb4b03058fc6f8"
            ]
        ],
        "info": "Inserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "ca085978f7a1d622",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2340,
        "wires": [
            [
                "e03509eff4a1c892"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "7b2410170a094534",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 95,
        "y": 2300,
        "wires": [
            [
                "cfd5eba13fe03d51"
            ]
        ],
        "l": false
    },
    {
        "id": "cfd5eba13fe03d51",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "e03509eff4a1c892"
            ]
        ],
        "info": "Overlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "b921d7d1a7e06035",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 900,
        "wires": [
            [
                "ca0007816b9f4419"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "8ca1a701441a31fa",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "ca0007816b9f4419"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "598ecb0adfa8fc5a",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 95,
        "y": 820,
        "wires": [
            [
                "599391803941e233"
            ]
        ],
        "l": false
    },
    {
        "id": "599391803941e233",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 820,
        "wires": [
            [
                "ca0007816b9f4419"
            ]
        ],
        "info": "Overlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "958c94c7f03a6624",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 95,
        "y": 860,
        "wires": [
            [
                "5a3c5e4b8751fea2"
            ]
        ],
        "l": false
    },
    {
        "id": "5a3c5e4b8751fea2",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "New Card",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 860,
        "wires": [
            [
                "ca0007816b9f4419"
            ]
        ],
        "info": "Inserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "f95e69f67072596b",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 615,
        "y": 540,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "5d1231ce8247b08a",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 615,
        "y": 600,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "caf50be69279b624",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 695,
        "y": 1920,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "92f0587559df7590",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 695,
        "y": 1980,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "6238dd35c69f44f6",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 615,
        "y": 2300,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "c458491d5a2fb1e2",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 615,
        "y": 2360,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "863c33dc4dab0216",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 615,
        "y": 860,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "6e760e4d72cb74a7",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 616,
        "y": 920,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "1b7e4c189916dbec",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "Chk Description in each node",
        "info": "",
        "x": 450,
        "y": 520,
        "wires": []
    },
    {
        "id": "398b84708d487dad",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "cb13651b4e3aee58",
        "name": "Chk Description in each node",
        "info": "",
        "x": 460,
        "y": 2280,
        "wires": []
    },
    {
        "id": "0ce0de04fb70fda9",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "Chk Description in each node",
        "info": "",
        "x": 460,
        "y": 820,
        "wires": []
    },
    {
        "id": "284121dd33dcd50b",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1700,
        "wires": [
            [
                "1b6a3d16ed9f9995"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "4b0be73d7c1879b9",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "",
        "topic": "",
        "url": "vuev2-bootstrap",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "vue2-bootstrap",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 530,
        "y": 1680,
        "wires": [
            [
                "6f8e51db50f117dd"
            ],
            [
                "d7ce360f9e714a57"
            ]
        ],
        "info": "This example uses the VueJS v2 and \r\nbootstrap-vue template.\r\n\r\nYou must have both `Vue@2` and `bootstrap-vue`\r\nlibraries installed to use this template.\r\n\r\nThis used to be the default in some older\r\nversions of uibuilder before the native\r\nHTML versions started to mature.\r\n\r\nIt still provides a simple starting point\r\nfor anyone with minimal front-end design\r\nskills in HTML, CSS, and JavaScript. That is \r\nbecause, bootstrap-vue is a comprehensive \r\nframework complete with pre-configured look and\r\nfeel (using Bootstrap) along with plenty of \r\nhelper components that reduce the amount of \r\nHTML you have to write.\r\n\r\nThe template provides a page that looks\r\nOK with no further configuration. Simply add\r\nyour own UI code within the \r\n`<b-container id=\"app_container\">` section.\r\n\r\nThe rest of the HTML in the template shows\r\nsome basic bootstrap-vue component examples\r\nsuch as forms and buttons along with cards.\r\n\r\n* https://bootstrap-vue.org/\r\n* https://vuejs.org/\r\n* https://getbootstrap.com/\r\n\r\n## LIMITATIONS\r\n\r\nVue and similar front-end frameworks require UI\r\ncomponents and structure to be pre-defined \r\n_before_ the DOM is created. So you cannot \r\ndynamically insert further Vue elements easily.\r\n\r\nYou can still dynamically insert HTML elements.\r\nBut they will not be responsive Vue elements."
    },
    {
        "id": "6f8e51db50f117dd",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 705,
        "y": 1640,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "d7ce360f9e714a57",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 705,
        "y": 1700,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "d32229867aa7e3c6",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "c1d0beb7a8dcf573"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "688f3cc99964f88d",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 95,
        "y": 1620,
        "wires": [
            [
                "802bd5f9321628ad"
            ]
        ],
        "l": false
    },
    {
        "id": "802bd5f9321628ad",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Check out the bootstrap-vue docs for details - Note that most if not all of these are optional\n    // https://bootstrap-vue.org/docs/components/toast\n    \"options\": {\n      \"title\": \"This is the <i>title</i>\",\n\n      // This is not part of the bootstrap-vue toast options - is used as the toast content.\n      // Note the inclusion of the payload from the upstram msg\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1620,
        "wires": [
            [
                "81bf7609272ef9af"
            ]
        ],
        "info": "**NOTE:** This uses a bootstrap-vue _toast_ notification rather\r\nthan uibuilder's vanilla HTML overlay notification (as in the\r\nnon-Vue examples). If bootstrap-vue is not loaded, it will not\r\nshow anything.\r\n\r\n---\r\n\r\nOverlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message.\r\n\r\nNote the use of a workaround in the index.js file that lets\r\nthis work with VueJS and bootstrap-vue."
    },
    {
        "id": "955997a9e7fb3c28",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "Chk Description in each node",
        "info": "",
        "x": 520,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a0976141d22bd12f",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 95,
        "y": 1660,
        "wires": [
            [
                "9a7af1b5ee3353ba"
            ]
        ],
        "l": false
    },
    {
        "id": "9a7af1b5ee3353ba",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "HTML insert (not Vue)",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1660,
        "wires": [
            [
                "7ee9528a1b19eb12"
            ]
        ],
        "info": "**NOTE: ** This does NOT insert a bootstrap-vue card, only\r\nan HTML block element. So the result is NOT responsive to Vue.\r\nVue and similar front-end frameworks require UI components and\r\nstructure to be pre-defined _before_ the DOM is created. So you\r\ncannot dynamically insert further Vue elements.\r\n\r\n---\r\n\r\nInserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "c3bd76ce441dc3e3",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 95,
        "y": 1940,
        "wires": [
            [
                "3439dbee433a88a8"
            ]
        ],
        "l": false
    },
    {
        "id": "3439dbee433a88a8",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "HTML insert (not Vue)",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1940,
        "wires": [
            [
                "d48166077d1f76af"
            ]
        ],
        "info": "**NOTE: ** This does NOT insert a bootstrap-vue card, only\r\nan HTML block element. So the result is NOT responsive to Vue.\r\nVue and similar front-end frameworks require UI components and\r\nstructure to be pre-defined _before_ the DOM is created. So you\r\ncannot dynamically insert further Vue elements.\r\n\r\n---\r\n\r\nInserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "ce9a12ba5070f920",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "Chk Description in each node",
        "info": "",
        "x": 510,
        "y": 1900,
        "wires": []
    },
    {
        "id": "251344c859a9f066",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "payload": "",
        "payloadType": "date",
        "x": 890,
        "y": 1700,
        "wires": [
            [
                "949ddd795829e86e"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "9df22ce79ef39e07",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "",
        "topic": "",
        "url": "vuev2-simple",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "vue2-simple",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 1290,
        "y": 1680,
        "wires": [
            [
                "5028e29f49a5591f"
            ],
            [
                "2a3a787b6520cef9"
            ]
        ],
        "info": "This example uses the VueJS v2 and \r\nbootstrap-vue template.\r\n\r\nYou must have both `Vue@2` and `bootstrap-vue`\r\nlibraries installed to use this template.\r\n\r\nThis is the simplest template for Vue v2 and\r\nbootstrap-vue.\r\n\r\nIt still provides a simple starting point\r\nfor anyone with minimal front-end design\r\nskills in HTML, CSS, and JavaScript. That is \r\nbecause, bootstrap-vue is a comprehensive \r\nframework complete with pre-configured look and\r\nfeel (using Bootstrap) along with plenty of \r\nhelper components that reduce the amount of \r\nHTML you have to write.\r\n\r\nThe template provides a page that looks\r\nOK with no further configuration. Simply add\r\nyour own UI code within the \r\n`<b-container id=\"app_container\">` section.\r\n\r\nThe rest of the HTML in the template shows\r\nsome basic bootstrap-vue component examples\r\nsuch as forms and buttons along with cards.\r\n\r\n* https://bootstrap-vue.org/\r\n* https://vuejs.org/\r\n* https://getbootstrap.com/\r\n\r\n## LIMITATIONS\r\n\r\nVue and similar front-end frameworks require UI\r\ncomponents and structure to be pre-defined \r\n_before_ the DOM is created. So you cannot \r\ndynamically insert further Vue elements easily.\r\n\r\nYou can still dynamically insert HTML elements.\r\nBut they will not be responsive Vue elements."
    },
    {
        "id": "5028e29f49a5591f",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 1445,
        "y": 1640,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "2a3a787b6520cef9",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 1445,
        "y": 1700,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "5e40aeef2599e4e1",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 870,
        "y": 1740,
        "wires": [
            [
                "35591e8d08b9a8dc"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "d8c57c9cbfba6417",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 835,
        "y": 1620,
        "wires": [
            [
                "5f2a84a134a770d7"
            ]
        ],
        "l": false
    },
    {
        "id": "5f2a84a134a770d7",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Check out the bootstrap-vue docs for details - Note that most if not all of these are optional\n    // https://bootstrap-vue.org/docs/components/toast\n    \"options\": {\n      \"title\": \"This is the <i>title</i>\",\n\n      // This is not part of the bootstrap-vue toast options - is used as the toast content.\n      // Note the inclusion of the payload from the upstram msg\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1620,
        "wires": [
            [
                "168b498f7d93b9ca"
            ]
        ],
        "info": "**NOTE:** This uses a bootstrap-vue _toast_ notification rather\r\nthan uibuilder's vanilla HTML overlay notification (as in the\r\nnon-Vue examples). If bootstrap-vue is not loaded, it will not\r\nshow anything.\r\n\r\n---\r\n\r\nOverlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message.\r\n\r\nNote the use of a workaround in the index.js file that lets\r\nthis work with VueJS and bootstrap-vue."
    },
    {
        "id": "c90fa14f3bcd1b5a",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "Chk Description in each node",
        "info": "",
        "x": 1260,
        "y": 1620,
        "wires": []
    },
    {
        "id": "04b7fe83187b26ed",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 835,
        "y": 1660,
        "wires": [
            [
                "c8177e230bf224db"
            ]
        ],
        "l": false
    },
    {
        "id": "c8177e230bf224db",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "HTML insert (not Vue)",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1660,
        "wires": [
            [
                "079a6828b01e3ca4"
            ]
        ],
        "info": "**NOTE: ** This does NOT insert a bootstrap-vue card, only\r\nan HTML block element. So the result is NOT responsive to Vue.\r\nVue and similar front-end frameworks require UI components and\r\nstructure to be pre-defined _before_ the DOM is created. So you\r\ncannot dynamically insert further Vue elements.\r\n\r\n---\r\n\r\nInserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "ec93b864b4127859",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "Send a greeting",
        "props": [
            {
                "p": "greeting",
                "v": "Hi from Node-RED 😁🚀🎆😎",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "A Message From Node-RED",
        "x": 160,
        "y": 1260,
        "wires": [
            [
                "f0c89ce59299d66c"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "ab686ecd6ae447e3",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "",
        "topic": "",
        "url": "svelte-template",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "svelte-basic",
        "extTemplate": "",
        "showfolder": false,
        "reload": true,
        "sourceFolder": "dist",
        "deployedVersion": "6.1.0",
        "showMsgUib": true,
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "1e26ba1f939b35a4"
            ],
            [
                "a9e607e92e5e2c93"
            ]
        ],
        "info": "This example uses the default blank template.\r\n\r\nIt does not use any front-end framework, just\r\npure HTML, CSS and JavaScript."
    },
    {
        "id": "1e26ba1f939b35a4",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 625,
        "y": 1200,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "a9e607e92e5e2c93",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 625,
        "y": 1260,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "53f930dee4d661c0",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 130,
        "y": 1300,
        "wires": [
            [
                "f0c89ce59299d66c"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "a75bacf5b8e676fb",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 95,
        "y": 1180,
        "wires": [
            [
                "c6965c37441712a2"
            ]
        ],
        "l": false
    },
    {
        "id": "c6965c37441712a2",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "Notification",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      // \"autoHideDelay\": 2500,\n      \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1180,
        "wires": [
            [
                "f0c89ce59299d66c"
            ]
        ],
        "info": "Overlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "28cb6bf6fb33f77c",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 95,
        "y": 1220,
        "wires": [
            [
                "1813ac9ca8eeb177"
            ]
        ],
        "l": false
    },
    {
        "id": "1813ac9ca8eeb177",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "New Card",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1220,
        "wires": [
            [
                "f0c89ce59299d66c"
            ]
        ],
        "info": "Inserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "85733cc425b92915",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "Simple Svelte Example. Chk Description in each node. Read me too",
        "info": "This example will work once you have set and\ndeployed the URL. However, if you want to make\nany changes to the front-end code, Svelte \nrequires you to _rebuild_ the destination\noutput.\n\n## Preparing\n1. Go to the server command line and navigate\nto the folder containing this example instance.\n2. In the instance root folder, run\n`npm install`. This will install all of the\nrequired development tools.\n3. Now run `npm run dev`. This starts a live\ndevelopment server and it gives you a URL.\n**IGNORE** the URL it gives you, because you\nare using Node-RED and uibuilder, you don't\nneed it 😎. Instead, you will now find that\nyour web page will automatically reload \nwhenever you save a change.\n\n## Making changes\nMost of the changes you will make will be to\nfiles in the `src` folder. However, if you\nneed to change the global CSS or the outer\nHTML template, these are in the root of the \n`dist` folder. Do not change anything in \n`dist/build` as this is overwritten by the \nSvelte build process.\n\n## Deploying\nOnce you have finished making changes, kill\nthe dev server then run `npm run build`.\n\nThat creates the final version of the code in\nthe dist folder.\n\nRemember: You are running your live pages from\nthe `dist` folder not the `src` folder.",
        "x": 300,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6eba307faa3c48e2",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 835,
        "y": 1940,
        "wires": [
            [
                "3ff7fd7992d48c25"
            ]
        ],
        "l": false
    },
    {
        "id": "3ff7fd7992d48c25",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "HTML insert (not Vue)",
        "func": "let cardCounter = context.get('cardCounter') ?? 0\n\nmsg = {\n    \"_ui\": [\n        {\n            \"method\": \"remove\",\n            \"components\": [\n                \"#mycard\"\n            ]\n        },\n        {\n            \"method\": \"add\",\n            \"parent\": \"#more\",\n            \"components\": [\n                {\n                    \"type\": \"div\",\n                    \"attributes\": {\n                        \"id\": \"mycard\",\n                        \"title\": \"This is my Card\",\n                        \"style\": \"max-width: 20rem;border:solid silver 1px;margin-bottom:1rem;\",\n                    },\n                    \"components\": [\n                        {\n                            \"type\": \"h2\",\n                            \"slot\": \"A New Card\",\n                            \"attributes\": {\n                                \"class\": \"complementary\",\n                                \"style\": \"text-align:center;margin-top:0;\"\n                            }\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Some text in a paragraph.\"\n                        },\n                        {\n                            \"type\": \"p\",\n                            \"slot\": \"Another paragraph. Count: \" + ++cardCounter\n                        }\n                    ]\n                }\n            ],\n        }\n    ]\n}\ncontext.set('cardCounter', cardCounter)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1940,
        "wires": [
            [
                "d66f87eca883848e"
            ]
        ],
        "info": "**NOTE: ** This does NOT insert a bootstrap-vue card, only\r\nan HTML block element. So the result is NOT responsive to Vue.\r\nVue and similar front-end frameworks require UI components and\r\nstructure to be pre-defined _before_ the DOM is created. So you\r\ncannot dynamically insert further Vue elements.\r\n\r\n---\r\n\r\nInserts a pure HTML \"card\" into a div called `#more`.\r\nIf that div does not exist, will add to the bottom of the HTML.\r\n\r\nFirstly attempts to remove the div so that you only ever have 1.\r\n\r\nAn example of using uibuilder's dynamic UI configuration-driven\r\nbuilding capabilities without the need for any fancy nodes or\r\nframeworks. Pure HTML. But you can still utilise the extra\r\nfeatures of your favourite framework too if you like!"
    },
    {
        "id": "f8f90bfd46b1f53e",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "Send a msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "msg-from-nr",
        "payload": "A Message From Node-RED",
        "payloadType": "str",
        "x": 890,
        "y": 1980,
        "wires": [
            [
                "7ce2b59950e22ecb"
            ]
        ],
        "info": "Send a simply msg to the front-end.\r\n\r\nThe default front-end template code will display the msg\r\nusing HTML formatting, no coding required."
    },
    {
        "id": "e340bdc745361401",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "Reload",
        "props": [
            {
                "p": "_ui",
                "v": "{\"method\":\"reload\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reload",
        "x": 870,
        "y": 2020,
        "wires": [
            [
                "619d338c7eba7669"
            ]
        ],
        "info": "Sends a pre-formatted msg to the front-end that\r\ncauses the page to reload itself."
    },
    {
        "id": "fb79d887323f47c1",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"This is the payload from the inject node! Random number: \" & $formatInteger($random()*100, \"0\")",
        "payloadType": "jsonata",
        "x": 835,
        "y": 1900,
        "wires": [
            [
                "169c10878b6640e4"
            ]
        ],
        "l": false
    },
    {
        "id": "169c10878b6640e4",
        "type": "function",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "Notification (not Vue)",
        "func": "msg = {\n  \"_uib\": {\n    // This can actually be anything, if it doesn't exist, \n    // the toast will appear in the default location\n    \"componentRef\": \"globalNotification\",\n    // Note that most if not all of these are optional\n    \"options\": {\n      // These can contain HTML - note the inclusion of the payload from the upstram msg\n      \"title\": \"This is the <i>title</i>\",\n      \"content\": `This is content <span style=\\\"color:red;\\\">in addition to</span> the payload<p>${msg.payload}</p>`,\n            \n      // Use 1 of the following 2 - click msg if no auto hide:\n      \"autoHideDelay\": 2500,\n      // \"noAutoHide\": true,\n\n      // If false or not included, msgs stack above each other.\n      \"appendToast\": true,\n\n      // See \"Recommended surfaces\" in uib-brand.css. Normally\n      // 'primary', 'secondary', 'success', 'info', 'warn', 'warning', 'failure', 'error', 'danger'\n      \"variant\": \"info\",\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1900,
        "wires": [
            [
                "d66f87eca883848e"
            ]
        ],
        "info": "**NOTE:** This uses uibuilder's vanilla HTML overlay notification\r\n(as in the non-Vue examples). **It is NOT Vue responsive**.\r\n\r\n---\r\n\r\nOverlays a message on top of your UI.\r\n\r\nThe message removes itself after a couple of seconds.\r\n\r\nYou can change the options property to change the look\r\nof the displayed message."
    },
    {
        "id": "97f0c2ea900e3055",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "uibuilder standard output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 1435,
        "y": 1920,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #1 (top) which is\r\nthe standard output.\r\n\r\nHere you will see any standard msg sent from\r\nyour front-end code."
    },
    {
        "id": "8db08ddd2a866fb5",
        "type": "debug",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "uibuilder control output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "counter",
        "x": 1435,
        "y": 1980,
        "wires": [],
        "l": false,
        "info": "This shows the data coming out of the\r\nuibuilder node's Port #2 (bottom) which is\r\nthe control output.\r\n\r\nHere you will see any control msg either sent\r\nby the node itself or from the front-end library.\r\n\r\nFor example the \"client disconnect\" and\r\n\"client connect\" messages. Or the \"visibility\"\r\nmessages from the client.\r\n\r\nLoop the \"client connect\", \"cache replay\" and\r\n\"cache clear\" messages back to a `uib-cache`\r\nnode before the input to uibuilder in order\r\nto control the output of the cache."
    },
    {
        "id": "b9a054a3ff5f393d",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "Chk Description in each node",
        "info": "",
        "x": 1250,
        "y": 1900,
        "wires": []
    },
    {
        "id": "7580041a7e962524",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "43b416daeed4d5cb",
        "name": "Plain DL List (Array)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "auto-create-dl-list",
        "payload": "[[\"Entry One\",\"Description One\"],[\"Entry Two\",\"Description Two a\",\"Description Two b\",\"Description Two c\"],[\"Entry Three\",\"Description Three\"],[\"Entry Four\",\"Description Four\"]]",
        "payloadType": "json",
        "x": 210,
        "y": 1420,
        "wires": [
            [
                "d2c23f660fba67cf"
            ]
        ]
    },
    {
        "id": "d2c23f660fba67cf",
        "type": "uib-element",
        "z": "a29cf0664c167293",
        "g": "43b416daeed4d5cb",
        "name": "",
        "topic": "eltest-dl",
        "elementtype": "dl",
        "parent": "#more",
        "parentSource": "#more",
        "parentSourceType": "str",
        "elementid": "eltest-dl",
        "elementIdSourceType": "str",
        "heading": "My DL Heading (h3)",
        "headingSourceType": "str",
        "headingLevel": "h3",
        "position": "last",
        "positionSourceType": "str",
        "confData": {},
        "x": 450,
        "y": 1420,
        "wires": [
            [
                "f0c89ce59299d66c"
            ]
        ]
    },
    {
        "id": "9eb1553c08864316",
        "type": "uib-update",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "",
        "topic": "",
        "mode": "update",
        "modeSourceType": "update",
        "cssSelector": "#more",
        "cssSelectorType": "str",
        "slotSourceProp": "payload",
        "slotSourcePropType": "msg",
        "attribsSource": "{\"style\": \"border: 1px solid silver;\"}",
        "attribsSourceType": "json",
        "slotPropMarkdown": false,
        "x": 210,
        "y": 220,
        "wires": [
            [
                "0368db6d7d446339"
            ]
        ]
    },
    {
        "id": "85bc1fad31a0dae8",
        "type": "comment",
        "z": "a29cf0664c167293",
        "name": "A set of flows that show off and test each of uibuilder's built-in templates and other features",
        "info": "",
        "x": 340,
        "y": 40,
        "wires": []
    },
    {
        "id": "bc0a93a1ec21c077",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "43b416daeed4d5cb",
        "name": "Remove",
        "props": [
            {
                "p": "mode",
                "v": "remove",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 240,
        "y": 1460,
        "wires": [
            [
                "d2c23f660fba67cf"
            ]
        ]
    },
    {
        "id": "41fd7d11ae3c157d",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"body\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "f12f44c1b6da7192"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "5ac8daccaea4a291",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Toggle Visible Status",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showStatus\",\"prop\":\"body\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "f12f44c1b6da7192"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "89bf36d6fc8d1d41",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Log Lvl 5",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"set\",\"prop\":\"logLevel\",\"value\":5}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 300,
        "wires": [
            [
                "7011f3686a81d7eb"
            ]
        ]
    },
    {
        "id": "e4f674b5eb32aa05",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "Log Lvl 0",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"set\",\"prop\":\"logLevel\",\"value\":0}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "7011f3686a81d7eb"
            ]
        ]
    },
    {
        "id": "7011f3686a81d7eb",
        "type": "link out",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "c0abb8e9c5a1262c"
        ],
        "x": 655,
        "y": 280,
        "wires": []
    },
    {
        "id": "c0abb8e9c5a1262c",
        "type": "link in",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "link in 9",
        "links": [
            "7011f3686a81d7eb"
        ],
        "x": 235,
        "y": 260,
        "wires": [
            [
                "f12f44c1b6da7192"
            ]
        ]
    },
    {
        "id": "9cf758cd9a3eda81",
        "type": "comment",
        "z": "a29cf0664c167293",
        "g": "d14e5cf8cd61d8f5",
        "name": "See \\n browser \\n console",
        "info": "",
        "x": 560,
        "y": 320,
        "wires": []
    },
    {
        "id": "71fa902dccb4cb5a",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "31c2d342f75d0ef8",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"body\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 680,
        "wires": [
            [
                "05cb4b03058fc6f8"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "b28745cf103fce72",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "40dcfdd7e47f8573",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"body\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "ca0007816b9f4419"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "6b8fde3712999f7e",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "ae89de23bbb814c1",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"body\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 1340,
        "wires": [
            [
                "f0c89ce59299d66c"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "2a6997fca56f2de1",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "1f80e4a191d5322a",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"#app_container\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 910,
        "y": 1780,
        "wires": [
            [
                "35591e8d08b9a8dc"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "5d26dd3c341a40b3",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "d7ec253e417f16b6",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"#app_container\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 1780,
        "wires": [
            [
                "c1d0beb7a8dcf573"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "c969ddb33e099a82",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "fc8f1db4547ef664",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"#app\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 2060,
        "wires": [
            [
                "3e569dd871349f93"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "29bf34be48a50467",
        "type": "inject",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "Toggle Visible Msgs",
        "props": [
            {
                "p": "_uib",
                "v": "{\"command\":\"showMsg\",\"prop\":\"#app\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 910,
        "y": 2060,
        "wires": [
            [
                "619d338c7eba7669"
            ]
        ],
        "info": "Change the \"prop\" value to a CSS Selector.\r\n\r\nThe display will appear as the last child of\r\nthat selected element.\r\n\r\ne.g. `body` or `#more`."
    },
    {
        "id": "31310a6648a194ce",
        "type": "uibuilder",
        "z": "a29cf0664c167293",
        "g": "946ef719ea12bc08",
        "name": "",
        "topic": "",
        "url": "esm-vue3-nobuild",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "templateFolder": "esm-vue3-nobuild",
        "extTemplate": "",
        "showfolder": false,
        "reload": false,
        "sourceFolder": "src",
        "deployedVersion": "6.1.0-beta",
        "showMsgUib": false,
        "x": 1280,
        "y": 1960,
        "wires": [
            [
                "97f0c2ea900e3055"
            ],
            [
                "8db08ddd2a866fb5"
            ]
        ]
    }
]